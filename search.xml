<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[LVS之DR类型实验]]></title>
      <url>/2017/12/29/LVS%E4%B9%8BDR%E7%B1%BB%E5%9E%8B%E5%AE%9E%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>由 于IPv4中IP地址空间的日益紧张和安全方面的原因，很多网络使用保留IP地址（10.0.0.0/255.0.0.0、 172.16.0.0/255.128.0.0和192.168.0.0/255.255.0.0）。这些地址不在Internet上使用，而是专门为内部网络预留的。当内部网络中的主机要访问Internet或被Internet访问时，就需要 采用网络地址转换（Network Address Translation, 以下简称NAT），将内部地址转化为Internets上可用的外部地址。NAT的工作原理是报文头（目标地址、源地址和端口等）被正确改写后，客户相信 它们连接一个IP地址，而不同IP地址的服务器组也认为它们是与客户直接相连的。由此，可以用NAT方法将不同IP地址的并行网络服务变成在一个IP地址上的一个虚拟服务。<br><a id="more"></a></p>
<h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>VS/NAT的体系结构如图所示。在一组服务器前有一个调度器，它们是通过Switch/HUB相连接的。这些服务器 提供相同的网络服务、相同的内容，即不管请求被发送到哪一台服务器，执行结果是一样的。服务的内容可以复制到每台服务器的本地硬盘上，可以通过网络文件系 统（如NFS）共享，也可以通过一个分布式文件系统来提供。<br>客户通过Virtual IP Address(虚拟服务器的地址)访问网络服务时，请求报文到达调度器，调度器根据连接调度算法从一组真实的服务器中选出一台服务器，将报文的目标地址Virtual IP Address改写成选定服务器的地址，报文的目标端口改写成选定服务器的相应端口，最后将修改后的报文发送给选出的服务器。同时，调度器在连接Hash表中记录这个连接，当这个连接的下一个报文到达时，从连接Hash表中可以得到原选定服务器的地址和端口，进行同样的改写操作，并将报文传给原选定的服务器。当来自真实的服务器的响应报文经过调度器时，调度器将报文的源地址和源端口改为Virtual IP Address和相应的端口，再把报文发给用户。  </p>
<h4 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h4><p><img src="http://ovnpik36u.bkt.clouddn.com/201710/lvs/Lvs-nat.png" alt="image">  </p>
<h5 id="Lvs配置"><a href="#Lvs配置" class="headerlink" title="Lvs配置"></a>Lvs配置</h5><p>安装lvs管理程序包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#yum install -y ipvsadm</span></div></pre></td></tr></table></figure></p>
<p>查看并开启Lvs服务器的转发功能<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#cat /proc/sys/net/ipv4/ip_forward</span></div><div class="line">0</div><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/sysctl.conf</span></div><div class="line">net.ipv4.ip_forward = 1     //添加该项</div><div class="line">[root@CentOS7 ~]<span class="comment">#sysctl -p</span></div><div class="line">net.ipv4.ip_forward = 1</div><div class="line">[root@CentOS7 ~]<span class="comment">#cat /proc/sys/net/ipv4/ip_forward</span></div><div class="line">1</div></pre></td></tr></table></figure></p>
<p>定义lvs服务端口和调度算法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -A -t 172.18.125.70:80 -s rr</span></div><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -L -n</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.18.125.70:80 rr</div></pre></td></tr></table></figure></p>
<p>添加三台Real Server，并指定Lvs为Nat类型<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -a -t 172.18.125.70:80 -r 192.168.25.71 -m</span></div><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -a -t 172.18.125.70:80 -r 192.168.25.72 -m</span></div><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -a -t 172.18.125.70:80 -r 192.168.25.73 -m</span></div></pre></td></tr></table></figure></p>
<p>查看配置的Lvs<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -Ln</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.18.125.70:80 rr</div><div class="line">  -&gt; 192.168.25.71:80             Masq    1      0          0         </div><div class="line">  -&gt; 192.168.25.72:80             Masq    1      0          0         </div><div class="line">  -&gt; 192.168.25.73:80             Masq    1      0          0</div></pre></td></tr></table></figure></p>
<p>保存Lvs配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -S -n &gt; /etc/sysconfig/ipvsadm</span></div><div class="line">[root@lvs ~]<span class="comment">#cat /etc/sysconfig/ipvsadm</span></div><div class="line">-A -t 172.18.125.70:80 -s rr</div><div class="line">-a -t 172.18.125.70:80 -r 192.168.25.71:80 -m -w 1</div><div class="line">-a -t 172.18.125.70:80 -r 192.168.25.72:80 -m -w 1</div><div class="line">-a -t 172.18.125.70:80 -r 192.168.25.73:80 -m -w 1</div></pre></td></tr></table></figure></p>
<p>查看当前的连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -L -c</span></div><div class="line">IPVS connection entries</div><div class="line">pro expire state       <span class="built_in">source</span>             virtual            destination</div><div class="line">TCP 00:35  TIME_WAIT   172.18.125.254:4505 lvs:http           192.168.25.72:http</div><div class="line">TCP 00:36  TIME_WAIT   172.18.125.254:4768 lvs:http           192.168.25.73:http</div><div class="line">TCP 00:35  TIME_WAIT   172.18.125.254:4413 lvs:http           192.168.25.73:http</div><div class="line">TCP 00:36  TIME_WAIT   172.18.125.254:4770 lvs:http           192.168.25.72:http</div><div class="line">TCP 00:35  TIME_WAIT   172.18.125.254:qsnet-nucl lvs:http           192.168.25.72:http</div><div class="line">TCP 00:34  TIME_WAIT   172.18.125.254:dlms-cosem lvs:http           192.168.25.71:http</div><div class="line">TCP 00:34  TIME_WAIT   172.18.125.254:cppdp lvs:http           192.168.25.72:http</div><div class="line">TCP 00:36  TIME_WAIT   172.18.125.254:4810 lvs:http           192.168.25.73:http</div><div class="line">TCP 00:35  TIME_WAIT   172.18.125.254:drizzle lvs:http           192.168.25.72:http</div><div class="line">TCP 00:36  TIME_WAIT   172.18.125.254:4822 lvs:http           192.168.25.73:http</div><div class="line">TCP 00:34  TIME_WAIT   172.18.125.254:g2tag lvs:http           192.168.25.71:http</div><div class="line">TCP 00:36  TIME_WAIT   172.18.125.254:4693 lvs:http           192.168.25.73:http</div></pre></td></tr></table></figure></p>
<p>查看统计信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -L -n --stats</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes</div><div class="line">  -&gt; RemoteAddress:Port</div><div class="line">TCP  172.18.125.70:80               310571  1789077  1653216  119476K  170624K</div><div class="line">  -&gt; 192.168.25.71:80               103184   597138   549023 39964632 56749323</div><div class="line">  -&gt; 192.168.25.72:80               103184   593176   550743 39551427 56869548</div><div class="line">  -&gt; 192.168.25.73:80               104203   598763   553450 39960921 57005459</div></pre></td></tr></table></figure></p>
<p>查看速率统计<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@lvs ~]<span class="comment">#ipvsadm -L -n --rate</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port                 CPS    InPPS   OutPPS    InBPS   OutBPS</div><div class="line">  -&gt; RemoteAddress:Port</div><div class="line">TCP  172.18.125.70:80                    5       24       23     1377     2325</div><div class="line">  -&gt; 192.168.25.71:80                    2        8        8      467      790</div><div class="line">  -&gt; 192.168.25.72:80                    2        8        8      471      790</div><div class="line">  -&gt; 192.168.25.73:80                    1        7        7      439      744</div></pre></td></tr></table></figure></p>
<h4 id="错误总结"><a href="#错误总结" class="headerlink" title="错误总结"></a>错误总结</h4><p>最好在<code>/etc/hosts</code>文件里面配置对应的主机名，不然<code>ipvsadm -S</code>保存的是主机名，导入后的主机名反解后会解析到公网上的其他服务器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -Ln</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  172.18.125.70:80 rr</div><div class="line">  -&gt; 192.168.25.71:80             Masq    1      0          2         </div><div class="line">  -&gt; 192.168.25.72:80             Masq    1      0          3         </div><div class="line">  -&gt; 192.168.25.73:80             Masq    1      0          1         </div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -S &gt; /etc/sysconfig/ipvsadm </span></div><div class="line">[root@CentOS7 ~]<span class="comment">#cat /etc/sysconfig/ipvsadm</span></div><div class="line">-A -t CentOS7.COM:http -s rr</div><div class="line">-a -t CentOS7.COM:http -r 192.168.25.71:http -m -w 1</div><div class="line">-a -t CentOS7.COM:http -r 192.168.25.72:http -m -w 1</div><div class="line">-a -t CentOS7.COM:http -r 192.168.25.73:http -m -w 1</div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -C</span></div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -Ln</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -R /etc/sysconfig/ipvsadm</span></div><div class="line">unexpected argument /etc/sysconfig/ipvsadm</div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -R &lt; /etc/sysconfig/ipvsadm</span></div><div class="line">Memory allocation problem</div><div class="line">Memory allocation problem</div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -Ln</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  52.71.185.125:80 rr</div><div class="line">  -&gt; 192.168.25.72:80             Masq    1      0          0         </div><div class="line">[root@CentOS7 ~]<span class="comment">#ipvsadm -Ln</span></div><div class="line">IP Virtual Server version 1.2.1 (size=4096)</div><div class="line">Prot LocalAddress:Port Scheduler Flags</div><div class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</div><div class="line">TCP  52.71.185.125:80 rr</div><div class="line">  -&gt; 192.168.25.72:80             Masq    1      0          0</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LVS </tag>
            
            <tag> Linux实验 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx]]></title>
      <url>/2017/10/27/Nginx/</url>
      <content type="html"><![CDATA[<h4 id="Nginx介绍"><a href="#Nginx介绍" class="headerlink" title="Nginx介绍"></a>Nginx介绍</h4><p>Nginx（发音同engine x）是一个 Web服务器，也可以用作反向代理，负载平衡器和 HTTP缓存。该软件由 Igor Sysoev 创建，并于2004年首次公开发布。同名公司成立于2011年，以提供支持。Nginx 是免费的开源软件，根据类似 BSD许可证的条款发布。大部分 Web服务器通常使用 NGINX 作为负载均衡器。  </p>
<a id="more"></a>
<h5 id="Nginx的特性"><a href="#Nginx的特性" class="headerlink" title="Nginx的特性"></a>Nginx的特性</h5><ul>
<li>高可靠性  </li>
<li>支持热部署：不停机更新配置文件，升级版本，更换日志文件  </li>
<li>低内存消耗：10000个keep-alive连接模式下的非活动连接，仅需要2.5M内存  </li>
<li>event-driven, aio, mmap, sendfile  </li>
</ul>
<h5 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h5><ul>
<li>静态资源的web服务器  <ul>
<li>HTML, 图片, js, css, txt等静态资源</li>
</ul>
</li>
<li>http协议反向代理服务器  </li>
<li>pop3/IMAP4协议反向代理服务器  </li>
<li>结合FastCGI(LNMP)/uWSGI(Python)/SCGI等协议反向代理动态资源请求    </li>
<li>TCP/UDP协议的请求转发(反向代理)  </li>
</ul>
<h5 id="WEB服务的相关功能"><a href="#WEB服务的相关功能" class="headerlink" title="WEB服务的相关功能"></a>WEB服务的相关功能</h5><ul>
<li>虚拟机（Server）  </li>
<li>支持Keep-alive和管道连接  </li>
<li>访问日志（支持基于日志缓冲提高性能）  </li>
<li>Url Rewirte  </li>
<li>路径别名  </li>
<li>基于IP及用户的访问控制  </li>
<li>支持速率限制及并发数限制  </li>
<li>重新配置和在线升级而无须终端客户的工作进程  </li>
<li>Memcached 的GET接口  </li>
</ul>
<h5 id="Nginx的程序架构"><a href="#Nginx的程序架构" class="headerlink" title="Nginx的程序架构"></a>Nginx的程序架构</h5><p><img src="http://ovnpik36u.bkt.clouddn.com/201710/nginx/NginxFramework.png" alt="image"><br><strong>Nginx的程序架构</strong><br>Master/Worker结构  </p>
<ul>
<li>一个Maser进程负责加载和分析配置文件、管理worker进程、平滑升级  </li>
<li>一个或多个worker进程处理并响应用户请求  </li>
<li>缓存相关的进程：  <ul>
<li>cache loader:载入缓存对象  </li>
<li>cache manager：管理缓存对象  </li>
</ul>
</li>
</ul>
<h5 id="Nginx模块"><a href="#Nginx模块" class="headerlink" title="Nginx模块"></a>Nginx模块</h5><p>nginx高度模块化，但其模块早期不支持DSO机制； 1.9.11版本支持动态装载和卸载  </p>
<h6 id="模块分类"><a href="#模块分类" class="headerlink" title="模块分类"></a>模块分类</h6><ul>
<li>核心模块：Core module  </li>
<li>标准模块：  <ul>
<li>HTTP模块：ngx<em>http</em>*<ul>
<li>HTTP Core modules 默认功能  </li>
<li>HTTP Optional modules 需编译时指定  </li>
</ul>
</li>
<li>Mail模块：ngx<em>mail</em>*  </li>
<li>Stream模块：ngx<em>stream</em>*  </li>
</ul>
</li>
<li>第三方模块  </li>
</ul>
<h4 id="Nginx的安装"><a href="#Nginx的安装" class="headerlink" title="Nginx的安装"></a>Nginx的安装</h4><h5 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://nginx.org/packages/centos/7/x86_64/RPMS</div></pre></td></tr></table></figure>
<h5 id="Fedora-EPEL"><a href="#Fedora-EPEL" class="headerlink" title="Fedora-EPEL"></a>Fedora-EPEL</h5><p>在CentOS的官方yum源里并没有提供Nginx软件包，所以我们需要配置<code>Fedora-EPEL</code>源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://mirrors.aliyun.com/epel/7/x86_64/</div></pre></td></tr></table></figure></p>
<h5 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h5><p>编译前先安装依赖的开发包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install pcre-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure></p>
<p>创建Nginx程序管理用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -r nginx</div></pre></td></tr></table></figure></p>
<p>编译安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_dav_module --with-http_stub_status_module --with-threads --with-file-aio</div><div class="line">make &amp;&amp; make instll</div></pre></td></tr></table></figure></p>
<h5 id="编译安装选项"><a href="#编译安装选项" class="headerlink" title="编译安装选项"></a>编译安装选项</h5><ul>
<li><p>指定安装路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--prefix=/etc/nginx</div></pre></td></tr></table></figure>
</li>
<li><p>指明Nginx程序文件的安装路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--sbin-path=/usr/sbin/nginx</div></pre></td></tr></table></figure>
</li>
<li><p>指明主配置文件安装路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--conf-path=/etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
</li>
<li><p>指定错误日志文件安装位置  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--error-log-path=/var/<span class="built_in">log</span>/nginx/error.log</div></pre></td></tr></table></figure>
</li>
<li><p>访问日志文件安装位置  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log</div></pre></td></tr></table></figure>
</li>
<li><p>指明pid文件安装位置  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--pid-path=/var/run/nginx.pid</div></pre></td></tr></table></figure>
</li>
<li><p>指定锁文件安装位置  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--lock-path=/var/run/nginx.lock</div></pre></td></tr></table></figure>
</li>
<li><p>客户端body部分的临时文件存放路径<br>如果服务器允许客户端使用put方法提交大数据时，临时存放的磁盘路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-client-body-temp-path=/var/cache/nginx/client_temp</div></pre></td></tr></table></figure>
</li>
<li><p>作为代理服务器，服务器响应报文的临时文件存放路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-proxy-temp-path=/var/cache/nginx/proxy_temp</div></pre></td></tr></table></figure>
</li>
<li><p>作为fastcgi代理服务器，服务器响应报文的临时文件存放路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp</div></pre></td></tr></table></figure>
</li>
<li><p>作为uwsgi代理服务器，服务器响应报文的临时文件存放路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-uwsigi-temp-path=/var/cache/nginx/uwsgi_temp</div></pre></td></tr></table></figure>
</li>
<li><p>作为scgi反代服务器，服务器响应报文的临时文件存放路径  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--http-scgi-temp-path=/var/cache/nginx/scgi_temp</div></pre></td></tr></table></figure>
</li>
<li><p>指明以哪个身份运行worker进程，主控master进程一般由root运行  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--user=nginx</div><div class="line">--group=nginx</div></pre></td></tr></table></figure>
</li>
<li><p>把指定模块编译进来  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--with-http_ssl_module</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="Nginx目录结构和命令"><a href="#Nginx目录结构和命令" class="headerlink" title="Nginx目录结构和命令"></a>Nginx目录结构和命令</h4><h5 id="Nginx的目录结构"><a href="#Nginx的目录结构" class="headerlink" title="Nginx的目录结构"></a>Nginx的目录结构</h5><p>以CentOS7.3上安装的Nginx-1.10.2为例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">[root@centos7 ~]<span class="comment">#rpm -ql nginx</span></div><div class="line">/etc/logrotate.d/nginx                          -</div><div class="line">/etc/nginx/fastcgi.conf                          |</div><div class="line">/etc/nginx/fastcgi.conf.default                  |</div><div class="line">/etc/nginx/fastcgi_params                        |</div><div class="line">/etc/nginx/fastcgi_params.default                |</div><div class="line">/etc/nginx/koi-utf                               |   </div><div class="line">/etc/nginx/koi-win                               ||</div><div class="line">/etc/nginx/mime.types                            ||&#125;&gt; 配置文件相关</div><div class="line">/etc/nginx/mime.types.default                    ||</div><div class="line">/etc/nginx/nginx.conf                            |</div><div class="line">/etc/nginx/nginx.conf.default                    |</div><div class="line">/etc/nginx/scgi_params                           |</div><div class="line">/etc/nginx/scgi_params.default                   |</div><div class="line">/etc/nginx/uwsgi_params                          |</div><div class="line">/etc/nginx/uwsgi_params.default                  |</div><div class="line">/etc/nginx/win-utf                              -</div><div class="line">/usr/bin/nginx-upgrade</div><div class="line">/usr/lib/systemd/system/nginx.service           Systemctl服务管理脚本</div><div class="line">/usr/lib64/nginx/modules</div><div class="line">/usr/sbin/nginx                                 Nginx主程序</div><div class="line">/usr/share/doc/nginx-1.10.2</div><div class="line">/usr/share/doc/nginx-1.10.2/CHANGES</div><div class="line">/usr/share/doc/nginx-1.10.2/README</div><div class="line">/usr/share/doc/nginx-1.10.2/README.dynamic</div><div class="line">/usr/share/doc/nginx-1.10.2/UPGRADE-NOTES-1.6-to-1.10</div><div class="line">/usr/share/licenses/nginx-1.10.2</div><div class="line">/usr/share/licenses/nginx-1.10.2/LICENSE</div><div class="line">/usr/share/man/man3/nginx.3pm.gz</div><div class="line">/usr/share/man/man8/nginx-upgrade.8.gz</div><div class="line">/usr/share/man/man8/nginx.8.gz</div><div class="line">/usr/share/nginx/html/404.html</div><div class="line">/usr/share/nginx/html/50x.html</div><div class="line">/usr/share/nginx/html/index.html</div><div class="line">/usr/share/nginx/html/nginx-logo.png</div><div class="line">/usr/share/nginx/html/poweredby.png</div><div class="line">/usr/share/vim/vimfiles/ftdetect/nginx.vim</div><div class="line">/usr/share/vim/vimfiles/indent/nginx.vim</div><div class="line">/usr/share/vim/vimfiles/syntax/nginx.vim</div><div class="line">/var/lib/nginx</div><div class="line">/var/lib/nginx/tmp</div><div class="line">/var/<span class="built_in">log</span>/nginx                                  日志目录</div></pre></td></tr></table></figure></p>
<h5 id="Nginx命令"><a href="#Nginx命令" class="headerlink" title="Nginx命令"></a>Nginx命令</h5><p><code>/usr/sbin/nginx</code>:默认为启动nginx<br>常用参数<br><code>-h</code>: 查看帮助选项<br><code>-t</code>: 测试nginx语法错误<br><code>-c filename</code>：指定配置文件（default:/etc/nginx/nginx.conf）<br><code>-s signal</code>: 发送信号给master进程，signal可为：<code>stop</code>, <code>quit</code>, <code>reopen</code>, <code>reload</code><br><code>-g directives</code>: 在命令行中指明全局指令  </p>
<h4 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h4><p>正常运行必备的配置：<a href="http://nginx.org/en/docs/ngx_core_module.html" target="_blank" rel="external">帮助文档</a>  </p>
<ul>
<li>user  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Syntax:     user  user  [group];</div><div class="line">Default:    user  nobody  nobody;</div><div class="line">Context:    main</div></pre></td></tr></table></figure>
</li>
</ul>
<p>指定worker进程的运行身份，如果不指定，默认和用户名同名  </p>
<ul>
<li>pid /PATH/TO/PID_FILE<br>  指定存储nginx主进程PID的文件路径  </li>
<li>include file | mask<br>  指明包含进来的其他配置文件片段  </li>
<li>load_module file<br>  模块加载配置文件：/usr/share/nginx/modules/*.conf<br>  指明要装载的动态模块路径：/usr/lib64/nginx/modules  </li>
</ul>
<h5 id="配置文件的组成部分"><a href="#配置文件的组成部分" class="headerlink" title="配置文件的组成部分"></a>配置文件的组成部分</h5><ul>
<li>主配置文件：nginx.conf  </li>
<li>子配置文件：include conf.d/*.conf  </li>
<li>fastcgi, uwsgi, scgi等协议相关的配置文件  </li>
<li>mime.types: 支持的mime类型  </li>
</ul>
<p>注意：</p>
<ul>
<li>[x] 指令必须以分行结尾  </li>
<li>[x] 支持使用配置变量  <ul>
<li>自建变量：由Nginx模块引入，可直接引用  </li>
<li>自定义变量：由用户使用set命令定义<br>  <code>set variable_name value;</code>  </li>
<li>引用变量：<code>$variable_name</code>  </li>
</ul>
</li>
</ul>
<h5 id="Nginx主配置文件结构"><a href="#Nginx主配置文件结构" class="headerlink" title="Nginx主配置文件结构"></a>Nginx主配置文件结构</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">main block：主配置段，即全局配置段，对http,mail都有效  </div><div class="line">    event &#123;  </div><div class="line">            ...  </div><div class="line">                &#125; 事件驱动相关的配置  </div><div class="line">http &#123;  </div><div class="line">        ...  </div><div class="line">            &#125; http/https 协议相关配置段  </div><div class="line">mail &#123;  </div><div class="line">        ...  </div><div class="line">        &#125; mail 协议相关配置段  </div><div class="line">stream &#123;  </div><div class="line">            ...  </div><div class="line">                &#125; stream 服务器相关配置段</div></pre></td></tr></table></figure>
<h6 id="Main全局配置段常见的配置指令分类"><a href="#Main全局配置段常见的配置指令分类" class="headerlink" title="Main全局配置段常见的配置指令分类"></a>Main全局配置段常见的配置指令分类</h6><ul>
<li>正常运行必备的配置  </li>
<li>优化性能相关的配置  </li>
<li>用于调试及定位问题相关的配置  </li>
<li>事件驱动相关的配置<br><a href="http://nginx.org/en/docs/" target="_blank" rel="external">配置帮助文档</a>  </li>
</ul>
<h6 id="http协议相关的配置结构"><a href="#http协议相关的配置结构" class="headerlink" title="http协议相关的配置结构"></a>http协议相关的配置结构</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">http &#123;</div><div class="line">        ...</div><div class="line">        ... 各server的公共配置</div><div class="line">        server &#123; 每个server用于定义一个虚拟主机</div><div class="line">                ...</div><div class="line">            &#125;</div><div class="line">        server &#123;</div><div class="line">                ...</div><div class="line">                server_name 虚拟主机名</div><div class="line">                root 主目录</div><div class="line">                <span class="built_in">alias</span> 路径别名</div><div class="line">                location [OPERATOR] URL &#123; 指定URL的特性</div><div class="line">                ...</div><div class="line">                    <span class="keyword">if</span> CONDITION &#123;</div><div class="line">                    ...</div><div class="line">                        &#125;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h6 id="性能优化相关的配置："><a href="#性能优化相关的配置：" class="headerlink" title="性能优化相关的配置："></a>性能优化相关的配置：</h6><ul>
<li>worker_processes number | auto<br>worker进程的数量；通常应该为当前主机的cpu的物理核心数  </li>
<li><p>worker_cpu_affinity cpumask …<br>worker_cpu_affinity auto [cpumask] 提高缓存命中率  </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">CPU MASK： 00000001： 0号CPU</div><div class="line">00000010： 1号CPU</div><div class="line">10000000： 8号CPU</div><div class="line">worker_cpu_affinity 0001 0010 0100 1000;</div><div class="line">worker_cpu_affinity 0101 1010;</div></pre></td></tr></table></figure>
</li>
<li><p>worker_priority number<br>指定worker进程的nice值，设定worker进程优先级： [-20,20]  </p>
</li>
<li>worker_rlimit_nofile number<br>worker进程所能够打开的文件数量上限,如65535  </li>
</ul>
<h6 id="事件驱动相关的配置"><a href="#事件驱动相关的配置" class="headerlink" title="事件驱动相关的配置"></a>事件驱动相关的配置</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">events &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>worker_connections number<br>每个worker进程所能够打开的最大并发连接数数量，如10240<br>总最大并发数： worker_processes * worker_connections  </li>
<li>use method<br>指明并发连接请求的处理方法,默认自动选择最优方法<br>use epoll;  </li>
<li>ccept_mutex on | off 互斥<br>处理新的连接请求的方法； on指由各个worker轮流处理新请求， Off指每个新请求的到达都会通知(唤醒)所有的worker进程，但只有一个进程可获得连接，造成“惊群”，影响性能，默认on</li>
</ul>
<h6 id="调试和定位问题"><a href="#调试和定位问题" class="headerlink" title="调试和定位问题"></a>调试和定位问题</h6><ul>
<li>daemon on|off<br>是否以守护进程方式运行nignx，默认是守护进程方式  </li>
<li>master_process on|off<br>是否以master/worker模型运行nginx；默认为on,off 将不启动worker  </li>
<li>error_log file [level]<br>错误日志文件及其级别；出于调试需要， 可设定为debug；但debug仅在编译时使用了“–with-debug”选项时才有效<br>方式： file /path/logfile;<br>stderr:发送到标准错误<br>syslog:server-address[,parameter=values]:发送到syslog<br>memory:size 内存<br>level:debug|info|notice|warn|error|crit|alter|emerg  </li>
</ul>
<h5 id="ngx-http-core-module"><a href="#ngx-http-core-module" class="headerlink" title="ngx_http_core_module"></a>ngx_http_core_module</h5><ol>
<li>与套接字相关的配置   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">server &#123; ... &#125;</div><div class="line">配置一个虚拟主机</div><div class="line">server &#123;</div><div class="line">listen address[:PORT]|PORT;</div><div class="line">server_name SERVER_NAME;</div><div class="line">root /PATH/TO/DOCUMENT_ROOT;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>listen PORT|address[:port]|unix:/PATH/TO/SOCKET_FILE<br> listen address[:port] [default_server] [ssl] [http2 | spdy]<br> [backlog=number] [rcvbuf=size] [sndbuf=size]<br> default_server 设定为默认虚拟主机<br> ssl 限制仅能够通过ssl连接提供服务<br> backlog=number 超过并发连接数后，新请求进入后援队列的长度<br> rcvbuf=size 接收缓冲区大小<br> sndbuf=size 发送缓冲区大小  </p>
<blockquote>
<p>注意：<br>(1) 基于port；<br>listen PORT; 指令监听在不同的端口<br>(2) 基于ip的虚拟主机<br>listen IP:PORT; IP 地址不同<br>(3) 基于hostname<br>server_name fqdn; 指令指向不同的主机名  </p>
</blockquote>
</li>
<li><p>server_name name …;  </p>
</li>
</ol>
<ul>
<li>虚拟主机的主机名称后可跟多个由空白字符分隔的字符串  </li>
<li><p>支持*通配任意长度的任意字符  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_name *.magedu.com www.magedu.*</div></pre></td></tr></table></figure>
</li>
<li><p>支持~起始的字符做正则表达式模式匹配，性能原因慎用  </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server_name ~^www\d+\.magedu\.com$</div></pre></td></tr></table></figure>
<p>  <code>\d</code> 表示 <code>[0-9]</code>  </p>
</li>
<li>匹配优先级机制从高到低：<br>(1) 首先是字符串精确匹配 如： www.magedu.com<br>(2) 左侧<em>通配符 如： </em>.magedu.com<br>(3) 右侧<em>通配符 如： www.magedu.</em><br>(4) 正则表达式 如： ~^.*.magedu.com$<br>(5) default_server  </li>
</ul>
<ol>
<li><p>tcp_nodelay on | off;<br>在keepalived模式下的连接是否启用TCP_NODELAY选项<br>当为off时，延迟发送，合并多个请求后再发送<br>默认On时，不延迟发送<br>可用于： http, server, location   </p>
</li>
<li><p>sendfile on | off;<br>是否启用sendfile功能，在内核中封装报文直接发送<br>默认Off  </p>
</li>
<li><p>server_tokens on | off | build | string<br> 是否在响应报文的Server首部显示nginx版本<br> 定义路径相关的配置  </p>
</li>
<li><p>root<br>设置web资源的路径映射；用于指明请求的URL所对应的文档的目录路径，可用于http, server, location, if in location  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">...</div><div class="line">root /data/www/vhost1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 示例  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://www.magedu.com/images/logo.jpg</div><div class="line">    --&gt; /data/www/vhosts/images/logo.jpg</div></pre></td></tr></table></figure>
</li>
<li><p><code>location [ = | ~ | ~* | ^~ ] uri { ... }</code><br> location @name { … }<br>在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射； ngnix会根据用户请求的URI来检查定义的所有location，并找出一个最佳匹配，而后应用其配置<br> 示例：  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">server &#123;...</div><div class="line">        server_name www.magedu.com;</div><div class="line">        location /images/ &#123;</div><div class="line">        root /data/imgs/;</div><div class="line">            &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://www.magedu.com/images/logo.jpg</div><div class="line">--&gt; /data/imgs/images/logo.jpg</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><p><code>=</code>：对URI做精确匹配；  </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">location = / &#123;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  <a href="http://www.magedu.com/" target="_blank" rel="external">http://www.magedu.com/</a> 匹配<br>  <a href="http://www.magedu.com/index.html" target="_blank" rel="external">http://www.magedu.com/index.html</a> 不匹配  </p>
</li>
<li><code>^~</code>：对URI的最左边部分做匹配检查，不区分字符大小写  </li>
<li><code>~</code>：对URI做正则表达式模式匹配，区分字符大小写  </li>
<li><code>~*</code>：对URI做正则表达式模式匹配，不区分字符大小写  </li>
<li><code>不带符号</code>：匹配起始于此uri的所有的uri  </li>
<li>匹配优先级从高到低：<br>  =, ^~, ～/～*, 不带符号  </li>
</ul>
<ol>
<li>alias path;<br>路径别名，文档映射的另一种机制；仅能用于location上下文<br>示例：<br><a href="http://www.magedu.com/bbs/index.php" target="_blank" rel="external">http://www.magedu.com/bbs/index.php</a>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">location /bbs/ &#123;</div><div class="line"><span class="built_in">alias</span> /web/forum/;</div><div class="line">&#125; --&gt; /web/forum/index.html</div><div class="line">location /bbs/ &#123;</div><div class="line">root /web/forum/;</div><div class="line">&#125; --&gt; /web/forum/bbs/index.html</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>注意： location中使用root指令和alias指令的意义不同<br>  (a) root，给定的路径对应于location中的/uri/左侧的/<br>  (b) alias，给定的路径对应于location中的/uri/右侧的/  </p>
</blockquote>
<ol>
<li><p>index file …;<br>指定默认网页资源，注意： ngx_http_index_module模块  </p>
</li>
<li><p>error_page code … [=[response]] uri;<br>模块： ngx_http_core_module<br>定义错误页， 以指定的响应状态码进行响应<br>可用位置： http, server, location, if in location  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">error_page 404 /404.html</div><div class="line">error_page 404 =200 /404.html</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><code>try_files file ... uri;</code><br><code>try_files file ... =code;</code><br>按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹），如果所有的文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。只有最后一个参数可以引起一个内部重定向，之前的参数只设置内部URI的指向。最后一个参数是回退URI且必须存在，否则会出现内部500错误  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">location /images/ &#123; try_files <span class="variable">$uri</span> /images/default.gif; &#125;</div><div class="line">location / &#123; try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/index.html <span class="variable">$uri</span>.html =404; &#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>定义客户端请求的相关配置</strong>  </p>
<ol>
<li><p>keepalive_timeout timeout [header_timeout];<br>设定保持连接超时时长， 0表示禁止长连接， 默认为75s  </p>
</li>
<li><p>keepalive_requests number;<br>在一次长连接上所允许请求的资源的最大数量,默认为100  </p>
</li>
<li><p>keepalive_disable none | browser …<br>对哪种浏览器禁用长连接  </p>
</li>
<li><p>send_timeout time;<br>向客户端发送响应报文的超时时长，此处是指两次写操作<br>之间的间隔时长，而非整个响应过程的传输时长  </p>
</li>
<li><p>client_body_buffer_size size;<br>用于接收每个客户端请求报文的body部分的缓冲区大小；默认为16k；超出此大小时，其将被暂存到磁盘上的由<br>client_body_temp_path指令所定义的位置  </p>
</li>
<li><p>client_body_temp_path path [level1 [level2[level3]]];<br>设定用于存储客户端请求报文的body部分的临时存储路径及子目录结构和数量<br>目录名为16进制的数字；  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client_body_temp_path /var/tmp/client_body 1 2 2</div></pre></td></tr></table></figure>
</li>
</ol>
<p>1 1级目录占1位16进制，即2^4=16个目录 0-f<br>2 2级目录占2位16进制，即2^8=256个目录 00-ff<br>2 3级目录占2位16进制， 即2^8=256个目录 00-ff  </p>
<p><strong>对客户端进行限制的相关配置</strong>  </p>
<ol>
<li><p>limit_rate rate;<br>限制响应给客户端的传输速率，单位是bytes/second<br>默认值0表示无限制  </p>
</li>
<li><p>limit_except method … { … }，仅用于location<br>限制客户端使用除了指定的请求方法之外的其它方法<br>method:GET, HEAD, POST, PUT, DELETE MKCOL, COPY, MOVE, OPTIONS, PROPFIND,PROPPATCH, LOCK, UNLOCK, PATCH</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">limit_except GET &#123;</div><div class="line">allow 192.168.1.0/24;</div><div class="line">deny all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>除了GET和HEAD 之外其它方法仅允许192.168.1.0/24网段主机使用  </p>
<p><strong>文件操作优化的配置</strong>  </p>
<ol>
<li><p>aio on | off | threads[=pool];<br>是否启用aio功能  </p>
</li>
<li><p>directio size | off;<br>是否同步（直接）写磁盘，而非写缓存，在Linux主机启用<br>O_DIRECT标记， 则文件大于等于给定大小时使用，例如directio 4m  </p>
</li>
<li><p>open_file_cache off;<br>open_file_cache max=N [inactive=time];<br>nginx可以缓存以下三种信息：  </p>
</li>
</ol>
<ul>
<li>文件元数据：文件的描述符、文件大小和最近一次的修改时间  </li>
<li>打开的目录结构  </li>
<li>没有找到的或者没有权限访问的文件的相关信息<br><code>max=N</code>：可缓存的缓存项上限；达到上限后会使用LRU算法实现管理<br><code>inactive=time</code>：缓存项的非活动时长，在此处指定的时长内未被命中的或命中的次数少于open_file_cache_min_uses指令所指定的次数的缓存项即为非活动项， 将被删除  </li>
</ul>
<ol>
<li><p>open_file_cache_errors on | off;<br>是否缓存查找时发生错误的文件一类的信息,默认值为off  </p>
</li>
<li><p>open_file_cache_min_uses number;<br>open_file_cache指令的inactive参数指定的时长内，至少被命中此处指定的次数方可被归类为活动项,默认值为1  </p>
</li>
<li><p>open_file_cache_valid time;<br>缓存项有效性的检查频率,默认值为60s  </p>
</li>
</ol>
<h5 id="ngx-http-access-module"><a href="#ngx-http-access-module" class="headerlink" title="ngx_http_access_module"></a>ngx_http_access_module</h5><p>实现基于IP的访问控制功能  </p>
<ul>
<li>allow address | CIDR | unix: | all;  </li>
<li>deny address | CIDR | unix: | all;<br>http, server, location, limit_except<br>自上而下检查，一旦匹配，将生效，条件严格的置前<br>示例：    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location / &#123;</div><div class="line">deny 192.168.1.1;</div><div class="line">allow 192.168.1.0/24;</div><div class="line">allow 10.1.1.0/16;</div><div class="line">allow 2001:0db8::/32;</div><div class="line">deny all;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="ngx-http-auth-basic-module"><a href="#ngx-http-auth-basic-module" class="headerlink" title="ngx_http_auth_basic_module"></a>ngx_http_auth_basic_module</h5><p>实现基于用户的访问控制，使用basic机制进行用户认证  </p>
<ul>
<li>auth_basic string | off;  </li>
<li>auth_basic_user_file file;    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">location /admin/ &#123;</div><div class="line">auth_basic <span class="string">"Admin Area"</span>;</div><div class="line">auth_basic_user_file /etc/nginx/.ngxpasswd;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>用户口令：  </p>
<ul>
<li>明文文本：格式<code>name:password:comment</code>  </li>
<li>加密文本：由htpasswd命令实现<br>  httpd-tools所提供  </li>
</ul>
<h5 id="ngx-http-stub-status-module"><a href="#ngx-http-stub-status-module" class="headerlink" title="ngx_http_stub_status_module"></a>ngx_http_stub_status_module</h5><p>用于输出nginx的基本状态信息<br>输出信息示例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Active connections: 291</div><div class="line">server accepts handled requests</div><div class="line">16630948 16630948 31070465</div></pre></td></tr></table></figure></p>
<p>对应上面accepts,handled,requests三个值<br>Reading: 6 Writing: 179 Waiting: 106<br>Active connections:当前状态，活动状态的连接数<br>accepts：统计总值，已经接受的客户端请求的总数<br>handled：统计总值，已经处理完成的客户端请求的总数<br>requests：统计总值，客户端发来的总的请求数<br>Reading：当前状态，正在读取客户端请求报文首部的连接的连接数<br>Writing：当前状态，正在向客户端发送响应报文过程中的连接数<br>Waiting：当前状态，正在等待客户端发出请求的空闲连接数<br><code>stub_status;</code><br>示例：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">location /status &#123;</div><div class="line">stub_status;</div><div class="line">allow 172.16.0.0/16;</div><div class="line">deny all;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="ngx-http-log-module"><a href="#ngx-http-log-module" class="headerlink" title="ngx_http_log_module"></a>ngx_http_log_module</h5><p>指定日志格式记录请求  </p>
<ul>
<li>log_format name string …;<br>  string可以使用nginx核心模块及其它模块内嵌的变量  </li>
<li><p>access_log path [format [buffer=size] [gzip[=level]]<br>  [flush=time] [if=condition]];  </p>
<pre><code>access_log off;  
访问日志文件路径，格式及相关的缓冲的配置  
    buffer=size   
    flush=time  
</code></pre><p>  示例：  </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">log_format compression <span class="string">'$remote_addr-$remote_user [$time_local] '</span></div><div class="line"><span class="string">'"$request" $status $bytes_sent '</span></div><div class="line"><span class="string">'"$http_referer" "$http_user_agent" "$gzip_ratio"'</span>;</div><div class="line">access_log /spool/logs/nginx-access.log compression buffer=32k;</div></pre></td></tr></table></figure>
</li>
<li><p>open_log_file_cache max=N [inactive=time]<br>  [min_uses=N] [valid=time];<br>  open_log_file_cache off;<br>  缓存各日志文件相关的元数据信息<br>  max：缓存的最大文件描述符数量<br>  min_uses：在inactive指定的时长内访问大于等于此值方可被当作活动项<br>  inactive：非活动时长<br>  valid：验正缓存中各缓存项是否为活动项的时间间隔  </p>
</li>
</ul>
<h5 id="ngx-http-gzip-module"><a href="#ngx-http-gzip-module" class="headerlink" title="ngx_http_gzip_module"></a>ngx_http_gzip_module</h5><p>用gzip方法压缩响应数据，节约带宽  </p>
<ol>
<li><p>gzip on | off;<br>启用或禁用gzip压缩  </p>
</li>
<li><p>gzip_comp_level level;<br>压缩比由低到高： 1 到 9 ;默认： 1  </p>
</li>
<li><p>gzip_disable regex …;<br>匹配到客户端浏览器不执行压缩  </p>
</li>
<li><p>gzip_min_length length;<br>启用压缩功能的响应报文大小阈值  </p>
</li>
<li><p>gzip_http_version 1.0 | 1.1;<br>设定启用压缩功能时，协议的最小版本,默认： 1.1  </p>
</li>
<li><p>gzip_buffers number size;<br>支持实现压缩功能时缓冲区数量及每个缓存区的大小,默认： 32 4k 或 16 8k  </p>
</li>
<li><p>gzip_types mime-type …;<br>指明仅对哪些类型的资源执行压缩操作；即压缩过滤器,默认包含有text/html，不用显示指定，否则出错  </p>
</li>
<li><p>gzip_vary on | off;<br>如果启用压缩，是否在响应报文首部插入”Vary: AcceptEncoding”  </p>
</li>
<li><p>gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;<br>nginx对于代理服务器请求的响应报文，在何种条件下启用压缩功能<br>off：对被代理的请求不启用压缩<br>expired,no-cache, no-store， private：对代理服务器请求的响应报文首部Cache-Control值任何一个，启用压缩功能<br>示例：  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gzip on;</div><div class="line">gzip_comp_level 6;</div><div class="line">gzip_min_length 64;</div><div class="line">gzip_proxied any;</div><div class="line">gzip_types text/xml text/css application/javascript;</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="ngx-http-ssl-module"><a href="#ngx-http-ssl-module" class="headerlink" title="ngx_http_ssl_module"></a>ngx_http_ssl_module</h5><ol>
<li>ssl on | off;<br>为指定虚拟机启用HTTPS protocol， 建议用listen指令代替  </li>
<li>ssl_certificate file;<br>当前虚拟主机使用PEM格式的证书文件  </li>
<li>ssl_certificate_key file;<br>当前虚拟主机上与其证书匹配的私钥文件  </li>
<li>ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2];<br>支持ssl协议版本，默认为后三个  </li>
<li>ssl_session_cache off | none | [builtin[:size]] [shared:name:size];<br>builtin[:size]：使用OpenSSL内建缓存，为每worker进程私有<br>[shared:name:size]：在各worker之间使用一个共享的缓存  </li>
<li>ssl_session_timeout time;<br>客户端连接可以复用ssl session cache中缓存的ssl参数的有效时长，默认5m<br>示例：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">listen 443 ssl;</div><div class="line">server_name www.magedu.com;</div><div class="line">root /vhosts/ssl/htdocs;</div><div class="line">ssl on;</div><div class="line">ssl_certificate /etc/nginx/ssl/nginx.crt;</div><div class="line">ssl_certificate_key /etc/nginx/ssl/nginx.key;</div><div class="line">ssl_session_cache shared:sslcache:20m;</div><div class="line">ssl_session_timeout 10m;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="ngx-http-rewrite-module"><a href="#ngx-http-rewrite-module" class="headerlink" title="ngx_http_rewrite_module"></a>ngx_http_rewrite_module</h5><p>The ngx_http_rewrite_module module is used to change request URI using PCRE regular expressions,return redirects, and conditionally select configurations.<br>将用户请求的URI基于PCRE regex所描述的模式进行检查，而后完成重定向替换<br>示例：<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">http://www.magedu.com/hn</div><div class="line">        --&gt; http://www.magedu.com/henan</div><div class="line">http://www.magedu.com</div><div class="line">        --&gt; https://www.magedu.com/</div></pre></td></tr></table></figure></p>
<ul>
<li>rewrite regex replacement [flag]<br>将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为replacement指定的新的URI<br>注意：如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换完成后，会重新一轮的替换检查<br>隐含有循环机制,但不超过10次；如果超过，提示500响应码， [flag]所表示的标志位用于控制此循环机制<br>如果replacement是以<a href="http://或https://开头，则替换结果会直接以重向返回给客户端" target="_blank" rel="external">http://或https://开头，则替换结果会直接以重向返回给客户端</a><br>301：永久重定向  </li>
<li><p>[flag]：<br>last：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后对新的URI启动新一轮重写检查；提前重启新一轮循环<br>break：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后直接跳转至重写规则配置块之后的其它配置；结束循环，建议在location中使用<br>redirect：临时重定向，重写完成后以临时重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；不能以<a href="http://或https://开头，使用相对路径，状态码：" target="_blank" rel="external">http://或https://开头，使用相对路径，状态码：</a> 302<br>permanent:重写完成后以永久重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求，状态码：301  </p>
</li>
<li><p>return  </p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">return</span> code [text];</div><div class="line"><span class="built_in">return</span> code URL;</div><div class="line"><span class="built_in">return</span> URL;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>停止处理，并返回给客户端指定的响应码  </p>
<ul>
<li><p>rewrite_log on | off;<br>是否开启重写日志, 发送至error_log（notice level）  </p>
</li>
<li><p>set $variable value;<br>用户自定义变量<br>注意：变量定义和调用都要以$开头  </p>
</li>
<li><p>if (condition) { … }<br>引入新的上下文,条件满足时，执行配置块中的配置指令； server, location  </p>
</li>
<li>condition：  <ul>
<li>比较操作符：  <ul>
<li><code>==</code> 相同  </li>
<li><code>!=</code> 不同  </li>
<li><code>~</code> 模式匹配，区分字符大小写  </li>
<li><code>~*</code>模式匹配，不区分字符大小写  </li>
<li><code>!~</code>模式不匹配，区分字符大小写  </li>
<li><code>!~*</code>模式不匹配，不区分字符大小写  </li>
</ul>
</li>
<li>文件及目录存在性判断：  <ul>
<li><code>-e, !-e</code> 存在（包括文件，目录，软链接）  </li>
<li><code>-f, !-f</code> 文件  </li>
<li><code>-d, !-d</code> 目录  </li>
<li><code>-x, !-x</code> 执行  </li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="ngx-http-referer-module"><a href="#ngx-http-referer-module" class="headerlink" title="ngx_http_referer_module"></a>ngx_http_referer_module</h5><p>The ngx_http_referer_module module is used to block access to a site for requests with invalid values in the “Referer” header field. 可防止盗链  </p>
<ul>
<li>valid_referers none|blocked|server_names|string …;<br>定义referer首部的合法可用值，不能匹配的将是非法值  <ul>
<li>none：请求报文首部没有referer首部  </li>
<li>blocked：请求报文有referer首部，但无有效值  </li>
<li>server_names：参数，其可以有值作为主机名或主机名模式  </li>
<li>arbitrary_string：任意字符串，但可使用*作通配符  </li>
<li>regular expression：被指定的正则表达式模式匹配到的字符串,要使用~开头，例如： ~.*.magedu.com  </li>
</ul>
</li>
</ul>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">valid_referers none block server_names *.magedu.com *.mageedu.com magedu.* mageedu.* ~\.magedu\.;</div><div class="line"><span class="keyword">if</span> (<span class="variable">$invalid_referer</span>) &#123;</div><div class="line">    <span class="built_in">return</span> 403;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="ngx-http-proxy-module"><a href="#ngx-http-proxy-module" class="headerlink" title="ngx_http_proxy_module"></a>ngx_http_proxy_module</h5><p>The ngx_http_proxy_module module allows passing requests to another server.</p>
<ol>
<li>proxy_pass URL;<br>Context:location, if in location, limit_except<br>注意： proxy_pass后面的路径不带uri时，其会将location的uri传递给后端主机  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    ...</div><div class="line">    server_name HOSTNAME;</div><div class="line">        location /uri/ &#123;</div><div class="line">        proxy_pass http://host[:port]; 最后没有/</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>上面示例： <a href="http://HOSTNAME/uri" target="_blank" rel="external">http://HOSTNAME/uri</a> –&gt; <a href="http://host/uri" target="_blank" rel="external">http://host/uri</a><br><a href="http://host[:port]/" target="_blank" rel="external">http://host[:port]/</a> 意味着： <a href="http://HOSTNAME/uri" target="_blank" rel="external">http://HOSTNAME/uri</a> –&gt; <a href="http://host/" target="_blank" rel="external">http://host/</a><br><code>proxy_pass</code>后面的路径是一个uri时，其会将location的uri替换为proxy_pass的uri<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    ...</div><div class="line">    server_name HOSTNAME;</div><div class="line">        location /uri/ &#123;</div><div class="line">        proxy_pass http://host/new_uri/;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="http://HOSTNAME/uri/" target="_blank" rel="external">http://HOSTNAME/uri/</a> –&gt; <a href="http://host/new_uri/" target="_blank" rel="external">http://host/new_uri/</a>  </p>
<p>如果location定义其uri时使用了正则表达式的模式，则proxy_pass之后必须不能使用uri; 用户请求时传递的uri将直接附加代理到的服务的之后<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">...</div><div class="line">    server_name HOSTNAME;</div><div class="line">        location ~|~* /uri/ &#123;</div><div class="line">        proxy_pass http://host; 不能加/</div><div class="line">    &#125;</div><div class="line">        ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><a href="http://HOSTNAME/uri/" target="_blank" rel="external">http://HOSTNAME/uri/</a> –&gt; <a href="http://host/uri/" target="_blank" rel="external">http://host/uri/</a>  </p>
<ol>
<li>proxy_set_header field value;<br>设定发往后端主机的请求报文的请求首部的值  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Context: http, server, location</div><div class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>标准格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">X-Forwarded-For: client1, proxy1, proxy2</div></pre></td></tr></table></figure></p>
<ol>
<li><p>proxy_cache_path;<br>定义可用于proxy功能的缓存； Context:http  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">proxy_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time] [purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];</div></pre></td></tr></table></figure>
</li>
<li><p>proxy_cache zone | off; 默认off<br>指明调用的缓存，或关闭缓存机制； Context:http,server, location  </p>
</li>
<li><p>proxy_cache_key string;<br>缓存中用于“键”的内容<br>默认值： proxy_cache_key $scheme$proxy_host$request_uri;  </p>
</li>
<li><p>proxy_cache_valid [code …] time;<br>定义对特定响应码的响应内容的缓存时长<br>定义在http{…}中<br>示例:  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">proxy_cache_valid 200 302 10m;</div><div class="line">proxy_cache_valid 404 1m;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>示例：<br>在http配置定义缓存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">proxy_cache_path /var/cache/nginx/proxy_cache</div><div class="line">levels=1:1:1 keys_zone=proxycache:20m</div><div class="line">inactive=120s max_size=1g;</div></pre></td></tr></table></figure></p>
<p>调用缓存功能，需要定义在相应的配置段，如server{…}；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">proxy_cache proxycache;</div><div class="line">proxy_cache_key <span class="variable">$request_uri</span>;</div><div class="line">proxy_cache_valid 200 302 301 1h;</div><div class="line">proxy_cache_valid any 1m;</div></pre></td></tr></table></figure></p>
<ol>
<li><p>proxy_cache_use_stale;<br>proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off …<br>在被代理的后端服务器出现哪种情况下，可以真接使用过期的缓存响应客户端  </p>
</li>
<li><p>proxy_cache_methods GET | HEAD | POST …;<br>对哪些客户端请求方法对应的响应进行缓存， GET和HEAD方法总是被缓存  </p>
</li>
<li><p>proxy_hide_header field;<br>By default, nginx does not pass the header fields “Date”, “Server”, “X-Pad”, and “X-Accel-…” from the response of a proxied server to a client. 用于隐藏后端服务器特定的响应首部  </p>
</li>
<li><p>proxy_connect_timeout time;<br>定义与后端服务器建立连接的超时时长，如超时会出现502错误，默认为60s，一般不建议超出75s  </p>
</li>
<li><p>proxy_send_timeout time;<br>把请求发送给后端服务器的超时时长；默认为60s  </p>
</li>
<li><p>proxy_read_timeout time;<br>等待后端服务器发送响应报文的超时时长， 默认为60s  </p>
</li>
</ol>
<h5 id="ngx-http-headers-module"><a href="#ngx-http-headers-module" class="headerlink" title="ngx_http_headers_module"></a>ngx_http_headers_module</h5><p>向由代理服务器响应给客户端的响应报文添加自定义首部，或修改指定首部的值  </p>
<ol>
<li><p>add_header name value [always];<br> 添加自定义首部  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">add_header X-Via <span class="variable">$server_addr</span>;</div><div class="line">add_header X-Cache <span class="variable">$upstream_cache_status</span>;</div><div class="line">add_header X-Accel <span class="variable">$server_name</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>add_trailer name value [always];<br> 添加自定义响应信息的尾部  </p>
</li>
</ol>
<h5 id="ngx-http-fastcgi-module模块"><a href="#ngx-http-fastcgi-module模块" class="headerlink" title="ngx_http_fastcgi_module模块"></a>ngx_http_fastcgi_module模块</h5><p>转发请求到FastCGI服务器，不支持php模块方式  </p>
<ol>
<li><p>fastcgi_pass address;<br>address为后端的fastcgi server的地址可用位置： location, if in location  </p>
</li>
<li><p>fastcgi_index name;<br>fastcgi默认的主页资源<br>示例： fastcgi_index index.php;  </p>
</li>
<li><p>fastcgi_param parameter value [if_not_empty];<br>设置传递给 FastCGI服务器的参数值，可以是文本，变量或组合  </p>
</li>
</ol>
<p>示例1：  </p>
<ul>
<li>在后端服务器先配置fpm server和mariadb-server  </li>
<li>在前端nginx服务上做以下配置：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location ~* \.php$ &#123;</div><div class="line">fastcgi_pass 后端fpm服务器IP:9000;</div><div class="line">fastcgi_index index.php;</div><div class="line">fastcgi_param SCRIPT_FILENAME /usr/share/nginx/html<span class="variable">$fastcgi_script_name</span>;</div><div class="line">include fastcgi_params;</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>示例2：<br>通过/pm_status和/ping来获取fpm server状态信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">location ~* ^/(pm_status|ping)$ &#123;</div><div class="line">include fastcgi_params;</div><div class="line">fastcgi_pass 后端fpm服务器IP:9000;</div><div class="line">fastcgi_param SCRIPT_FILENAME</div><div class="line"><span class="variable">$fastcgi_script_name</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ol>
<li>fastcgi_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time] [purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];  </li>
</ol>
<ul>
<li>定义fastcgi的缓存；  <ul>
<li>path 缓存位置为磁盘上的文件系统  </li>
<li>max_size=size  磁盘path路径中用于缓存数据的缓存空间上限  </li>
<li>levels=levels：缓存目录的层级数量，以及每一级的目录数量<br>  levels=ONE:TWO:THREE<br>示例： leves=1:2:2    </li>
<li>keys_zone=name:size<br>  k/v映射的内存空间的名称及大小  </li>
<li>inactive=time<br>  非活动时长  </li>
</ul>
</li>
</ul>
<ol>
<li><p>fastcgi_cache zone | off;<br>调用指定的缓存空间来缓存数据<br>可用位置： http, server, location  </p>
</li>
<li><p>fastcgi_cache_key string;<br>定义用作缓存项的key的字符串<br>示例： fastcgi_cache_key $request_rui;  </p>
</li>
<li><p>fastcgi_cache_methods GET | HEAD | POST …;<br>为哪些请求方法使用缓存  </p>
</li>
<li><p>fastcgi_cache_min_uses number;<br>缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到此处所指定的次数方可被认作活动项  </p>
</li>
<li><p>fastcgi_keep_conn on | off;<br>收到后端服务器响应后， fastcgi服务器是否关闭连接，建议启用长连接  </p>
</li>
<li><p>fastcgi_cache_valid [code …] time;<br>不同的响应码各自的缓存时长  </p>
</li>
</ol>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">    http &#123;</div><div class="line">    fastcgi_cache_path /var/cache/nginx/fcgi_cache levels=1:2:1 keys_zone=fcgicache:20m inactive=120s;</div><div class="line">    ...</div><div class="line">        server &#123;</div><div class="line">            location ~* \.php$ &#123;</div><div class="line">            ...</div><div class="line">            fastcgi_cache fcgicache;</div><div class="line">            fastcgi_cache_key <span class="variable">$request_uri</span>;</div><div class="line">            fastcgi_cache_valid 200 302 10m;</div><div class="line">            fastcgi_cache_valid 301 1h;</div><div class="line">            fastcgi_cache_valid any 1m;</div><div class="line">        ...</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="ngx-http-upstream-module模块"><a href="#ngx-http-upstream-module模块" class="headerlink" title="ngx_http_upstream_module模块"></a>ngx_http_upstream_module模块</h5><p>用于将多个服务器定义成服务器组，而由proxy_pass,fastcgi_pass等指令进行引用  </p>
<ol>
<li><p>upstream name { … }<br>定义后端服务器组，会引入一个新的上下文<br>默认调度算法是wrr  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Context: http</div><div class="line">upstream httpdsrvs &#123;</div><div class="line">server ...</div><div class="line">server...</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>server address [parameters];<br>在upstream上下文中server成员，以及相关的参数； Context:upstream  </p>
</li>
</ol>
<ul>
<li>address的表示格式：  <ul>
<li>unix:/PATH/TO/SOME_SOCK_FILE  </li>
<li>IP[:PORT]  </li>
<li>HOSTNAME[:PORT]  </li>
</ul>
</li>
<li>parameters：  <ul>
<li>weight=number 权重，默认为1  </li>
<li>max_conns 连接后端报务器最大并发活动连接数， 1.11.5后支持  </li>
<li>max_fails=number 失败尝试最大次数；超出此处指定的次数时， server将被标记为不可用,默认为1  </li>
<li>fail_timeout=time 后端服务器标记为不可用状态的连接超时时长，默认10s  </li>
<li>backup 将服务器标记为“备用”，即所有服务器均不可用时才启用  </li>
<li>down 标记为“不可用”，配合ip_hash使用，实现灰度发布  </li>
</ul>
</li>
</ul>
<ol>
<li><p>ip_hash 源地址hash调度方法  </p>
</li>
<li><p>least_conn 最少连接调度算法，当server拥有不同的权重时其为wlc，当所有后端主机连接数相同时，则使用wrr，适用于长连接  </p>
</li>
<li><p>hash key [consistent] 基于指定的key的hash表来实现对请求的调度，此处的key可以直接文本、变量或二者组合作用：将请求分类，同一类请求将发往同一个upstream server，使用consistent参数， 将使用ketama一致性hash算法，适用于后端是Cache服务器（如varnish）时使用  </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">hash</span> <span class="variable">$request_uri</span> consistent;</div><div class="line"><span class="built_in">hash</span> <span class="variable">$remote_addr</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>keepalive 连接数N;<br>为每个worker进程保留的空闲的长连接数量,可节约nginx端口，并减少连接管理的消耗  </p>
</li>
<li><p>health_check [parameters];<br>健康状态检测机制；只能用于location上下文常用参数：  </p>
</li>
</ol>
<ul>
<li>interval=time检测的频率，默认为5秒  </li>
<li>fails=number：判定服务器不可用的失败检测次数；默认为1次  </li>
<li>passes=number：判定服务器可用的失败检测次数；默认为1次  </li>
<li>uri=uri：做健康状态检测测试的目标uri；默认为/  </li>
<li>match=NAME：健康状态检测的结果评估调用此处指定的match配置块  </li>
</ul>
<p><strong>注意：仅对nginx plus有效</strong>  </p>
<ol>
<li>match name { … }<br>对backend server做健康状态检测时，定义其结果判断机制；只能用于http上下文<br>常用的参数：  </li>
</ol>
<ul>
<li>status code[ code …]: 期望的响应状态码  </li>
<li>header HEADER[operator value]：期望存在响应首部，也可对期望的响应首部的值基于比较操作符和值进行比较  </li>
<li>body：期望响应报文的主体部分应该有的内容  </li>
</ul>
<p><strong>注意：仅对nginx plus有效</strong>  </p>
<h5 id="ngx-stream-core-module"><a href="#ngx-stream-core-module" class="headerlink" title="ngx_stream_core_module"></a>ngx_stream_core_module</h5><ul>
<li>nginx的其它的二次发行版：<br>Tengine：由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。Tengine的性能和稳定性已经在大型的网站如淘宝网，天猫商城等得到了很好的检验。它的最终目标是打造一个高效、稳定、安全、易用的Web平台。从2011年12月开始， Tengine成为一个开源项目，官网 <a href="http://tengine.taobao.org/" target="_blank" rel="external">http://tengine.taobao.org/</a><br>OpenResty：基于 Nginx 与 Lua 语言的高性能 Web平台  </li>
<li>ngx_stream_core_module模块<br>模拟反代基于tcp或udp的服务连接，即工作于传输层的反代或调度器  </li>
</ul>
<ol>
<li>stream { … }<br>定义stream相关的服务； Context:main  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">stream &#123;</div><div class="line">    upstream telnetsrvs &#123;</div><div class="line">        server 192.168.22.2:23;</div><div class="line">        server 192.168.22.3:23;</div><div class="line">        least_conn;</div><div class="line">    &#125;</div><div class="line">    server &#123;</div><div class="line">        listen 10.1.0.6:23;</div><div class="line">        proxy_pass telnetsrvs;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>listen   <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">listen address:port [ssl] [udp] [proxy_protocol] [backlog=number] [<span class="built_in">bind</span>] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="ngx-stream-proxy-module模块"><a href="#ngx-stream-proxy-module模块" class="headerlink" title="ngx_stream_proxy_module模块"></a>ngx_stream_proxy_module模块</h5><p>可实现代理基于TCP， UDP (1.9.13), UNIX-domain sockets的数据流  </p>
<ul>
<li>proxy_pass address;<br>指定后端服务器地址  </li>
<li>proxy_timeout timeout;<br>无数据传输时，保持连接状态的超时时长,默认为10m  </li>
<li>proxy_connect_timeout time;<br>设置nginx与被代理的服务器尝试建立连接的超时时长,默认为60s  </li>
</ul>
<p>示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">stream &#123;</div><div class="line">    upstream telnetsrvs &#123;</div><div class="line">        server 192.168.10.130:23;</div><div class="line">        server 192.168.10.131:23;</div><div class="line">        <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</div><div class="line">    &#125;</div><div class="line">    server &#123;</div><div class="line">        listen 172.16.100.10:2323;</div><div class="line">        proxy_pass telnetsrvs;</div><div class="line">        proxy_timeout 60s;</div><div class="line">        proxy_connect_timeout 10s;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> nginx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6编译安装LAMP]]></title>
      <url>/2017/10/23/CentOS6%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85LAMP/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>LAMP是指一组一起使用来运行动态网站或服务器的自由软件名称的首字母缩写；  </p>
<ul>
<li><strong>L</strong>inux， 操作系统  </li>
<li><strong>A</strong>pache，WEB服务器  </li>
<li><strong>M</strong>ariaDB或<strong>M</strong>ySQL，数据库管理系统  </li>
<li><strong>P</strong>HP、<strong>P</strong>erl或<strong>P</strong>ython  </li>
</ul>
<p>在这里，我们主要演示Linux、Httpd、MariaDB和PHP的组合的编译安装。  </p>
<a id="more"></a>
<p><strong>HTTPD和PHP的结合方式：</strong>  </p>
<ul>
<li><strong>modules:</strong> 把PHP编译成httpd的DSO对象；  <ul>
<li>prefork模式需要依赖软件包libphp5  </li>
<li>event,worker模式需要依赖软件包libphp5-zts  </li>
</ul>
</li>
<li><strong>cgi:</strong> 通用网关接口，已被FPM替代  </li>
<li><strong>FPM(fastcgi):</strong> 快速通用网关接口，PHP作为独立服务运行  </li>
</ul>
<h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p><strong>系统版本</strong>：CentOS 6.9<br><strong>软件版本及功能</strong><br>| 软件 | 版本 | 功能 |<br>| – | – | – |<br>| apr | 1.5.2 |  |<br>| apr-util | 1.5.4 |  |<br>| httpd | 2.4.27 |  |<br>| PHP | </p>
<h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h4><p>安装LAMP的时候，安装顺序最好是：httpd ==&gt; MariaDB ==&gt; PHP  </p>
<h5 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#yum groupinstall "Development Tools" "Server Platform Develoment" -y</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment">#yum install pcre-devel -y    //httpd的URL重定向时会用到该软件包</span></div></pre></td></tr></table></figure>
<h5 id="编译安装apr"><a href="#编译安装apr" class="headerlink" title="编译安装apr"></a>编译安装apr</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf apr-1.5.2.tar.bz2 </span></div><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd apr-1.5.2/</span></div><div class="line">[root@MyCentOS6 ~/downloads/apr-1.5.2]<span class="comment">#ls</span></div><div class="line">apr-config.in  atomic            config.layout  file_io     LICENSE       network_io     README.cmake  time</div><div class="line">apr.dep        build             configure      helpers     locks         NOTICE         shmem         tools</div><div class="line">apr.dsp        buildconf         configure.in   include     Makefile.in   NWGNUmakefile  strings       user</div><div class="line">apr.dsw        build.conf        docs           libapr.dep  Makefile.win  passwd         support</div><div class="line">apr.mak        build-outputs.mk  dso            libapr.dsp  memory        poll           tables</div><div class="line">apr.pc.in      CHANGES           emacs-mode     libapr.mak  misc          random         <span class="built_in">test</span></div><div class="line">apr.spec       CMakeLists.txt    encoding       libapr.rc   mmap          README</div><div class="line">[root@MyCentOS6 ~/downloads/apr-1.5.2]<span class="comment">#./configure --prefix=/usr/local/apr</span></div><div class="line">[root@MyCentOS6 ~/downloads/apr-1.5.2]<span class="comment">#make -j 4 &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<p><code>make -j 4</code>为指定编译时工作的CPU数量，可以提高编译速度  </p>
<h5 id="编译安装apr-util"><a href="#编译安装apr-util" class="headerlink" title="编译安装apr-util"></a>编译安装apr-util</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf apr-util-1.5.4.tar.bz2</span></div><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd apr-util-1.5.4/</span></div><div class="line">[root@MyCentOS6 ~/downloads/apr-util-1.5.4]<span class="comment">#ls</span></div><div class="line">aprutil.dep     apu-config.in     CHANGES         dbd                include         LICENSE       NWGNUmakefile    uri</div><div class="line">aprutil.dsp     buckets           CMakeLists.txt  dbm                ldap            Makefile.in   README           xlate</div><div class="line">aprutil.dsw     build             config.layout   docs               libaprutil.dep  Makefile.win  README.cmake     xml</div><div class="line">aprutil.mak     buildconf         configure       encoding           libaprutil.dsp  memcache      renames_pending</div><div class="line">apr-util.pc.in  build.conf        configure.in    export_vars.sh.in  libaprutil.mak  misc          strmatch</div><div class="line">apr-util.spec   build-outputs.mk  crypto</div><div class="line">[root@MyCentOS6 ~/downloads/apr-util-1.5.4]<span class="comment">#./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr</span></div><div class="line">[root@MyCentOS6 ~/downloads/apr-util-1.5.4]<span class="comment">#make -j 4 &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<p>注意：编译安装apr-util时需要指定编译安装的apr的路径  </p>
<h5 id="编译安装httpd"><a href="#编译安装httpd" class="headerlink" title="编译安装httpd"></a>编译安装httpd</h5><p>httpd与PHP常用的有module和FPM这两种结合方式，在这里分别配置演示  </p>
<h6 id="配置PHP以httpd的module方式运行"><a href="#配置PHP以httpd的module方式运行" class="headerlink" title="配置PHP以httpd的module方式运行"></a>配置PHP以httpd的module方式运行</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf httpd-2.4.27.tar.bz2</span></div><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd httpd-2.4.27/</span></div><div class="line">[root@MyCentOS6 ~/downloads/httpd-2.4.27]<span class="comment">#./configure --prefix=/usr/local/apache --sysconfdir=/etc/httpd24 --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util --enable-modules=most --enable-mpms-shared=all --with-mpm=event</span></div><div class="line">[root@MyCentOS6 ~/downloads/httpd-2.4.27]<span class="comment">#make -j 4 &amp;&amp; make install</span></div></pre></td></tr></table></figure>
<p>为httpd创建服务脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cd /etc/rc.d/init.d/</span></div><div class="line">[root@MyCentOS6 /etc/rc.d/init.d]<span class="comment">#vim httpd24</span></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># httpd        Startup script for the Apache HTTP Server</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># chkconfig: - 85 15</span></div><div class="line"><span class="comment"># description: The Apache HTTP Server is an efficient and extensible  \</span></div><div class="line"><span class="comment">#	       server implementing the current HTTP standards.</span></div><div class="line"><span class="comment"># processname: httpd</span></div><div class="line"></div><div class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ -f /etc/sysconfig/httpd ]; <span class="keyword">then</span></div><div class="line">        . /etc/sysconfig/httpd</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment"># Start httpd in the C locale by default.</span></div><div class="line">HTTPD_LANG=<span class="variable">$&#123;HTTPD_LANG-"C"&#125;</span></div><div class="line"></div><div class="line"><span class="comment"># This will prevent initlog from swallowing up a pass-phrase prompt if</span></div><div class="line"><span class="comment"># mod_ssl needs a pass-phrase from the user.</span></div><div class="line">INITLOG_ARGS=<span class="string">""</span></div><div class="line"></div><div class="line">apachectl=/usr/<span class="built_in">local</span>/apache/bin/apachectl</div><div class="line">httpd=<span class="variable">$&#123;HTTPD-/usr/local/apache/bin/httpd&#125;</span></div><div class="line">prog=httpd</div><div class="line">pidfile=<span class="variable">$&#123;PIDFILE-/var/run/httpd/httpd.pid&#125;</span></div><div class="line">lockfile=<span class="variable">$&#123;LOCKFILE-/var/lock/subsys/httpd&#125;</span></div><div class="line">RETVAL=0</div><div class="line">STOP_TIMEOUT=<span class="variable">$&#123;STOP_TIMEOUT-10&#125;</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">start</span></span>() &#123;</div><div class="line">        <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></div><div class="line">        LANG=<span class="variable">$HTTPD_LANG</span> daemon --pidfile=<span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$httpd</span> <span class="variable">$OPTIONS</span></div><div class="line">        RETVAL=$?</div><div class="line">        <span class="built_in">echo</span></div><div class="line">        [ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; touch <span class="variable">$&#123;lockfile&#125;</span></div><div class="line">        <span class="built_in">return</span> <span class="variable">$RETVAL</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line">	status -p <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$httpd</span> &gt; /dev/null</div><div class="line">	<span class="keyword">if</span> [[ $? = 0 ]]; <span class="keyword">then</span></div><div class="line">		<span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></div><div class="line">		killproc -p <span class="variable">$&#123;pidfile&#125;</span> -d <span class="variable">$&#123;STOP_TIMEOUT&#125;</span> <span class="variable">$httpd</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></div><div class="line">		success</div><div class="line">	<span class="keyword">fi</span></div><div class="line">	RETVAL=$?</div><div class="line">	<span class="built_in">echo</span></div><div class="line">	[ <span class="variable">$RETVAL</span> = 0 ] &amp;&amp; rm -f <span class="variable">$&#123;lockfile&#125;</span> <span class="variable">$&#123;pidfile&#125;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">reload</span></span>() &#123;</div><div class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></div><div class="line">    <span class="keyword">if</span> ! LANG=<span class="variable">$HTTPD_LANG</span> <span class="variable">$httpd</span> <span class="variable">$OPTIONS</span> -t &gt;&amp;/dev/null; <span class="keyword">then</span></div><div class="line">        RETVAL=6</div><div class="line">        <span class="built_in">echo</span> $<span class="string">"not reloading due to configuration syntax error"</span></div><div class="line">        failure $<span class="string">"not reloading <span class="variable">$httpd</span> due to configuration syntax error"</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="comment"># Force LSB behaviour from killproc</span></div><div class="line">        LSB=1 killproc -p <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$httpd</span> -HUP</div><div class="line">        RETVAL=$?</div><div class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 7 ]; <span class="keyword">then</span></div><div class="line">            failure $<span class="string">"httpd shutdown"</span></div><div class="line">        <span class="keyword">fi</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line">    <span class="built_in">echo</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># See how we were called.</span></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">  start)</div><div class="line">	start</div><div class="line">	;;</div><div class="line">  stop)</div><div class="line">	stop</div><div class="line">	;;</div><div class="line">  status)</div><div class="line">        status -p <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$httpd</span></div><div class="line">	RETVAL=$?</div><div class="line">	;;</div><div class="line">  restart)</div><div class="line">	stop</div><div class="line">	start</div><div class="line">	;;</div><div class="line">  condrestart|try-restart)</div><div class="line">	<span class="keyword">if</span> status -p <span class="variable">$&#123;pidfile&#125;</span> <span class="variable">$httpd</span> &gt;&amp;/dev/null; <span class="keyword">then</span></div><div class="line">		stop</div><div class="line">		start</div><div class="line">	<span class="keyword">fi</span></div><div class="line">	;;</div><div class="line">  force-reload|reload)</div><div class="line">        reload</div><div class="line">	;;</div><div class="line">  graceful|<span class="built_in">help</span>|configtest|fullstatus)</div><div class="line">	<span class="variable">$apachectl</span> <span class="variable">$@</span></div><div class="line">	RETVAL=$?</div><div class="line">	;;</div><div class="line">  *)</div><div class="line">	<span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$prog</span> &#123;start|stop|restart|condrestart|try-restart|force-reload|reload|status|fullstatus|graceful|help|configtest&#125;"</span></div><div class="line">	RETVAL=2</div><div class="line"><span class="keyword">esac</span></div><div class="line"><span class="built_in">exit</span> <span class="variable">$RETVAL</span></div><div class="line">[root@MyCentOS6 /etc/rc.d/init.d]<span class="comment">#chkconfig --add httpd24</span></div><div class="line">[root@MyCentOS6 /etc/rc.d/init.d]<span class="comment">#chkconfig --list httpd24</span></div><div class="line">httpd24         0:off   1:off   2:off   3:off   4:off   5:off   6:off</div></pre></td></tr></table></figure></p>
<p>设置环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cd /etc/profile.d/</span></div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#vim httpd.sh</span></div><div class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/apache/bin:<span class="variable">$PATH</span></div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#. /etc/profile.d/httpd.sh</span></div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#httpd -t</span></div><div class="line">Syntax OK</div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#hash</span></div><div class="line">hits    <span class="built_in">command</span></div><div class="line">   2    /usr/<span class="built_in">local</span>/apache/bin/httpd</div></pre></td></tr></table></figure></p>
<p>启动httpd服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#service httpd24 start</span></div><div class="line">Starting httpd:                                            [  OK  ]</div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#ss -tunl</span></div><div class="line">Netid State      Recv-Q Send-Q                           Local Address:Port                             Peer Address:Port </div><div class="line">tcp   LISTEN     0      128                                         :::80                                         :::*     </div><div class="line">tcp   LISTEN     0      128                                         :::22                                         :::*     </div><div class="line">tcp   LISTEN     0      128                                          *:22                                          *:*</div></pre></td></tr></table></figure></p>
<p>查看httpd工作模式和安装的模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#ps aux | grep httpd</span></div><div class="line">root      32094  0.0  0.5 198804  5508 ?        Ss   19:19   0:00 /usr/sbin/httpd.worker</div><div class="line">apache    32097  0.0  0.7 1067352 7796 ?        Sl   19:19   0:00 /usr/sbin/httpd.worker</div><div class="line">apache    32102  0.0  0.7 1001816 7636 ?        Sl   19:19   0:00 /usr/sbin/httpd.worker</div><div class="line">apache    32126  0.0  0.7 1067352 7788 ?        Sl   19:19   0:00 /usr/sbin/httpd.worker</div><div class="line">root      32219  0.0  0.0 103332   840 pts/0    S+   19:21   0:00 grep --color=auto httpd</div><div class="line">[root@MyCentOS6 ~]<span class="comment">#httpd -M</span></div><div class="line">Loaded Modules:</div><div class="line"> core_module (static)</div><div class="line"> so_module (static)</div><div class="line"> http_module (static)</div><div class="line"> authn_file_module (shared)</div><div class="line"> authn_core_module (shared)</div><div class="line"> authz_host_module (shared)</div><div class="line"> authz_groupfile_module (shared)</div><div class="line"> authz_user_module (shared)</div><div class="line"> authz_core_module (shared)</div><div class="line"> access_compat_module (shared)</div><div class="line"> auth_basic_module (shared)</div><div class="line"> reqtimeout_module (shared)</div><div class="line"> filter_module (shared)</div><div class="line"> mime_module (shared)</div><div class="line"> log_config_module (shared)</div><div class="line"> env_module (shared)</div><div class="line"> headers_module (shared)</div><div class="line"> setenvif_module (shared)</div><div class="line"> version_module (shared)</div><div class="line"> mpm_event_module (shared)</div><div class="line"> unixd_module (shared)</div><div class="line"> status_module (shared)</div><div class="line"> autoindex_module (shared)</div><div class="line"> dir_module (shared)</div><div class="line"> alias_module (shared)</div></pre></td></tr></table></figure></p>
<p> 如果需要添加其他模块，可以编辑<code>/etc/httpd24/httpd.conf</code>文件，找到<code>LoadModule***</code>行，根据需要去掉前面的注释即为启用该模块。然后重载配置文件即可。  </p>
<h5 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h5> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf mariadb-5.5.57-linux-x86_64.tar.gz -C /usr/local</span></div><div class="line"> [root@MyCentOS6 ~]<span class="comment">#mkdir -pv /mydata/data</span></div><div class="line">mkdir: created directory `/mydata<span class="string">'</span></div><div class="line">mkdir: created directory `/mydata/data'</div><div class="line">[root@MyCentOS6 ~]<span class="comment">#useradd -r mysql</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment">#mkdir -pv /mydata/data</span></div><div class="line">mkdir: created directory `/mydata<span class="string">'</span></div><div class="line">mkdir: created directory `/mydata/data'</div><div class="line">[root@MyCentOS6 ~]<span class="comment">#chown -R mysql.mysql /mydata/data/</span></div><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd /usr/local/</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#ls</span></div><div class="line">apache  apr  apr-util  bin  etc  games  include  lib  lib64  libexec  mariadb-5.5.57-linux-x86_64  sbin  share  src</div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#ln -sv mariadb-5.5.57-linux-x86_64/ mysql</span></div><div class="line">`mysql<span class="string">' -&gt; `mariadb-5.5.57-linux-x86_64/'</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#cd mysql/</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#ll</span></div><div class="line">total 192</div><div class="line">drwxr-xr-x  2 root root   4096 Oct 15 19:48 bin</div><div class="line">-rw-r--r--  1 wbz  wbz   17987 Jul 19 04:33 COPYING</div><div class="line">drwxr-xr-x  3 root root   4096 Oct 15 19:48 data</div><div class="line">-rw-r--r--  1 wbz  wbz    8245 Jul 19 04:33 EXCEPTIONS-CLIENT</div><div class="line">drwxr-xr-x  3 root root   4096 Oct 15 19:48 include</div><div class="line">-rw-r--r--  1 wbz  wbz    8694 Jul 19 04:33 INSTALL-BINARY</div><div class="line">drwxr-xr-x  3 root root   4096 Oct 15 19:48 lib</div><div class="line">drwxr-xr-x  4 root root   4096 Oct 15 19:48 man</div><div class="line">drwxr-xr-x 11 root root   4096 Oct 15 19:48 mysql-test</div><div class="line">-rw-r--r--  1 wbz  wbz  108813 Jul 19 04:33 README</div><div class="line">drwxr-xr-x  2 root root   4096 Oct 15 19:48 scripts</div><div class="line">drwxr-xr-x 27 root root   4096 Oct 15 19:48 share</div><div class="line">drwxr-xr-x  4 root root   4096 Oct 15 19:48 sql-bench</div><div class="line">drwxr-xr-x  3 root root   4096 Oct 15 19:48 support-files</div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#chown -R root.mysql ./*</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#ll</span></div><div class="line">total 192</div><div class="line">drwxr-xr-x  2 root mysql   4096 Oct 15 19:48 bin</div><div class="line">-rw-r--r--  1 root mysql  17987 Jul 19 04:33 COPYING</div><div class="line">drwxr-xr-x  3 root mysql   4096 Oct 15 19:48 data</div><div class="line">-rw-r--r--  1 root mysql   8245 Jul 19 04:33 EXCEPTIONS-CLIENT</div><div class="line">drwxr-xr-x  3 root mysql   4096 Oct 15 19:48 include</div><div class="line">-rw-r--r--  1 root mysql   8694 Jul 19 04:33 INSTALL-BINARY</div><div class="line">drwxr-xr-x  3 root mysql   4096 Oct 15 19:48 lib</div><div class="line">drwxr-xr-x  4 root mysql   4096 Oct 15 19:48 man</div><div class="line">drwxr-xr-x 11 root mysql   4096 Oct 15 19:48 mysql-test</div><div class="line">-rw-r--r--  1 root mysql 108813 Jul 19 04:33 README</div><div class="line">drwxr-xr-x  2 root mysql   4096 Oct 15 19:48 scripts</div><div class="line">drwxr-xr-x 27 root mysql   4096 Oct 15 19:48 share</div><div class="line">drwxr-xr-x  4 root mysql   4096 Oct 15 19:48 sql-bench</div><div class="line">drwxr-xr-x  3 root mysql   4096 Oct 15 19:48 support-files</div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#scripts/mysql_install_db --datadir=/mydata/data/ --user=mysql</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#mkdir /etc/mysql</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#cp support-files/my-large.cnf /etc/mysql/my.cnf</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#vim /etc/mysql/my.cnf </span></div><div class="line">thread_concurrency = 8</div><div class="line">datadir = /mydata/data</div><div class="line">innodb_file_per_table = on</div><div class="line">skip_name_resolve = on</div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#cp support-files/mysql.server /etc/rc.d/init.d/mysqld</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#chkconfig --add mysqld </span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#service mysqld start</span></div><div class="line">Starting MySQL.171015 19:59:56 mysqld_safe Logging to <span class="string">'/var/log/mysqld.log'</span>.</div><div class="line">171015 19:59:56 mysqld_safe Starting mysqld daemon with databases from /mydata/data</div><div class="line">. SUCCESS! </div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#ss -tunl</span></div><div class="line">Netid State      Recv-Q Send-Q                           Local Address:Port                             Peer Address:Port </div><div class="line">tcp   LISTEN     0      50                                           *:3306                                        *:*     </div><div class="line">tcp   LISTEN     0      128                                         :::80                                         :::*     </div><div class="line">tcp   LISTEN     0      128                                         :::22                                         :::*     </div><div class="line">tcp   LISTEN     0      128                                          *:22</div></pre></td></tr></table></figure>
<p>设置MariaDB的环境变量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#cd /etc/profile.d/</span></div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#vim mysql.sh</span></div><div class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/mysql/bin:<span class="variable">$PATH</span></div><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#. /etc/profile.d/mysql.sh</span></div></pre></td></tr></table></figure></p>
<p>设置好环境变量后，我们就可以直接使用mysql的初始化安全脚本了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /etc/profile.d]<span class="comment">#mysql_secure_installation</span></div></pre></td></tr></table></figure></p>
<h5 id="编译安装PHP"><a href="#编译安装PHP" class="headerlink" title="编译安装PHP"></a>编译安装PHP</h5><h6 id="安装依赖的软件包"><a href="#安装依赖的软件包" class="headerlink" title="安装依赖的软件包"></a>安装依赖的软件包</h6><p><code>libmcrypt-devel</code>软件包的yum安装需要配置EPEL源  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#yum install bzip2-devel libmcrypt-devel libxml2-devel</span></div></pre></td></tr></table></figure>
<h6 id="解压并编译PHP"><a href="#解压并编译PHP" class="headerlink" title="解压并编译PHP"></a>解压并编译PHP</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf php-5.4.40.tar.bz2</span></div><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd php-5.4.40/</span></div><div class="line">[root@MyCentOS6 ~/downloads/php-5.4.40]<span class="comment">#./configure --prefix=/usr/local/php --with-mysql=/usr/local/mysql --with-openssl --with-mysqli=/usr/local/mysql/bin/mysql_config --enable-mbstring --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --enable-sockets --with-apxs2=/usr/local/apache/bin/apxs --with-mcrypt --with-config-file-path=/etc --with-config-file-scan-dir=/etc/php.d --with-bz2 --enable-maintainer-zts </span></div><div class="line">[root@MyCentOS6 ~/downloads/php-5.4.40]<span class="comment">#make -j 4 &amp;&amp; make install</span></div><div class="line">[root@MyCentOS6 ~/downloads/php-5.4.40]<span class="comment">#cp php.ini-production /etc/php.ini</span></div></pre></td></tr></table></figure>
<p>配置httpd使支持php格式的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cd /etc/httpd24/</span></div><div class="line">[root@MyCentOS6 /etc/httpd24]<span class="comment">#ls</span></div><div class="line">extra  httpd.conf  httpd.conf.bak  magic  mime.types  original</div><div class="line">[root@MyCentOS6 /etc/httpd24]<span class="comment">#cp httpd.conf&#123;,.bak&#125;</span></div><div class="line">cp: overwrite `httpd.conf.bak<span class="string">'? ^C</span></div><div class="line">[root@MyCentOS6 /etc/httpd24]#vim httpd.conf</div><div class="line">#####找到AddType字段，添加如下内容##########</div><div class="line"></div><div class="line">    AddType application/x-httpd-php .php</div><div class="line">    AddType application/x-httpd-php-source .phps</div><div class="line">#####添加对index.php的支持#####</div><div class="line">DirectoryIndex index.php index.html</div><div class="line">[root@MyCentOS6 /etc/httpd24]#service httpd24 reload</div><div class="line">Reloading httpd:</div></pre></td></tr></table></figure></p>
<p>创建测试页面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]#vim /usr/local/apache/htdocs/index.php </div><div class="line">&lt;?php</div><div class="line">    $conn=mysql_connect(&apos;127.0.0.1&apos;,&apos;root&apos;,&apos;wbz_123&apos;);</div><div class="line">    if ($conn)</div><div class="line">        echo &quot;OK&quot;;</div><div class="line">    else</div><div class="line">        echo &quot;not ok&quot;;</div><div class="line"></div><div class="line">    phpinfo ();</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<h6 id="配置httpd以fpm方式的PHP"><a href="#配置httpd以fpm方式的PHP" class="headerlink" title="配置httpd以fpm方式的PHP"></a>配置httpd以fpm方式的PHP</h6><p>PHP运行方式二选其一，推荐fpm方式<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf php-5.4.40.tar.bz2</span></div></pre></td></tr></table></figure></p>
<h4 id="未完待续！！"><a href="#未完待续！！" class="headerlink" title="未完待续！！"></a>未完待续！！</h4>]]></content>
      
        <categories>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LAMP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建私有CA配置HTTPS服务]]></title>
      <url>/2017/10/11/%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89CA%E9%85%8D%E7%BD%AEHTTPS%E6%9C%8D%E5%8A%A1/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS，常称为HTTP over TLS，HTTP over SSL或HTTP Secure）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。这个协议由网景公司（Netscape）在1994年首次提出，随后扩展到互联网上。   </p>
<p>HTTPS的主要思想是在不安全的网络上创建一安全信道，并可在使用适当的加密包和服务器证书可被验证且可被信任时，对窃听和中间人攻击提供合理的防护。<br><a id="more"></a></p>
<p><strong>服务器设置</strong><br>要使一网络服务器准备好接受HTTPS连接，管理员必须创建一数字证书，并交由证书颁发机构签名以使浏览器接受。证书颁发机构会验证数字证书持有人和其声明的为同一人。浏览器通常都预装了证书颁发机构的证书，所以他们可以验证该签名。  </p>
<blockquote>
<p>注意：因为SSL在HTTP之下工作，对上层协议一无所知，所以SSL服务器只能为一个IP地址/端口组合提供一个证书。这就意味着在大部分情况下，使用HTTPS的同时支持基于名字的虚拟主机是不很现实的。一种叫域名指示（SNI）的方案通过在加密连接创建前向服务器发送主机名解决了这一问题。</p>
</blockquote>
<p><strong>获取证书</strong><br>由证书颁发机构签发的证书有免费的，也有每年收费数美元到数千美元不等的。<br>一个组织也可以自己创建证书颁发机构，尤其是当设置浏览器来访问他们自己的网站时（如，运行在公司或学校局域网内的网站）。他们可以很容易地将自己搭建的CA的证书加入浏览器中，以使浏览器信任接受。  </p>
<h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><ul>
<li><strong>CA服务器(172.18.125.70)：CentOS Linux release 7.3.1611</strong>  </li>
<li><strong>https服务器(172.18.125.60)：CentOS release 6.9</strong>  <ul>
<li><strong>WEB服务：httpd-2.2.15-59</strong>  </li>
<li><strong>SSL模块版本：mod_ssl-2.2.15-59</strong></li>
</ul>
</li>
</ul>
<h4 id="搭建CA服务器并生成自签名证书"><a href="#搭建CA服务器并生成自签名证书" class="headerlink" title="搭建CA服务器并生成自签名证书"></a>搭建CA服务器并生成自签名证书</h4><h5 id="CA配置"><a href="#CA配置" class="headerlink" title="CA配置"></a>CA配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@CA ~]<span class="comment">#cd /etc/pki/CA</span></div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ls</span></div><div class="line">certs  crl  newcerts  private</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#(umask 077;openssl genrsa -out private/cakey.pem 2048)</span></div><div class="line">Generating RSA private key, 2048 bit long modulus</div><div class="line">......+++</div><div class="line">..............................+++</div><div class="line">e is 65537 (0x10001)</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ll</span></div><div class="line">total 0</div><div class="line">drwxr-xr-x. 2 root root  6 Nov  6  2016 certs</div><div class="line">drwxr-xr-x. 2 root root  6 Nov  6  2016 crl</div><div class="line">drwxr-xr-x. 2 root root  6 Nov  6  2016 newcerts</div><div class="line">drwx------. 2 root root 23 Oct 10 08:18 private</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ll private/</span></div><div class="line">total 4</div><div class="line">-rw-------. 1 root root 1679 Oct 10 08:18 cakey.pem</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#touch index.txt</span></div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#echo 01 &gt; serial</span></div></pre></td></tr></table></figure>
<p>为CA创建自签名证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@CA /etc/pki/CA]<span class="comment">#openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 7300</span></div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:BeiJing</div><div class="line">Locality Name (eg, city) [Default City]:BeiJing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:MageEdu Ltd</div><div class="line">Organizational Unit Name (eg, section) []:Ops</div><div class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:ca.magedu.com</span></div><div class="line">Email Address []:caadmin.magedu.com</div><div class="line">[root@CA /etc/pki/CA]#ll</div><div class="line">total 8</div><div class="line">-rw-r--r--. 1 root root 1432 Oct 10 08:25 cacert.pem</div><div class="line">drwxr-xr-x. 2 root root    6 Nov  6  2016 certs</div><div class="line">drwxr-xr-x. 2 root root    6 Nov  6  2016 crl</div><div class="line">-rw-r--r--. 1 root root    0 Oct 10 08:19 index.txt</div><div class="line">drwxr-xr-x. 2 root root    6 Nov  6  2016 newcerts</div><div class="line">drwx------. 2 root root   23 Oct 10 08:18 private</div><div class="line">-rw-r--r--. 1 root root    3 Oct 10 08:19 seria</div></pre></td></tr></table></figure></p>
<h5 id="在HTTPS服务器上生成自签名证书请求"><a href="#在HTTPS服务器上生成自签名证书请求" class="headerlink" title="在HTTPS服务器上生成自签名证书请求"></a>在HTTPS服务器上生成自签名证书请求</h5><p>创建证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS ~]<span class="comment">#cd /etc/httpd/</span></div><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#ls</span></div><div class="line">conf  conf.d  logs  modules  run</div><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#mkdir ssl</span></div><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#cd ssl/</span></div><div class="line">[root@HTTPS /etc/httpd/ssl]<span class="comment">#(umask 077;openssl genrsa -out httpd.key 1024)</span></div><div class="line">Generating RSA private key, 1024 bit long modulus</div><div class="line">..++++++</div><div class="line">.....++++++</div><div class="line">e is 65537 (0x10001)</div><div class="line">[root@HTTPS /etc/httpd/ssl]<span class="comment">#ll</span></div><div class="line">total 4</div><div class="line">-rw------- 1 root root 887 Oct 10 07:36 httpd.key</div></pre></td></tr></table></figure></p>
<p>生成自签名证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd/ssl]<span class="comment">#openssl req -new -key httpd.key -out httpd.csr</span></div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:BeiJing</div><div class="line">Locality Name (eg, city) [Default City]:BeiJing</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:MageEdu Ltd</div><div class="line">Organizational Unit Name (eg, section) []:Ops</div><div class="line">Common Name (eg, your name or your server<span class="string">'s hostname) []:web1.magedu.com</span></div><div class="line">Email Address []:webadmin@magedu.com</div><div class="line"></div><div class="line">Please enter the following 'extra<span class="string">' attributes</span></div><div class="line">to be sent with your certificate request</div><div class="line">A challenge password []:</div><div class="line">An optional company name []:</div><div class="line">[root@HTTPS /etc/httpd/ssl]#ll</div><div class="line">total 8</div><div class="line">-rw-r--r-- 1 root root 712 Oct 10 07:40 httpd.csr</div><div class="line">-rw------- 1 root root 887 Oct 10 07:36 httpd.key</div></pre></td></tr></table></figure></p>
<h5 id="将证书传给CA服务器："><a href="#将证书传给CA服务器：" class="headerlink" title="将证书传给CA服务器："></a>将证书传给CA服务器：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd/ssl]<span class="comment">#scp httpd.csr root@192.168.25.7:/tmp/ </span></div><div class="line">root@192.168.25.7<span class="string">'s password: </span></div><div class="line">httpd.csr</div></pre></td></tr></table></figure>
<h5 id="在CA上签发证书"><a href="#在CA上签发证书" class="headerlink" title="在CA上签发证书"></a>在CA上签发证书</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">[root@CA /etc/pki/CA]<span class="comment">#openssl ca -in /tmp/httpd.csr -out certs/web1.magedu.com.crt -days 365</span></div><div class="line">Using configuration from /etc/pki/tls/openssl.cnf</div><div class="line">Check that the request matches the signature</div><div class="line">Signature ok</div><div class="line">Certificate Details:</div><div class="line">        Serial Number: 1 (0x1)</div><div class="line">        Validity</div><div class="line">            Not Before: Oct 10 00:41:13 2017 GMT</div><div class="line">            Not After : Oct 10 00:41:13 2018 GMT</div><div class="line">        Subject:</div><div class="line">            countryName               = CN</div><div class="line">            stateOrProvinceName       = BeiJing</div><div class="line">            organizationName          = MageEdu Ltd</div><div class="line">            organizationalUnitName    = Ops</div><div class="line">            commonName                = web1.magedu.com</div><div class="line">            emailAddress              = webadmin@magedu.com</div><div class="line">        X509v3 extensions:</div><div class="line">            X509v3 Basic Constraints: </div><div class="line">                CA:FALSE</div><div class="line">            Netscape Comment: </div><div class="line">                OpenSSL Generated Certificate</div><div class="line">            X509v3 Subject Key Identifier: </div><div class="line">                28:6A:06:9B:80:BB:5F:58:91:96:8B:85:6C:FD:FB:53:57:4D:84:A2</div><div class="line">            X509v3 Authority Key Identifier: </div><div class="line">                keyid:08:D7:5B:61:2B:33:53:99:89:BA:74:30:A3:AE:CA:F4:1B:9B:AC:E5</div><div class="line"></div><div class="line">Certificate is to be certified until Oct 10 00:41:13 2018 GMT (365 days)</div><div class="line">Sign the certificate? [y/n]:y</div><div class="line"></div><div class="line"></div><div class="line">1 out of 1 certificate requests certified, commit? [y/n]y</div><div class="line">Write out database with 1 new entries</div><div class="line">Data Base Updated</div><div class="line"></div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ls</span></div><div class="line">cacert.pem  certs  crl  index.txt  index.txt.attr  index.txt.old  newcerts  private  serial  serial.old</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ls newcerts/</span></div><div class="line">01.pem</div><div class="line">[root@CA /etc/pki/CA]<span class="comment">#ls certs/</span></div><div class="line">web1.magedu.com.crt</div></pre></td></tr></table></figure>
<h5 id="将证书回传给https服务器："><a href="#将证书回传给https服务器：" class="headerlink" title="将证书回传给https服务器："></a>将证书回传给https服务器：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@CA /etc/pki/CA]<span class="comment">#scp certs/web1.magedu.com.crt root@192.168.25.20:/etc/httpd/ssl/</span></div><div class="line">root@192.168.25.20<span class="string">'s password: </span></div><div class="line">web1.magedu.com.crt                                                                      100% 3896     3.8KB/s   00:00</div></pre></td></tr></table></figure>
<h4 id="HTTPS服务配置"><a href="#HTTPS服务配置" class="headerlink" title="HTTPS服务配置"></a>HTTPS服务配置</h4><h5 id="检查并安装ssl模块"><a href="#检查并安装ssl模块" class="headerlink" title="检查并安装ssl模块"></a>检查并安装ssl模块</h5><p>查看httpd是否支持ssl模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#httpd -M | grep ssl</span></div><div class="line">Syntax OK</div></pre></td></tr></table></figure></p>
<p>没有模块，安装mod_ssl模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#yum install mod_ssl -y</span></div><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#httpd -M | grep ssl   </span></div><div class="line">Syntax OK</div><div class="line"> ssl_module (shared)</div></pre></td></tr></table></figure></p>
<p>查看模块安装后生成的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd]<span class="comment">#rpm -ql mod_ssl</span></div><div class="line">/etc/httpd/conf.d/ssl.conf</div><div class="line">/usr/lib64/httpd/modules/mod_ssl.so</div><div class="line">/var/cache/mod_ssl</div><div class="line">/var/cache/mod_ssl/scache.dir</div><div class="line">/var/cache/mod_ssl/scache.pag</div><div class="line">/var/cache/mod_ssl/scache.sem</div></pre></td></tr></table></figure></p>
<p>进入/etc/httpd/conf.d/目录下，备份ssl.conf配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS ~]<span class="comment">#cd /etc/httpd/conf.d/</span></div><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#ls</span></div><div class="line">README  ssl.conf  welcome.conf</div><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#cp ssl.conf&#123;,.bak&#125;</span></div><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#ll</span></div><div class="line">total 32</div><div class="line">-rw-r--r-- 1 root root  392 Mar 22  2017 README</div><div class="line">-rw-r--r-- 1 root root 9465 Dec  9  2016 ssl.conf</div><div class="line">-rw-r--r-- 1 root root 9465 Oct 10 19:45 ssl.conf.bak</div><div class="line">-rw-r--r-- 1 root root  299 Dec  9  2016 welcome.conf</div></pre></td></tr></table></figure></p>
<h5 id="配置ssl-conf文件"><a href="#配置ssl-conf文件" class="headerlink" title="配置ssl.conf文件"></a>配置ssl.conf文件</h5><p>仅贴出需要修改的配置  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#vim ssl.conf</span></div><div class="line">&lt;VirtualHost *:443&gt;         //修改监听IP</div><div class="line">DocumentRoot <span class="string">"/var/www/html"</span>    //指点站点目录</div><div class="line">ServerName web1.magedu.com      //配置站点域名</div><div class="line">SSLEngine on        //开启SSL服务，默认开启</div><div class="line">SSLCertificateFile /etc/httpd/ssl/web1.magedu.com.crt       //指定服务器证书路径</div><div class="line">SSLCertificateKeyFile /etc/httpd/ssl/httpd.key              //指定服务器私有证书路径</div></pre></td></tr></table></figure>
<h5 id="重启httpd服务"><a href="#重启httpd服务" class="headerlink" title="重启httpd服务"></a>重启httpd服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#service httpd restart</span></div><div class="line">Stopping httpd:                                            [  OK  ]</div><div class="line">Starting httpd:                                            [  OK  ]</div></pre></td></tr></table></figure>
<h5 id="查看监听端口，检查服务"><a href="#查看监听端口，检查服务" class="headerlink" title="查看监听端口，检查服务"></a>查看监听端口，检查服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@HTTPS /etc/httpd/conf.d]<span class="comment">#ss -tunl</span></div><div class="line">Netid State      Recv-Q Send-Q            Local Address:Port              Peer Address:Port </div><div class="line">tcp   LISTEN     0      128                          :::80                          :::*     </div><div class="line">tcp   LISTEN     0      128                          :::22                          :::*     </div><div class="line">tcp   LISTEN     0      128                           *:22                           *:*     </div><div class="line">tcp   LISTEN     0      128                          :::443                         :::*</div></pre></td></tr></table></figure>
<h4 id="测试HTTPS服务"><a href="#测试HTTPS服务" class="headerlink" title="测试HTTPS服务"></a>测试HTTPS服务</h4><h5 id="在CA服务器上测试443端口和证书加密"><a href="#在CA服务器上测试443端口和证书加密" class="headerlink" title="在CA服务器上测试443端口和证书加密"></a>在CA服务器上测试443端口和证书加密</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">[root@CA ~]<span class="comment">#openssl s_client -connect 172.18.125.60:443 -CAfile /etc/pki/CA/cacert.pem</span></div><div class="line">CONNECTED(00000003)</div><div class="line">depth=1 C = CN, ST = BeiJing, L = BeiJing, O = MageEdu Ltd, OU = Ops, CN = ca.magedu.com, emailAddress = caadmin.magedu.com</div><div class="line">verify <span class="built_in">return</span>:1</div><div class="line">depth=0 C = CN, ST = BeiJing, O = MageEdu Ltd, OU = Ops, CN = web1.magedu.com, emailAddress = webadmin@magedu.com</div><div class="line">verify <span class="built_in">return</span>:1</div><div class="line">---</div><div class="line">Certificate chain</div><div class="line"> 0 s:/C=CN/ST=BeiJing/O=MageEdu Ltd/OU=Ops/CN=web1.magedu.com/emailAddress=webadmin@magedu.com</div><div class="line">   i:/C=CN/ST=BeiJing/L=BeiJing/O=MageEdu Ltd/OU=Ops/CN=ca.magedu.com/emailAddress=caadmin.magedu.com</div><div class="line">---</div><div class="line">Server certificate</div><div class="line">-----BEGIN CERTIFICATE-----</div><div class="line">MIIDhTCCAm2gAwIBAgIBATANBgkqhkiG9w0BAQsFADCBkDELMAkGA1UEBhMCQ04x</div><div class="line">EDAOBgNVBAgMB0JlaUppbmcxEDAOBgNVBAcMB0JlaUppbmcxFDASBgNVBAoMC01h</div><div class="line">Z2VFZHUgTHRkMQwwCgYDVQQLDANPcHMxFjAUBgNVBAMMDWNhLm1hZ2VkdS5jb20x</div><div class="line">ITAfBgkqhkiG9w0BCQEWEmNhYWRtaW4ubWFnZWR1LmNvbTAeFw0xNzEwMTAwMDQx</div><div class="line">MTNaFw0xODEwMTAwMDQxMTNaMIGBMQswCQYDVQQGEwJDTjEQMA4GA1UECAwHQmVp</div><div class="line">SmluZzEUMBIGA1UECgwLTWFnZUVkdSBMdGQxDDAKBgNVBAsMA09wczEYMBYGA1UE</div><div class="line">AwwPd2ViMS5tYWdlZHUuY29tMSIwIAYJKoZIhvcNAQkBFhN3ZWJhZG1pbkBtYWdl</div><div class="line">ZHUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDj79csuBLFSvDFWKKr</div><div class="line">e/+B+HvLRvAExhYjw5UzHIbyWDqf6Zm5GCmYoR3WYzBFsutWvUzRElYXs7DbKefm</div><div class="line">1yN6QtucWjySx3f8N2D1xxmG6zRzmGwtvYjbVNF8onyyMBft8r2JYofC3+AaRjc1</div><div class="line">O0qyZgBuK7nVnR92XePVkvac9QIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG</div><div class="line">+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQU</div><div class="line">KGoGm4C7X1iRlouFbP37U1dNhKIwHwYDVR0jBBgwFoAUCNdbYSszU5mJunQwo67K</div><div class="line">9BubrOUwDQYJKoZIhvcNAQELBQADggEBAL0Iu/0YU6C21GKeO0/mNHS1f4v6/FLc</div><div class="line">pzKXOnRGHd+zqphrqUv7tmMet4jY0VvehDxefBmop9N7RtOO0egPO7Ii0hwxeoJD</div><div class="line">jOzAWgz6PYnQRKxTyfulOyhJp2A6/BCOVBJ6dt1IImFyMHrlsxd/rqo9Sf/8ZytH</div><div class="line">nIOpjGyrr/FUfLnOKkrXNXLsNG09M4OuwVqEHg1ZMpop8rI2+yfJJYCLzK7NfEgX</div><div class="line">EBsPKJ+pI7wiB8zKAP2aKfaOBAlApbeZiu6o/tx6PkeP29POAujdIARBLl90nV7z</div><div class="line">btCMsxQtEdq8sD2LVIA4VE1K5/Omj563iyH0/bJ+6gtIazSvhl5+XtQ=</div><div class="line">-----END CERTIFICATE-----</div><div class="line">subject=/C=CN/ST=BeiJing/O=MageEdu Ltd/OU=Ops/CN=web1.magedu.com/emailAddress=webadmin@magedu.com</div><div class="line">issuer=/C=CN/ST=BeiJing/L=BeiJing/O=MageEdu Ltd/OU=Ops/CN=ca.magedu.com/emailAddress=caadmin.magedu.com</div><div class="line">---</div><div class="line">No client certificate CA names sent</div><div class="line">Server Temp Key: ECDH, prime256v1, 256 bits</div><div class="line">---</div><div class="line">SSL handshake has <span class="built_in">read</span> 1468 bytes and written 373 bytes</div><div class="line">---</div><div class="line">New, TLSv1/SSLv3, Cipher is ECDHE-RSA-AES256-GCM-SHA384</div><div class="line">Server public key is 1024 bit</div><div class="line">Secure Renegotiation IS supported</div><div class="line">Compression: NONE</div><div class="line">Expansion: NONE</div><div class="line">SSL-Session:</div><div class="line">    Protocol  : TLSv1.2</div><div class="line">    Cipher    : ECDHE-RSA-AES256-GCM-SHA384</div><div class="line">    Session-ID: B0A80D993ABE645A825682CCBBC1FB632FF95F50401AD0471487E8DE26465621</div><div class="line">    Session-ID-ctx: </div><div class="line">    Master-Key: A1B54B8F2E52ACF9D9BBD0C49FDED1FF8E76ED1471A2D065B457570F9A7C05542941B6E8A8B5E537B0E1C585D4E5A15A</div><div class="line">    Key-Arg   : None</div><div class="line">    Krb5 Principal: None</div><div class="line">    PSK identity: None</div><div class="line">    PSK identity hint: None</div><div class="line">    TLS session ticket lifetime hint: 300 (seconds)</div><div class="line">    TLS session ticket:</div><div class="line">    0000 - 93 51 03 9b b2 1c 32 b9-a2 5e 5d 0e e9 b7 66 79   .Q....2..^]...fy</div><div class="line">    0010 - cb d7 28 71 07 c5 f6 d9-1f 59 28 5c 42 16 28 89   ..(q.....Y(\B.(.</div><div class="line">    0020 - 23 9e 3b 43 a5 4e 6c 00-a8 4f d7 cb eb f9 ee 7b   <span class="comment">#.;C.Nl..O.....&#123;</span></div><div class="line">    0030 - 86 4c c1 25 ab 70 1a 13-38 e2 99 08 70 d0 35 d0   .L.%.p..8...p.5.</div><div class="line">    0040 - 50 3c ee fd 43 11 22 1a-fc 9e ee 0d 6e b2 ad 48   P&lt;..C.<span class="string">".....n..H</span></div><div class="line">    0050 - 31 85 c9 9e b5 2a cf 00-97 7c 43 b1 95 57 d3 d8   1....*...|C..W..</div><div class="line">    0060 - 45 29 18 52 32 e3 2b 63-65 20 8e 1b 43 1a c7 b7   E).R2.+ce ..C...</div><div class="line">    0070 - 87 2a 80 1b 39 87 51 ad-05 7e d8 bf 05 ef b7 f0   .*..9.Q..~......</div><div class="line">    0080 - cf b1 eb e0 13 ce 85 96-cd 28 b3 12 c5 3a fe 0e   .........(...:..</div><div class="line">    0090 - 9d 06 f6 24 00 55 7a 15-f1 53 50 2e 63 32 ef 15   ...$.Uz..SP.c2..</div><div class="line">    00a0 - 5d 70 ee 0c 0b d0 65 5e-8c ad 7b 15 dd 63 c9 48   ]p....e^..&#123;..c.H</div><div class="line">    00b0 - 21 e7 55 8d 1e d4 5f 1d-ee 51 5a 02 bc ff 35 d8   !.U..._..QZ...5.</div><div class="line"></div><div class="line">    Start Time: 1507640235</div><div class="line">    Timeout   : 300 (sec)</div><div class="line">    Verify return code: 0 (ok)</div><div class="line">---</div><div class="line">GET / HTTP/1.1    </div><div class="line">Host: web1.magedu.com</div></pre></td></tr></table></figure>
<p>通过<code>GET</code>和<code>Host</code>请求页面。  </p>
<h5 id="通过浏览器访问https服务"><a href="#通过浏览器访问https服务" class="headerlink" title="通过浏览器访问https服务"></a>通过浏览器访问https服务</h5><p>访问前需要先修改hosts文件使能够通过域名访问<br>在<code>C:\Windows\System32\drivers\etc\hosts</code>中添加https服务器的IP和对应的域名：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">172</span>.<span class="number">18</span>.<span class="number">125</span>.<span class="number">60</span>		web1.magedu.com</div></pre></td></tr></table></figure></p>
<p>然后通过浏览器访问<a href="https://web1.magedu.com" target="_blank" rel="external">https://web1.magedu.com</a><br><img src="http://ovnpik36u.bkt.clouddn.com/201710/https/https01.gif" alt="image">  </p>
<p>在浏览器中，使用<code>F12</code>进入调试模式查看证书<br><img src="http://ovnpik36u.bkt.clouddn.com/201710/https/https02.png" alt="image"><br>可以看到证书的签发机构和有效期等信息。  </p>
<blockquote>
<p>因为是自己搭建的证书颁发机构，浏览器并没有预装我们的CA证书。所以需要把CA服务器中<code>/etc/pki/CA/cacert.pem</code>导出到客户端，并修改后缀为<code>cacert.crt</code>，然后双击导入‘受信任的颁发机构’里即可正常访问。因为每个客户端都需要导入证书才能够不再提示“您的连接不安全”，用户体验较差。所以自建证书颁发机构仅限于公司的局域网内部小范围使用， <a href="http://www.12306.cn" target="_blank" rel="external">铁路购票网站</a>是个例外！</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Linux实验 </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6.9使用二进制程序包安装MariaDB]]></title>
      <url>/2017/09/25/CentOS6-9%E4%BD%BF%E7%94%A8%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%A8%8B%E5%BA%8F%E5%8C%85%E5%AE%89%E8%A3%85MariaDB/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>MariaDB二进制压缩包命名格式形如：mariadb-版本名-操作系统名.tar.gz，请根据您的操作系统下载正确的版本。  </p>
<h5 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h5><ul>
<li><strong>CentOS release 6.9</strong>  </li>
<li><strong>mariadb-10.2.8-linux-x86_64.tar.gz</strong>  </li>
</ul>
<p>在<a href="https://downloads.mariadb.org/mariadb/" target="_blank" rel="external">MariaDB官网</a>下载最新的稳定版MariaDB二进制程序<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/mariadb/01.gif" alt="image">  </p>
<a id="more"></a>
<h4 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h4><h5 id="准备数据目录"><a href="#准备数据目录" class="headerlink" title="准备数据目录"></a>准备数据目录</h5><p>以/app/data为例，建议使用逻辑卷<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]#chown mysql:mysql /app/data/</div></pre></td></tr></table></figure></p>
<h5 id="创建mysql的组和用户"><a href="#创建mysql的组和用户" class="headerlink" title="创建mysql的组和用户"></a>创建mysql的组和用户</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#groupadd -r -g 306 mysql</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment">#useradd -r -g 306 -u 306 -m -d /app/data mysql</span></div></pre></td></tr></table></figure>
<h5 id="解压二进制程序包并创建软连接"><a href="#解压二进制程序包并创建软连接" class="headerlink" title="解压二进制程序包并创建软连接"></a>解压二进制程序包并创建软连接</h5><p>解压二进制程序包到<code>/usr/local/</code>目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#tar xvf mariadb-10.2.8-linux-x86_64.tar.gz -C /usr/local/</span></div></pre></td></tr></table></figure></p>
<p>进入<code>/usr/local/</code>目录后，创建软连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~/downloads]<span class="comment">#cd /usr/local/</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#ls</span></div><div class="line">bin  etc  games  include  lib  lib64  libexec  mariadb-10.2.8-linux-x86_64  sbin  share  src</div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#ln -sv mariadb-10.2.8-linux-x86_64/ mysql</span></div><div class="line">`mysql<span class="string">' -&gt; `mariadb-10.2.8-linux-x86_64/'</span></div></pre></td></tr></table></figure></p>
<p>修改<code>/usr/local/mysql</code>目录及目录下所有文件的属组，默认属组root<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#chown -R root:mysql /usr/local/mysql/</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>]<span class="comment">#ll mysql/</span></div><div class="line">total 200</div><div class="line">drwxrwxr-x  2 root mysql  4096 May  3 02:05 bin</div><div class="line">-rw-r--r--  1 root mysql 17987 Aug 17 18:05 COPYING</div><div class="line">-rw-r--r--  1 root mysql 86263 Aug 17 18:05 COPYING.thirdparty</div><div class="line">-rw-r--r--  1 root mysql  2275 Aug 17 18:05 CREDITS</div><div class="line">drwxrwxr-x  3 root mysql  4096 Aug 18 04:16 data</div><div class="line">-rw-r--r--  1 root mysql  8245 Aug 17 18:05 EXCEPTIONS-CLIENT</div><div class="line">drwxrwxr-x  3 root mysql  4096 Aug 18 04:15 include</div><div class="line">-rw-r--r--  1 root mysql  8694 Aug 17 18:05 INSTALL-BINARY</div><div class="line">drwxrwxr-x  4 root mysql  4096 May  3 02:05 lib</div><div class="line">drwxrwxr-x  4 root mysql  4096 Aug 18 04:16 man</div><div class="line">drwxrwxr-x 11 root mysql  4096 Aug 18 04:16 mysql-test</div><div class="line">-rw-r--r--  1 root mysql  2371 Aug 17 18:05 README.md</div><div class="line">-rw-r--r--  1 root mysql 19510 Aug 17 18:05 README-wsrep</div><div class="line">drwxrwxr-x  2 root mysql  4096 Aug 18 04:16 scripts</div><div class="line">drwxrwxr-x 30 root mysql  4096 Aug 18 04:16 share</div><div class="line">drwxrwxr-x  4 root mysql  4096 Aug 18 04:16 sql-bench</div><div class="line">drwxrwxr-x  3 root mysql  4096 Aug 18 04:16 support-files</div></pre></td></tr></table></figure></p>
<h5 id="设置服务启动脚本"><a href="#设置服务启动脚本" class="headerlink" title="设置服务启动脚本"></a>设置服务启动脚本</h5><p>将程序包自带的启动脚本复制到<code>/etc/rc.d/init.d/</code>目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#cp support-files/mysql.server /etc/rc.d/init.d/mysqld</span></div></pre></td></tr></table></figure></p>
<p>设置服务开机自启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#chkconfig --add mysqld </span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#chkconfig --list mysqld</span></div><div class="line">mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off</div></pre></td></tr></table></figure></p>
<h5 id="设置数据库配置文件"><a href="#设置数据库配置文件" class="headerlink" title="设置数据库配置文件"></a>设置数据库配置文件</h5><p>根据服务器配置，合理选择数据库配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#mkdir /etc/mysql</span></div><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#cp support-files/my-large.cnf /etc/mysql/my.cnf</span></div></pre></td></tr></table></figure></p>
<p>设置数据库配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#vim /etc/mysql/my.cnf </span></div><div class="line"><span class="comment"># Example MariaDB config file for large systems.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># This is for a large system with memory = 512M where the system runs mainly</span></div><div class="line"><span class="comment"># MariaDB.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># MariaDB programs look for option files in a set of</span></div><div class="line"><span class="comment"># locations which depend on the deployment platform.</span></div><div class="line"><span class="comment"># You can copy this option file to one of those</span></div><div class="line"><span class="comment"># locations. For information about these locations, do:</span></div><div class="line"><span class="comment"># 'my_print_defaults --help' and see what is printed under</span></div><div class="line"><span class="comment"># Default options are read from the following files in the given order:</span></div><div class="line"><span class="comment"># More information at: http://dev.mysql.com/doc/mysql/en/option-files.html</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># In this file, you can use all long options that a program supports.</span></div><div class="line"><span class="comment"># If you want to know which options a program supports, run the program</span></div><div class="line"><span class="comment"># with the "--help" option.</span></div><div class="line"></div><div class="line"><span class="comment"># The following options will be passed to all MariaDB clients</span></div><div class="line">[client]</div><div class="line"><span class="comment">#password       = your_password</span></div><div class="line">port            = 3306</div><div class="line">socket          = /tmp/mysql.sock</div><div class="line"></div><div class="line"><span class="comment"># Here follows entries for some specific programs</span></div><div class="line"></div><div class="line"><span class="comment"># The MariaDB server</span></div><div class="line">[mysqld]</div><div class="line">port            = 3306</div><div class="line">socket          = /tmp/mysql.sock</div><div class="line">skip-external-locking</div><div class="line">key_buffer_size = 256M</div><div class="line">max_allowed_packet = 1M</div><div class="line">table_open_cache = 256</div><div class="line">sort_buffer_size = 1M</div><div class="line">read_buffer_size = 1M</div><div class="line">read_rnd_buffer_size = 4M</div><div class="line">myisam_sort_buffer_size = 64M</div><div class="line">thread_cache_size = 8</div><div class="line">query_cache_size= 16M</div><div class="line"><span class="comment"># Try number of CPU's*2 for thread_concurrency</span></div><div class="line">thread_concurrency = 4      //并发线程数；数值为CPU核心数x2</div><div class="line">datadir = /app/data         //指定数据目录</div><div class="line">innodb_file_per_table = on  //将表存放为单独的文件</div><div class="line">skip_name_resolve = on      //跳过名称反解，提高连接速度</div><div class="line">....省略若干内容....</div></pre></td></tr></table></figure></p>
<p>修改或添加带注释的最后四行内容。  </p>
<h5 id="创建数据库系统文件"><a href="#创建数据库系统文件" class="headerlink" title="创建数据库系统文件"></a>创建数据库系统文件</h5><p>使用<code>/usr/local/mysql/scripts/mysql_install_db</code>脚本为数据库指定运行用户和数据存放目录，并生成原始数据<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#scripts/mysql_install_db --user=mysql --datadir=/app/data/</span></div><div class="line">Installing MariaDB/MySQL system tables <span class="keyword">in</span> <span class="string">'/app/data/'</span> ...</div><div class="line">OK</div><div class="line"></div><div class="line">To start mysqld at boot time you have to copy</div><div class="line">support-files/mysql.server to the right place <span class="keyword">for</span> your system</div><div class="line"></div><div class="line">PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !</div><div class="line">To <span class="keyword">do</span> so, start the server, <span class="keyword">then</span> issue the following commands:</div><div class="line"></div><div class="line"><span class="string">'./bin/mysqladmin'</span> -u root password <span class="string">'new-password'</span></div><div class="line"><span class="string">'./bin/mysqladmin'</span> -u root -h MyCentOS6.9 password <span class="string">'new-password'</span></div><div class="line"></div><div class="line">Alternatively you can run:</div><div class="line"><span class="string">'./bin/mysql_secure_installation'</span></div><div class="line"></div><div class="line"><span class="built_in">which</span> will also give you the option of removing the <span class="built_in">test</span></div><div class="line">databases and anonymous user created by default.  This is</div><div class="line">strongly recommended <span class="keyword">for</span> production servers.</div><div class="line"></div><div class="line">See the MariaDB Knowledgebase at http://mariadb.com/kb or the</div><div class="line">MySQL manual <span class="keyword">for</span> more instructions.</div><div class="line"></div><div class="line">You can start the MariaDB daemon with:</div><div class="line"><span class="built_in">cd</span> <span class="string">'.'</span> ; ./bin/mysqld_safe --datadir=<span class="string">'/app/data/'</span></div><div class="line"></div><div class="line">You can <span class="built_in">test</span> the MariaDB daemon with mysql-test-run.pl</div><div class="line"><span class="built_in">cd</span> <span class="string">'./mysql-test'</span> ; perl mysql-test-run.pl</div><div class="line"></div><div class="line">Please report any problems at http://mariadb.org/jira</div><div class="line"></div><div class="line">The latest information about MariaDB is available at http://mariadb.org/.</div><div class="line">You can find additional information about the MySQL part at:</div><div class="line">http://dev.mysql.com</div><div class="line">Consider joining MariaDB<span class="string">'s strong and vibrant community:</span></div><div class="line">https://mariadb.org/get-involved/</div></pre></td></tr></table></figure></p>
<p>查看指定的数据存储目录下生成的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 /usr/<span class="built_in">local</span>/mysql]<span class="comment">#ls /app/data/</span></div><div class="line">aria_log.00000001  aria_log_control  ib_buffer_pool  ibdata1  ib_logfile0  ib_logfile1  mysql  performance_schema  <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<h5 id="创建日志文件"><a href="#创建日志文件" class="headerlink" title="创建日志文件"></a>创建日志文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#touch /var/log/mysqld.log</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment">#chown mysql /var/log/mysqld.log</span></div></pre></td></tr></table></figure>
<h5 id="启动MariaDB服务"><a href="#启动MariaDB服务" class="headerlink" title="启动MariaDB服务"></a>启动MariaDB服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#service mysqld start</span></div><div class="line">Starting MySQL.170925 16:01:58 mysqld_safe Logging to <span class="string">'/var/log/mysqld.log'</span>.</div><div class="line">170925 16:01:58 mysqld_safe Starting mysqld daemon with databases from /app/data</div><div class="line"> SUCCESS!</div></pre></td></tr></table></figure>
<p> 成功启动！  </p>
<h5 id="设置PATH路径"><a href="#设置PATH路径" class="headerlink" title="设置PATH路径"></a>设置PATH路径</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#vim /etc/profile.d/mysql.sh</span></div><div class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/mysql/bin:<span class="variable">$PATH</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment">#. /etc/profile.d/mysql.sh</span></div></pre></td></tr></table></figure>
<h4 id="安全初始化"><a href="#安全初始化" class="headerlink" title="安全初始化"></a>安全初始化</h4><p>使用MariaDB自带的脚本，对MariaDB的远程登录、root账号密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#mysql_secure_installation </span></div><div class="line"></div><div class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</div><div class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</div><div class="line"></div><div class="line">In order to <span class="built_in">log</span> into MariaDB to secure it, we<span class="string">'ll need the current</span></div><div class="line">password for the root user.  If you've just installed MariaDB, and</div><div class="line">you haven<span class="string">'t set the root password yet, the password will be blank,</span></div><div class="line">so you should just press enter here.</div><div class="line"></div><div class="line">Enter current password for root (enter for none):       //初始没有密码，所以直接敲回车</div><div class="line">OK, successfully used password, moving on...</div><div class="line"></div><div class="line">Setting the root password ensures that nobody can log into the MariaDB</div><div class="line">root user without the proper authorisation.</div><div class="line"></div><div class="line">Set root password? [Y/n] y          //设置root密码</div><div class="line">New password: </div><div class="line">Re-enter new password: </div><div class="line">Password updated successfully!</div><div class="line">Reloading privilege tables..</div><div class="line"> ... Success!</div><div class="line"></div><div class="line"></div><div class="line">By default, a MariaDB installation has an anonymous user, allowing anyone</div><div class="line">to log into MariaDB without having to have a user account created for</div><div class="line">them.  This is intended only for testing, and to make the installation</div><div class="line">go a bit smoother.  You should remove them before moving into a</div><div class="line">production environment.</div><div class="line"></div><div class="line">Remove anonymous users? [Y/n] y         //安全起见，选择移除匿名用户</div><div class="line"> ... Success!</div><div class="line"></div><div class="line">Normally, root should only be allowed to connect from 'localhost<span class="string">'.  This</span></div><div class="line">ensures that someone cannot guess at the root password from the network.</div><div class="line"></div><div class="line">Disallow root login remotely? [Y/n] y       //拒绝root用户远程登录，根据个人需要设置</div><div class="line"> ... Success!</div><div class="line"></div><div class="line">By default, MariaDB comes with a database named '<span class="built_in">test</span><span class="string">' that anyone can</span></div><div class="line">access.  This is also intended only for testing, and should be removed</div><div class="line">before moving into a production environment.</div><div class="line"></div><div class="line">Remove test database and access to it? [Y/n] n      //是否删除系统自带的测试数据库</div><div class="line"> ... skipping.</div><div class="line"></div><div class="line">Reloading the privilege tables will ensure that all changes made so far</div><div class="line">will take effect immediately.</div><div class="line"></div><div class="line">Reload privilege tables now? [Y/n] y    //是否加载特权表？选择加载可以使上面的设置立即生效</div><div class="line"> ... Success!</div><div class="line"></div><div class="line">Cleaning up...</div><div class="line"></div><div class="line">All done!  If you've completed all of the above steps, your MariaDB</div><div class="line">installation should now be secure.</div><div class="line"></div><div class="line">Thanks <span class="keyword">for</span> using MariaDB!</div></pre></td></tr></table></figure></p>
<p>使用设置的root密码登录数据库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#mysql -uroot -p</span></div><div class="line">Enter password: </div><div class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</div><div class="line">Your MariaDB connection id is 16</div><div class="line">Server version: 10.2.8-MariaDB-log MariaDB Server</div><div class="line"></div><div class="line">Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.</div><div class="line"></div><div class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</div><div class="line"></div><div class="line">MariaDB [(none)]&gt; SHOW DATABASES;</div><div class="line">+--------------------+</div><div class="line">| Database           |</div><div class="line">+--------------------+</div><div class="line">| <span class="comment">#mysql50#.gnome2   |</span></div><div class="line">| information_schema |</div><div class="line">| mysql              |</div><div class="line">| performance_schema |</div><div class="line">| <span class="built_in">test</span>               |</div><div class="line">+--------------------+</div><div class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.04 sec)</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> MariaDB </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MariaDB </tag>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bind的安装和配置使用详解]]></title>
      <url>/2017/09/22/Bind%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>BIND（Berkeley Internet Name Daemon）是现今互联网上最常使用的DNS服务器软件，使用BIND作为服务器软件的DNS服务器约占所有DNS服务器的九成。BIND现在由互联网系统协会（Internet Systems Consortium）负责开发与维护。 【<a href="https://zh.wikipedia.org/wiki/BIND" target="_blank" rel="external">摘至维基百科 </a>】</p>
<a id="more"></a>
<h4 id="演示环境"><a href="#演示环境" class="headerlink" title="演示环境"></a>演示环境</h4><ul>
<li>CentOS Linux release 7.3.1611 &emsp;<strong>系统版本</strong>  </li>
<li>bind-9.9.4-37.el7.x86_64 &emsp;<strong>Bind服务版本</strong>  </li>
<li>bind-utils-9.9.4-37.el7.x86_64 &emsp;<strong>DNS解析命令包组合</strong>  <ul>
<li>dig  </li>
<li>host</li>
<li>nslookup  </li>
<li>nsupdate  </li>
</ul>
</li>
</ul>
<h4 id="Bind服务安装和配置项介绍"><a href="#Bind服务安装和配置项介绍" class="headerlink" title="Bind服务安装和配置项介绍"></a>Bind服务安装和配置项介绍</h4><h5 id="Bind的安装"><a href="#Bind的安装" class="headerlink" title="Bind的安装"></a>Bind的安装</h5><p>如果没有特殊需要，推荐使用<code>yum</code>安装。因为通过<code>yum</code>安装时能够解决依赖性、安装的版本也相对比较稳定。   </p>
<h6 id="安装前查看Bind包组信息："><a href="#安装前查看Bind包组信息：" class="headerlink" title="安装前查看Bind包组信息："></a>安装前查看Bind包组信息：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#yum info bind</span></div><div class="line">Loaded plugins: fastestmirror</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line">Installed Packages</div><div class="line">Name        : <span class="built_in">bind</span></div><div class="line">Arch        : x86_64</div><div class="line">Epoch       : 32</div><div class="line">Version     : 9.9.4</div><div class="line">Release     : 37.el7</div><div class="line">Size        : 4.3 M</div><div class="line">Repo        : installed</div><div class="line">From repo   : cdrom</div><div class="line">Summary     : The Berkeley Internet Name Domain (BIND) DNS (Domain Name System) server</div><div class="line">URL         : http://www.isc.org/products/BIND/</div><div class="line">License     : ISC</div><div class="line">Description : BIND (Berkeley Internet Name Domain) is an implementation of the DNS</div><div class="line">            : (Domain Name System) protocols. BIND includes a DNS server (named),</div><div class="line">            : <span class="built_in">which</span> resolves host names to IP addresses; a resolver library</div><div class="line">            : (routines <span class="keyword">for</span> applications to use when interfacing with DNS); and</div><div class="line">            : tools <span class="keyword">for</span> verifying that the DNS server is operating properly.</div></pre></td></tr></table></figure>
<h6 id="安装Bind服务："><a href="#安装Bind服务：" class="headerlink" title="安装Bind服务："></a>安装Bind服务：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#yum install -y bind</span></div></pre></td></tr></table></figure>
<h6 id="查看Bind安装生成的文件目录："><a href="#查看Bind安装生成的文件目录：" class="headerlink" title="查看Bind安装生成的文件目录："></a>查看Bind安装生成的文件目录：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">/etc/logrotate.d/named</div><div class="line">/etc/named</div><div class="line">/etc/named.conf                 //主配置文件</div><div class="line">/etc/named.iscdlv.key</div><div class="line">/etc/named.rfc1912.zones        //区域数据库配置文件</div><div class="line">/etc/named.root.key</div><div class="line">/etc/rndc.conf</div><div class="line">/etc/rndc.key</div><div class="line">/etc/rwtab.d/named</div><div class="line">/etc/sysconfig/named</div><div class="line">/run/named</div><div class="line">/usr/lib/systemd/system/named-setup-rndc.service</div><div class="line">/usr/lib/systemd/system/named.service   //服务脚本</div><div class="line">/usr/lib/tmpfiles.d/named.conf</div><div class="line">/usr/lib64/<span class="built_in">bind</span></div><div class="line">/usr/libexec/generate-rndc-key.sh</div><div class="line">/usr/sbin/arpaname</div><div class="line">/usr/sbin/ddns-confgen</div><div class="line">/usr/sbin/dnssec-checkds</div><div class="line">/usr/sbin/dnssec-coverage</div><div class="line">/usr/sbin/dnssec-dsfromkey</div><div class="line">/usr/sbin/dnssec-importkey</div><div class="line">/usr/sbin/dnssec-keyfromlabel</div><div class="line">/usr/sbin/dnssec-keygen</div><div class="line">/usr/sbin/dnssec-revoke</div><div class="line">/usr/sbin/dnssec-settime</div><div class="line">/usr/sbin/dnssec-signzone</div><div class="line">/usr/sbin/dnssec-verify</div><div class="line">/usr/sbin/genrandom</div><div class="line">/usr/sbin/isc-hmac-fixup</div><div class="line">/usr/sbin/lwresd</div><div class="line">/usr/sbin/named</div><div class="line">/usr/sbin/named-checkconf           //主配置文件语法检查命令</div><div class="line">/usr/sbin/named-checkzone           //区域数据库配置文件语法检查命令</div><div class="line">/usr/sbin/named-compilezone</div><div class="line">/usr/sbin/named-journalprint</div><div class="line">/usr/sbin/nsec3hash</div><div class="line">/usr/sbin/rndc                      //DNS服务控制工具</div><div class="line">/usr/sbin/rndc-confgen</div><div class="line">/usr/share/doc/<span class="built_in">bind</span>-9.9.4           //省略该目录下的若干参考文档</div><div class="line">    ......</div><div class="line">/usr/share/man/man1/arpaname.1.gz   //省略若干man帮助文档</div><div class="line">    ......</div><div class="line">/var/<span class="built_in">log</span>/named.log                  //日志文件</div><div class="line">/var/named</div><div class="line">/var/named/data                     //数据库文件</div><div class="line">/var/named/dynamic</div><div class="line">/var/named/named.ca                 //内置的根节点服务器信息</div><div class="line">/var/named/named.empty</div><div class="line">/var/named/named.localhost</div><div class="line">/var/named/named.loopback</div><div class="line">/var/named/slaves                   //主从配置中的slaves服务器配置</div></pre></td></tr></table></figure>
<p>可以从配置文件看到，Bind的服务名为<code>named</code><br>启动Bind服务并设置为开机启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#systemctl start named</span></div><div class="line">[root@CentOS7 ~]<span class="comment">#systemctl enable named</span></div><div class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/named.service to /usr/lib/systemd/system/named.service.</div></pre></td></tr></table></figure></p>
<p>查看服务启动后的端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ss -tunl</span></div><div class="line">Netid State      Recv-Q Send-Q                              Local Address:Port                                             Peer Address:Port              </div><div class="line">udp   UNCONN     0      0                                       127.0.0.1:53                                                          *:*                  </div><div class="line">udp   UNCONN     0      0                                             ::1:53                                                         :::*                  </div><div class="line">tcp   LISTEN     0      10                                      127.0.0.1:53                                                          *:*                  </div><div class="line">tcp   LISTEN     0      128                                  192.168.25.7:22                                                          *:*                  </div><div class="line">tcp   LISTEN     0      128                                     127.0.0.1:953                                                         *:*                  </div><div class="line">tcp   LISTEN     0      100                                     127.0.0.1:25                                                          *:*                  </div><div class="line">tcp   LISTEN     0      10                                            ::1:53                                                         :::*                  </div><div class="line">tcp   LISTEN     0      128                                           ::1:953                                                        :::*                  </div><div class="line">tcp   LISTEN     0      100                                           ::1:25                                                         :::*</div></pre></td></tr></table></figure></p>
<table>
<thead>
<tr>
<th>NetID</th>
<th>Port</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>TCP</td>
<td>53</td>
<td>负责主从同步</td>
</tr>
<tr>
<td>UDP</td>
<td>53</td>
<td>负责主从同步和客户端查询  </td>
</tr>
<tr>
<td>TCP</td>
<td>953</td>
<td>提供辅助性的管理功能</td>
</tr>
</tbody>
</table>
<h5 id="Bind主配置文件介绍"><a href="#Bind主配置文件介绍" class="headerlink" title="Bind主配置文件介绍"></a>Bind主配置文件介绍</h5><ul>
<li><p><strong>/etc/named.conf  &emsp;主配置文件</strong>  </p>
<ul>
<li>全局配置：<code>option {}；</code>  </li>
<li>日志子系统配置：<code>logging {};</code>  </li>
<li>区域定义：<code>zone &quot;ZONE_NAME&quot; IN {};</code>（本机能够为哪些zone进行解析，就要定义哪<br>些zone）  </li>
</ul>
</li>
<li><p><strong>/etc/named.rfc1912.zones  &emsp;区域配置文件</strong>   </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">zone <span class="string">"ZONE_NAME"</span> IN &#123;</div><div class="line"><span class="built_in">type</span> &#123;master|slave|hint|forward&#125;;</div><div class="line">file <span class="string">"ZONE_NAME.zone"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
</li>
<li><p><strong>/var/named/ZONE_NAME.zone &emsp;区域解析库文件</strong>  </p>
</li>
</ul>
<h6 id="主配置文件详解"><a href="#主配置文件详解" class="headerlink" title="主配置文件详解"></a>主配置文件详解</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/named.conf</span></div><div class="line">//</div><div class="line">// named.conf</div><div class="line">//</div><div class="line">// Provided by Red Hat <span class="built_in">bind</span> package to configure the ISC BIND named(8) DNS</div><div class="line">// server as a caching only nameserver (as a localhost DNS resolver only).</div><div class="line">//</div><div class="line">// See /usr/share/doc/<span class="built_in">bind</span>*/sample/ <span class="keyword">for</span> example named configuration files.</div><div class="line">//</div><div class="line">// See the BIND Administrator<span class="string">'s Reference Manual (ARM) for details about the</span></div><div class="line">// configuration located in /usr/share/doc/bind-&#123;version&#125;/Bv9ARM.html</div><div class="line"></div><div class="line">options &#123;</div><div class="line">        listen-on port 53 &#123; 127.0.0.1; &#125;;   #默认监听端口和监听地址，因为Bind需要对外提供服务，所以监听地址需要修改为外网口IP或localhost(本机所有IP)</div><div class="line">        listen-on-v6 port 53 &#123; ::1; &#125;;      #IPv6监听端口和监听地址</div><div class="line">        directory       "/var/named";       #DNS区域解析库存放目录</div><div class="line">        dump-file       "/var/named/data/cache_dump.db";</div><div class="line">        statistics-file "/var/named/data/named_stats.txt";</div><div class="line">        memstatistics-file "/var/named/data/named_mem_stats.txt";</div><div class="line">        allow-query     &#123; localhost; &#125;;     #允许DNS解析查询的对象，默认localhost只能本机查询，对外提供服务需要修改为any</div><div class="line"></div><div class="line">        /* </div><div class="line">         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</div><div class="line">         - If you are building a RECURSIVE (caching) DNS server, you need to enable </div><div class="line">           recursion. </div><div class="line">         - If your recursive DNS server has a public IP address, you MUST enable access </div><div class="line">           control to limit queries to your legitimate users. Failing to do so will</div><div class="line">           cause your server to become part of large scale DNS amplification </div><div class="line">           attacks. Implementing BCP38 within your network would greatly</div><div class="line">           reduce such attack surface </div><div class="line">        */</div><div class="line">        recursion yes;</div><div class="line"></div><div class="line">        dnssec-enable yes;          #建议改为no</div><div class="line">        dnssec-validation yes;      #建议改为no</div><div class="line"></div><div class="line">        /* Path to ISC DLV key */</div><div class="line">        bindkeys-file "/etc/named.iscdlv.key";</div><div class="line"></div><div class="line">        managed-keys-directory "/var/named/dynamic";</div><div class="line"></div><div class="line">        pid-file "/run/named/named.pid";</div><div class="line">        session-keyfile "/run/named/session.key";</div><div class="line">&#125;;</div><div class="line"></div><div class="line">logging &#123;</div><div class="line">        channel default_debug &#123;</div><div class="line">                file "data/named.run";</div><div class="line">                severity dynamic;</div><div class="line">        &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">zone "." IN &#123;                       #区域配置文件，可以在此按照该格式填写，也可以定义在/etc/named.rfc1912.zones中</div><div class="line">        type hint;</div><div class="line">        file "named.ca";</div><div class="line">&#125;;</div><div class="line"></div><div class="line">include "/etc/named.rfc1912.zones";     #区域配置文件</div><div class="line">include "/etc/named.root.key";</div></pre></td></tr></table></figure>
<p>根据需求，对主配置文件进行微调；  </p>
<blockquote>
<p>注意：任何服务程序如果期望其能够通过网络被其它主机访问，至少应该监听在一个能与外部主机通信的IP地址上;  </p>
</blockquote>
<h6 id="区域配置文件"><a href="#区域配置文件" class="headerlink" title="区域配置文件"></a>区域配置文件</h6><p>在区域文件中定义自己的域名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/named.rfc1912.zones</span></div><div class="line">        ....省略若干默认配置....</div><div class="line">zone <span class="string">"wangbinzhou.com"</span> IN &#123;</div><div class="line">        <span class="built_in">type</span> master;                    <span class="comment">#定义区域类型</span></div><div class="line">        file <span class="string">"wangbinzhou.com.zone"</span>;    <span class="comment">#定义在/var/named/下的域数据库</span></div><div class="line">        allow-update &#123; none; &#125;;         <span class="comment">#是否允许slave服务器同步更新数据</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p><strong>type类型：</strong>  </p>
<ul>
<li>master：定义为主DNS服务器  </li>
<li>slave：在主从DNS架构中，定义为slave服务器  </li>
<li>hint：指定为根域  </li>
<li>forward：是否允许转发  </li>
</ul>
<p><strong>allow-update可选项：</strong>  </p>
<ul>
<li>none: 不允许任何同步更新；  </li>
<li>any：允许任何slave服务器同步更新，包括能够通信的未知主机；  </li>
<li>Slave_IP: 指定可以同步更新的slave服务器；  </li>
</ul>
<h6 id="创建区域解析库文件"><a href="#创建区域解析库文件" class="headerlink" title="创建区域解析库文件"></a>创建区域解析库文件</h6><p>根据区域配置文件<code>zone</code>中定义的<code>file</code>,在目录<code>/var/name</code>中创建对应的区域解析库文件<br>区域解析库文件的语法格式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name [TTL] IN rr_type value</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /var/named/wangbinzhou.com.zone </span></div><div class="line"><span class="variable">$TTL</span> 1D</div><div class="line">@       IN SOA  dns1 admin.wangbinzhou.com. (</div><div class="line">                                        2017092001      ; serial</div><div class="line">                                        1D              ; refresh</div><div class="line">                                        1H              ; retry</div><div class="line">                                        1W              ; expire</div><div class="line">                                        3H )            ; minimum</div><div class="line">        NS      dns1</div><div class="line">dns1    A       192.168.25.70</div><div class="line">websrv  A       192.168.25.20</div><div class="line">www     CNAME   websrv</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>注释</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>$TTL 1D</td>
<td>全局的生存有效期</td>
<td>如果每项没有单独设置有效期，则默认使用全局生存有效期</td>
<td></td>
</tr>
<tr>
<td>2017092001</td>
<td>serial</td>
<td>区域解析库版本号，slave根据该参数值的变化确定是否同步区域解析库。每次修改master区域解析库时，需要增大该版本号的数值；  </td>
</tr>
<tr>
<td>1D</td>
<td>refresh</td>
<td>slave向master更新同步区域解析库的周期</td>
<td></td>
</tr>
<tr>
<td>1H</td>
<td>retry</td>
<td>slave向master更新同步区域解析库失败后的重试时间</td>
<td></td>
</tr>
<tr>
<td>1W</td>
<td>expire</td>
<td>slave如果超过该时间一直未成功同步区域解析库，则slave的区域解析库就过期</td>
<td></td>
</tr>
<tr>
<td>3H</td>
<td>minimum</td>
<td>客户端向服务器查询不存在的域名时，服务器给出否定结果的缓存有效期</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>解析记录类型：</strong>  </p>
<table>
<thead>
<tr>
<th>RR_Type(解析记录类型)</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>A记录</td>
<td>将域名指向一个IPv4地址（例如：10.10.10.10），需要增加A记录  </td>
</tr>
<tr>
<td>CNAME记录</td>
<td>如果将域名指向一个域名，实现与被指向域名相同的访问效果，需要增加CNAME记录  </td>
</tr>
<tr>
<td>MX记录</td>
<td>建立电子邮箱服务，将指向邮件服务器地址，需要设置MX记录  </td>
</tr>
<tr>
<td>NS记录</td>
<td>域名解析服务器记录，如果要将子域名指定某个域名服务器来解析，需要设置NS记录  </td>
</tr>
<tr>
<td>TXT记录</td>
<td>可任意填写（可为空），通常用做SPF记录（反垃圾邮件）使用  </td>
</tr>
<tr>
<td>AAAA记录</td>
<td>将主机名（或域名）指向一个IPv6地址（例如：ff03:0:0:0:0:0:0:c1），需要添加AAAA记录  </td>
</tr>
<tr>
<td>SOA记录</td>
<td>起始授权记录；一个区域解析库有且仅能有一个SOA记录，而必须为解析库的第一条记录；  </td>
</tr>
<tr>
<td>PTR记录</td>
<td>反向解析记录，实现将IP解析为域名，需要增加PTR记录  </td>
</tr>
</tbody>
</table>
<h6 id="检查配置文件并启动服务"><a href="#检查配置文件并启动服务" class="headerlink" title="检查配置文件并启动服务"></a>检查配置文件并启动服务</h6><p>主配置文件语法检查：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 /var/named]<span class="comment">#named-checkconf</span></div></pre></td></tr></table></figure></p>
<p>没有任何输出说明语法没有问题；  </p>
<p>区域解析库语法检查：<br>使用格式：<code>named-checkzone  域名  对应的解析库文件</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#named-checkzone wangbinzhou.com /var/named/wangbinzhou.com.zone </span></div><div class="line">zone wangbinzhou.com/IN: loaded serial 2017092001</div><div class="line">OK</div></pre></td></tr></table></figure></p>
<p>重载配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#rndc reload</span></div><div class="line">server reload successful</div></pre></td></tr></table></figure></p>
<p>测试服务是否正常：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#dig www.wangbinzhou.com @192.168.25.7</span></div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-37.el7 &lt;&lt;&gt;&gt; www.wangbinzhou.com @192.168.25.7</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 12493</div><div class="line">;; flags: qr aa rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 1, ADDITIONAL: 2</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;www.wangbinzhou.com.           IN      A</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">www.wangbinzhou.com.    86400   IN      CNAME   websrv.wangbinzhou.com.</div><div class="line">websrv.wangbinzhou.com. 86400   IN      A       192.168.25.20</div><div class="line"></div><div class="line">;; AUTHORITY SECTION:</div><div class="line">wangbinzhou.com.        86400   IN      NS      dns1.wangbinzhou.com.</div><div class="line"></div><div class="line">;; ADDITIONAL SECTION:</div><div class="line">dns1.wangbinzhou.com.   86400   IN      A       192.168.25.70</div><div class="line"></div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 192.168.25.7<span class="comment">#53(192.168.25.7)</span></div><div class="line">;; WHEN: Fri Sep 22 11:18:04 CST 2017</div><div class="line">;; MSG SIZE  rcvd: 120</div></pre></td></tr></table></figure></p>
<p>在<code>ANSWER SECTION:</code>字段中，可以看到<code>www.wangbinzhou.com</code>的解析记录类型和对应的<code>value</code>同我们区域解析库中的设置一样；  </p>
<h4 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h4><h5 id="bind-utils中的解析命令"><a href="#bind-utils中的解析命令" class="headerlink" title="bind-utils中的解析命令"></a>bind-utils中的解析命令</h5><ul>
<li>dig  </li>
<li>host  </li>
<li>nslookup  </li>
</ul>
<h6 id="dig"><a href="#dig" class="headerlink" title="dig"></a>dig</h6><p>dig用于测试dns系统，不会查询hosts文件进行解析<br><em>语法：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dig [-t <span class="built_in">type</span>] name [@SERVER] [query options]</div></pre></td></tr></table></figure></p>
<p><code>-t type</code>: 指定查询的解析记录类型，可选项；<br><code>name</code>：指定要查询的域名；<br><code>@SERVER</code>: 指定查询时使用的DNS服务器，可选项，不指定默认使用本机设置的DNS；<br><code>query options</code>: 指定查询选项；  </p>
<p><em>查询选项：</em><br><code>+[no]trace</code>：跟踪解析过程<br><code>+[no]recurse</code>：进行递归解析  </p>
<p>测试反向解析：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dig -x IP @SERVER</div></pre></td></tr></table></figure></p>
<p>模拟区域传送：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dig -t axfr ZONE_NAME @SERVER</div><div class="line">dig -t axfr wangbinzhou.com @192.168.25.70</div></pre></td></tr></table></figure></p>
<h6 id="host"><a href="#host" class="headerlink" title="host"></a>host</h6><p><em>语法：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">host [-t <span class="built_in">type</span>] name [SERVER]</div></pre></td></tr></table></figure></p>
<p><em>示例：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#host www.wangbinzhou.com 192.168.25.7</span></div><div class="line">Using domain server:</div><div class="line">Name: 192.168.25.7</div><div class="line">Address: 192.168.25.7<span class="comment">#53</span></div><div class="line">Aliases: </div><div class="line"></div><div class="line">www.wangbinzhou.com is an <span class="built_in">alias</span> <span class="keyword">for</span> websrv.wangbinzhou.com.</div><div class="line">websrv.wangbinzhou.com has address 192.168.25.20</div></pre></td></tr></table></figure></p>
<h6 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h6><p><em>语法：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nslookup [-option] [name | -] [SERVER]</div></pre></td></tr></table></figure></p>
<p>交互式模式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nslookup&gt;  </div><div class="line">    server IP: 指明使用哪个DNS服务器进行查询；</div><div class="line">    <span class="built_in">set</span> q=RR_TYPE: 指明查询的资源记录类型；</div><div class="line">    NAME: 要查询的域名；</div></pre></td></tr></table></figure></p>
<p><em>示例：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#nslookup </span></div><div class="line">&gt; server 192.168.25.7</div><div class="line">Default server: 192.168.25.7</div><div class="line">Address: 192.168.25.7<span class="comment">#53</span></div><div class="line">&gt; <span class="built_in">set</span> q=A</div><div class="line">&gt; www.wangbinzhou.com</div><div class="line">Server:         192.168.25.7</div><div class="line">Address:        192.168.25.7<span class="comment">#53</span></div><div class="line"></div><div class="line">www.wangbinzhou.com     canonical name = websrv.wangbinzhou.com.</div><div class="line">Name:   websrv.wangbinzhou.com</div><div class="line">Address: 192.168.25.20</div><div class="line">&gt;</div></pre></td></tr></table></figure></p>
<h5 id="rndc"><a href="#rndc" class="headerlink" title="rndc"></a>rndc</h5><p>Bind程序包中自带的DNS服务控制工具，使用TCP的953端口；<br><em>语法：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rndc COMMAND</div></pre></td></tr></table></figure></p>
<p><em>COMMAND选项：</em><br><code>reload</code>: 重载主配置文件和区域解析库文件<br><code>reload zonename</code>: 重载区域解析库文件<br><code>retransfer zonename</code>: 手动启动区域传送，而不管序列号是否增加<br><code>notify zonename</code>: 重新对区域传送发通知<br><code>reconfig</code>: 重载主配置文件<br><code>querylog</code>: 开启或关闭查询日志文件/var/log/message<br><code>trace</code>: 递增debug一个级别<br><code>trace LEVEL</code>: 指定使用的级别<br><code>notrace</code>： 将调试级别设置为 0<br><code>flush</code>：清空DNS服务器的所有缓存记录  </p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> DNS </tag>
            
            <tag> Bind </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TCP_Wrappers(hosts.allow和hosts.deny)详解]]></title>
      <url>/2017/09/17/TCP-Wrappers%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>TCP Wrapper是一个基于主机的网络访问控制系统，属于工作在传输层的TCP协议。用于对有状态连接的特定服务进行安全检测并实现访问控制。<br>原始代码是1990年左右由荷兰人Wietse Venema编写的，目的是监视埃因霍温理工大学数学和计算机科学系的Unix工作站上的黑客行动。<br><a id="more"></a></p>
<h4 id="判断进程是否支持librap控制"><a href="#判断进程是否支持librap控制" class="headerlink" title="判断进程是否支持librap控制"></a>判断进程是否支持librap控制</h4><p>某进程是否接受libwrap的控制取决于发起此进程的程序在编译时是否针对libwrap进行编译的<br>判断服务程序是否能够由tcp_wrapper进行访问控制的方法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ldd /PATH/TO/PROGRAM|grep libwrap.so</div><div class="line">strings PATH/TO/PROGRAM|grep libwrap.so</div></pre></td></tr></table></figure></p>
<p>以SSHD服务为例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#which sshd</span></div><div class="line">/usr/sbin/sshd</div><div class="line">[root@CentOS7 ~]<span class="comment">#ldd /usr/sbin/sshd | grep libwrap.so</span></div><div class="line">        libwrap.so.0 =&gt; /lib64/libwrap.so.0 (0x00007f4ebdd29000)</div></pre></td></tr></table></figure></p>
<p>_可以看到，SSHD服务调用的库里面有<code>libwrap.so</code>，所以SSHD能够由<code>TCP_Wrapper</code>进行控制_  </p>
<h4 id="TCP-Wrappers的使用"><a href="#TCP-Wrappers的使用" class="headerlink" title="TCP_Wrappers的使用"></a>TCP_Wrappers的使用</h4><h5 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">man 5 hosts_access</div><div class="line">man 5 hosts_options</div></pre></td></tr></table></figure>
<h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ls /etc/hosts.</span></div><div class="line">hosts.allow  hosts.deny</div></pre></td></tr></table></figure>
<p>检查顺序：hosts.allow ==&gt; hosts.deny (默认允许)  </p>
<blockquote>
<p>注意：一旦前面规则匹配，直接生效，将不再继续  </p>
</blockquote>
<h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">daemon_list@host: client_list [ :options :option… ]</div></pre></td></tr></table></figure>
<h6 id="Daemon-list-host格式"><a href="#Daemon-list-host格式" class="headerlink" title="Daemon_list@host格式"></a>Daemon_list@host格式</h6><ul>
<li>单个应用程序的二进制文件名，而非服务名，例如vsftpd</li>
<li>以逗号或空格分隔的应用程序文件名列表，如<br>:sshd,vsftpd  </li>
<li>ALL表示所有接受tcp_wrapper控制的服务程序</li>
<li>主机有多个IP，可用@hostIP来实现控制如： <code>in.telnetd@192.168.0.254</code></li>
</ul>
<h6 id="客户端Client-list格式"><a href="#客户端Client-list格式" class="headerlink" title="客户端Client_list格式"></a>客户端Client_list格式</h6><ul>
<li>以逗号或空格分隔的客户端列表  </li>
<li>基于IP地址：  <ul>
<li>192.168.10.1  </li>
<li>192.168.1.  </li>
</ul>
</li>
<li>基于主机名：  <ul>
<li>www.magedu.com  </li>
<li>.magedu.com 较少用  </li>
</ul>
</li>
<li>基于网络/掩码：  <ul>
<li>192.168.0.0/255.255.255.0  </li>
<li>192.168.1.0/24（CentOS7及以上支持）  </li>
</ul>
</li>
<li>基于网络组（NIS 域）： @mynetwork  </li>
<li>内置ACL：  <ul>
<li>ALL  </li>
<li>LOCAL  </li>
<li>KNOWN  </li>
<li>UNKNOWN  </li>
<li>PARANOID  </li>
</ul>
</li>
</ul>
<h6 id="EXCEPT用法"><a href="#EXCEPT用法" class="headerlink" title="EXCEPT用法"></a>EXCEPT用法</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vsftpd: 172.16. EXCEPT 172.16.100.0/24 EXCEPT 172.16.100.1</div></pre></td></tr></table></figure>
<blockquote>
<p>Note:同样的语法，分别配置到<code>hosts.allow</code>和<code>hosts.deny</code>里的效果是完全不同的！  </p>
</blockquote>
<h6 id="options-选项"><a href="#options-选项" class="headerlink" title="[:options]选项"></a>[:options]选项</h6><p>参考：<code>man 5 hosts_options</code>  </p>
<ul>
<li><p>deny 主要用在/etc/hosts.allow定义“拒绝”规则如：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/hosts.allow</span></div><div class="line">vsftpd: 172.16. :deny</div></pre></td></tr></table></figure>
</li>
<li><p>allow 主要用在/etc/hosts.deny定义“允许” 规则如： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vsftpd:172.16. :allow</div></pre></td></tr></table></figure>
</li>
<li><p>spawn 启动一个外部程序完成执行的操作  </p>
</li>
<li>twist 实际动作是拒绝访问,使用指定的操作替换当前服务,标准I/O和ERROR发送到客户端,默认至/dev/null  </li>
</ul>
<h6 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcpdmatch [-d] daemon[@host] client</div></pre></td></tr></table></figure>
<p>-d 测试当前目录下的hosts.allow和hosts.deny  </p>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h5 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h5><p>只允许192.168.1.0/24的主机访问sshd<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/hosts.allow</span></div><div class="line">sshd: 192.168.1.</div><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/hosts.deny</span></div><div class="line">sshd :ALL</div></pre></td></tr></table></figure></p>
<h5 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h5><p>只允许192.168.1.0/24的主机访问telnet和vsftpd服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/hosts.allow</span></div><div class="line">vsftpd,in.telnetd: 192.168.1.</div><div class="line">[root@CentOS7 ~]<span class="comment">#vim /etc/host.deny</span></div><div class="line">vsftpd,in.telnetd: ALL</div></pre></td></tr></table></figure></p>
<h5 id="示例3："><a href="#示例3：" class="headerlink" title="示例3："></a>示例3：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sshd: ALL :spawn <span class="built_in">echo</span> <span class="string">"<span class="variable">$(date)</span> login attempt from %c to %s,%d"</span> &gt;&gt;/var/<span class="built_in">log</span>/sshd.log</div></pre></td></tr></table></figure>
<p>说明：<br>在/etc/hosts.allow中添加，允许登录，并记录日志<br>在/etc/hosts.deny中添加，拒绝登录， 并记录日志<br><code>%c</code> 客户端信息<br><code>%s</code> 服务器端信息<br><code>%d</code> 服务名<br><code>%p</code> 守护进程的PI  </p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux系统安全 </tag>
            
            <tag> 访问控制 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SSH基于密钥的登录认证]]></title>
      <url>/2017/09/13/SSH%E5%9F%BA%E4%BA%8E%E5%AF%86%E9%92%A5%E7%9A%84%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81/</url>
      <content type="html"><![CDATA[<h3 id="SSH简介"><a href="#SSH简介" class="headerlink" title="SSH简介"></a>SSH简介</h3><p>SSH，secure shell, protocol, 安全的远程登录，使用的是tcp/22端口。  </p>
<h4 id="具体的软件实现："><a href="#具体的软件实现：" class="headerlink" title="具体的软件实现："></a>具体的软件实现：</h4><ul>
<li>OpenSSH: ssh协议的开源实现,CentOS默认安装  </li>
<li>Dropbear：另一个开源实现  </li>
</ul>
<p><em>在这里，我们主要介绍OpenSSH基于密钥的登录验证配置过程</em>  </p>
<a id="more"></a>
<h4 id="SSH协议版本"><a href="#SSH协议版本" class="headerlink" title="SSH协议版本"></a>SSH协议版本</h4><ul>
<li>v1: 基于CRC-32做MAC，不安全； man-in-middle  </li>
<li>v2：双方主机协议选择安全的MAC方式<br>基于DH算法做密钥交换，使用RSA或DSA实现身份认证   </li>
</ul>
<h4 id="用户登录认证的两种方式："><a href="#用户登录认证的两种方式：" class="headerlink" title="用户登录认证的两种方式："></a>用户登录认证的两种方式：</h4><ul>
<li>基于Password的认证  </li>
<li>基于Key的认证  </li>
</ul>
<p>因为系统默认使用的是<code>基于Password的认证</code>，而且<code>基于Password的认证</code>使用起来比较上手、配置起来比较简单，但是批量管理的时候会有一定的复杂性和安全问题。所以，在这里我们使用<code>基于Kye的认证</code>。  </p>
<h3 id="基于密钥的登录认证过程"><a href="#基于密钥的登录认证过程" class="headerlink" title="基于密钥的登录认证过程"></a>基于密钥的登录认证过程</h3><ul>
<li>首先在客户端生成一对密钥（ssh-keygen）  </li>
<li>并将客户端的公钥ssh-copy-id 拷贝到服务端  </li>
<li>当客户端再次发送一个连接请求，包括ip、用户名  </li>
<li>服务端得到客户端的请求后，会到<code>authorized_keys</code>中查找，如果有响应的IP和用户，就会随机生成一个字符串例如:acdf  </li>
<li>服务端将使用客户端拷贝过来的公钥进行加密，然后发送给客户端  </li>
<li>得到服务端发来的消息后，客户端会使用私钥进行解密，然后将解密后的字符串发送给服务端  </li>
<li>服务端接受到客户端发来的字符串后，跟之前的字符串进行对比，如果一致，就允许免密码登录  </li>
</ul>
<h3 id="基于Key认证的配置过程"><a href="#基于Key认证的配置过程" class="headerlink" title="基于Key认证的配置过程"></a>基于Key认证的配置过程</h3><p>SSH客户端根据操作系统的种类，主要分为三种：  </p>
<ul>
<li>Linux  <ul>
<li>openssh-clients-6.6  </li>
</ul>
</li>
<li>Windows<ul>
<li>Xshell</li>
<li>SecureCRT  </li>
</ul>
</li>
<li>Mac OS  </li>
</ul>
<p>因条件有限，在这里主要演示Linux和Window系统上使用SSH基于Key认证的配置过程。  </p>
<h4 id="Linux客户端"><a href="#Linux客户端" class="headerlink" title="Linux客户端"></a>Linux客户端</h4><p>1、在客户端生成密钥对<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa [-P <span class="string">''</span>] [-f “~/.ssh/id_rsa<span class="string">"]</span></div></pre></td></tr></table></figure></p>
<p>参数说明：<br><code>-t</code>: 指定加密类型<br><code>-P</code>: 设置对密钥加密的密码，可选项，不指定也可以在交互界面设定<br><code>-f</code>: 指定密钥保存位置和名称，默认为<code>-f “~/.ssh/id_rsa&quot;</code>  </p>
<p>2、把公钥文件传输至远程服务器对应用户的家目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-copy-id [-i [identity_file]] [user@]host</div></pre></td></tr></table></figure></p>
<p><em>示例：</em>  </p>
<table>
<thead>
<tr>
<th>主机信息</th>
<th>主机名</th>
<th>IP地址</th>
</tr>
</thead>
<tbody>
<tr>
<td>服务端</td>
<td>MyCentOS6.9</td>
<td>192.168.25.20</td>
</tr>
<tr>
<td>客户端</td>
<td>CentOS7.com</td>
<td>192.168.25.7</td>
</tr>
</tbody>
</table>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#hostname</span></div><div class="line">CentOS7.com</div><div class="line">[root@CentOS7 ~]<span class="comment">#ssh-keygen -t rsa  //在客户端使用RSA加密生成密钥</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): //生成密钥的默认保存路径</div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): //对密钥进行加密的密码，可选，推荐使用！</div><div class="line">Enter same passphrase again: //再次确认密码</div><div class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">6a:cb:c3:38:d3:72:58:78:80:be:c7:c6:57:28:f2:f6 root@CentOS7.com</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line">+--[ RSA 2048]----+</div><div class="line">|                 |</div><div class="line">|                 |</div><div class="line">|   .             |</div><div class="line">|  . .            |</div><div class="line">| .   o .S        |</div><div class="line">|  o o +..        |</div><div class="line">|   * Oo.         |</div><div class="line">|  . &amp;o*.         |</div><div class="line">|   + BE.         |</div><div class="line">+-----------------+</div><div class="line">[root@CentOS7 ~]#ls .ssh/       //查看生成的公钥和私钥</div><div class="line">id_rsa  id_rsa.pub  known_hosts</div><div class="line">[root@CentOS7 ~]#ssh-copy-id -i .ssh/id_rsa.pub root@192.168.25.20  //将公钥传入远程服务器，不指定用户名默认使用root</div><div class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</div><div class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</div><div class="line">root@192.168.25.20's password:  //远程服务器的密码</div><div class="line"></div><div class="line">Number of key(s) added: 1</div><div class="line"></div><div class="line">Now try logging into the machine, with:   <span class="string">"ssh 'root@192.168.25.20'"</span></div><div class="line">and check to make sure that only the key(s) you wanted were added.</div><div class="line"></div><div class="line">[root@CentOS7 ~]<span class="comment">#ssh 192.168.25.20  //ssh远程连接服务器测试</span></div><div class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">'/root/.ssh/id_rsa'</span>:   //输入对私钥进行加密的密码即可</div><div class="line">Last login: Mon Sep 11 00:31:30 2017 from 192.168.25.1</div><div class="line">[root@MyCentOS6 ~]<span class="comment">#hostname     //成功通过密钥登录远程服务器</span></div><div class="line">MyCentOS6.9</div><div class="line">[root@MyCentOS6 ~]<span class="comment">#cat .ssh/authorized_keys //查看导入的客户端的公钥</span></div><div class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDiQBHFcGusqKHo0HZpX/K0PeSExDwDwRczDURpnKQpX04CM2RoXp7qzjHY468Y9Lf22IA6PSS4ecmazqlxO+dntDVvsUVklQAM9UEel97tZBPrlb9yGU8G0yfffMM6kQgEvgzICPsu8HQtRCyttoFWpMK1M0Sxb+gzl2Ktpfkr9HvTPzFx4hkLDAd20dT/sONqO1WyaJOM2MWNUQf1wsY4Im3FguyKIkX+8y61acW9xGaBRBWdQGpuA8VQp5YXBOl9bRIguMk9YdIXCyrXOzrOgKK9aYY43KHPzmDRtGDEa18FZcRcokw4LXur3oGw2Kny344bV84M0qm4/M5xwtzh root@CentOS7.com</div></pre></td></tr></table></figure>
<h4 id="Windows客户端"><a href="#Windows客户端" class="headerlink" title="Windows客户端"></a>Windows客户端</h4><h5 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h5><p>1、在Xshell客户端生成密钥，并导出公钥<br>在Xshell中找到<code>工具 --&gt; 新建用户密钥生成向导</code>，按照提示依次操作<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/xshell/xshell1.gif" alt="image">  </p>
<p>在设置完密码后，先不要点击“完成”。继续点击<code>下一步</code>后，选择<code>保存为文件</code>。<br><code>保存为文件</code>会导出公钥，随后我们需要将公钥上传到SSH服务端。  </p>
<p>2、使用<code>rz</code>命令，将导出的公钥上传到SSH服务端<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/xshell/xshell2.gif" alt="image">  </p>
<p>3、将导入的公钥内容追到到<code>~/.ssh/authorized_keys</code>中<br>如果之前使用过密钥认证，<code>authorized_keys</code>文件存在，可以使用cat将公钥追加进去：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cat id_rsa_2048.pub &gt;&gt; .ssh/authorized_keys</span></div></pre></td></tr></table></figure></p>
<p>如果<code>authorized_keys</code>文件不存在，也可以将<code>id_rsa_2048.pub</code>文件直接复制改名为<code>authorized_keys</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cp id_rsa_2048.pub .ssh/authorized_keys</span></div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong><br><code>authorized_keys</code>文件的权限必须是600,确保不能被其他用户随意的读写<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#ll .ssh/authorized_keys </span></div><div class="line">-rw------- 1 root root 778 Sep 12 13:28 .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>导入文件后，我们就可以在Xshell上愉快的使用密钥直接登录了<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/xshell/xshell3.gif" alt="image">  </p>
<h5 id="SecureCRT"><a href="#SecureCRT" class="headerlink" title="SecureCRT"></a>SecureCRT</h5><p>1、使用SecureCRT生成密钥<br>在SecureCRT中找到<code>Tools --&gt; Create Public Key...</code>，按照提示生成密钥<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/crt/crt1.gif" alt="image">  </p>
<p>2、使用<code>rz</code>命令，将导出的公钥上传到SSH服务端后，把公钥导入<code>authorized_key</code>文件<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/crt/crt2.png" alt="image"><br>_生成密钥时，如果最后保存Key选择的是“OpenSSH Key Format(new)”选项，则可以直接将公钥追加到<code>authorized_keys</code>文件；_<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#cat Identity.pub &gt;&gt; .ssh/authorized_keys</span></div></pre></td></tr></table></figure></p>
<p>_如果选择的是<code>Standard Public Key and VanDyke Private Key format</code>选项，则需要转换格式后导入<code>authorized_keys</code>文件_<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment">#ssh-keygen -i -f Identity.pub &gt;&gt; .ssh/authorized_keys</span></div></pre></td></tr></table></figure></p>
<p>3、使用SecureCRT客户端通过密钥连接SSH服务器<br><img src="http://ovnpik36u.bkt.clouddn.com/20170913/crt/crt3.gif" alt="image"><br>第一次使用密钥连接，会提示输入密钥加密时设置的密码，后期连接就不再需要密码了~~~</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SSH </tag>
            
            <tag> openssh-client </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[机器人三定律]]></title>
      <url>/2017/09/13/%E6%9C%BA%E5%99%A8%E4%BA%BA%E4%B8%89%E5%AE%9A%E5%BE%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://ovnpik36u.bkt.clouddn.com/20170913/irobot/irobot.png" alt="image"><br><em>电影《I,Robot》剧照</em></p>
<a id="more"></a>
<h4 id="第零定律"><a href="#第零定律" class="headerlink" title="第零定律"></a>第零定律</h4><p><strong>机器人必须保护人类的整体利益不受伤害。</strong>  </p>
<h4 id="第一定律"><a href="#第一定律" class="headerlink" title="第一定律"></a>第一定律</h4><p><strong>机器人不得伤害人类个体，或者目睹人类个体将遭受危险而袖手不管，除非这违反了机器人学第零定律。</strong>  </p>
<h4 id="第二定律"><a href="#第二定律" class="headerlink" title="第二定律"></a>第二定律</h4><p><strong>机器人必须服从人给予它的命令，当该命令与第零定律或者第一定律冲突时例外。</strong>  </p>
<h4 id="第三定律"><a href="#第三定律" class="headerlink" title="第三定律"></a>第三定律</h4><p><strong>机器人在不违反第零、第一、第二定律的情况下要尽可能保护自己的生存。</strong>  </p>
<blockquote>
<p>三定律加上零定律，看来堪称完美，但是，“人类的整体利益”这种混沌的概念，连人类自己都搞不明白，更不要说那些用0和1来想问题的机器人了。威尔•史密斯曾说：“《我，机器人》的中心概念是机器人没有问题，科技本身也不是问题，人类逻辑的极限才是真正的问题。”  ——<a href="http://www.baike.com/wiki/%e6%9c%ba%e5%99%a8%e4%ba%ba%e4%b8%89%e5%ae%9a%e5%be%8b" target="_blank" rel="external">摘至互动百科</a></p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Windows10启用Linux子系统]]></title>
      <url>/2017/09/12/Windows10%E5%90%AF%E7%94%A8Linux%E5%AD%90%E7%B3%BB%E7%BB%9F/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在去年的Build 2016上，微软向全世界介绍了他们还处于Beta阶段的Windows下的 Linux 子系统<code>Windows Subsystem for Linux（WSL）</code>，它可以让开发者们在 Windows 10 下通过 Bash shell 运行原生的Ubuntu用户态二进制程序。不得不说，这是对缺少Money换MAC的IT工作者的福音！<br><a id="more"></a></p>
<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><h3 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h3><ul>
<li>操作系统版本需要是<code>1607+</code>  </li>
<li>操作系统需要是<code>64位</code>  </li>
</ul>
<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><ul>
<li>查看系统版本并更新系统    </li>
<li>启用<code>开发人员模式</code>  </li>
<li>启用<code>适用于Linux的Windows子系统(Bate)</code>  </li>
<li>下载安装Linux子系统  </li>
</ul>
<h3 id="详细过程"><a href="#详细过程" class="headerlink" title="详细过程"></a>详细过程</h3><p>1、在”设置 –&gt; 系统 –&gt; 关于”里面查看系统版本信息：<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/02.png" alt="image"><br>我的操作系统版本如下：<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/01.png" alt="image"><br>2、在“设置 –&gt; 更新和安全 –&gt; 针对开发人员”里面启用<code>开发人员模式</code><br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/03.png" alt="image"><br>选择<code>是</code>后，会下载安装一些开发人员模式程序包：<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/04.png" alt="image"><br>3、在“控制面板 –&gt; 程序和功能 –&gt; 启用或关闭Windows功能”中，勾选启用<code>适用于Linux的Windows子系统(Bate)</code><br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/05.png" alt="image"><br>勾选后，点击<code>确定</code>后提示需要重启才能完成安装，保存并退出其他软件后<code>重启电脑</code><br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/06.png" alt="image"><br>4、电脑重新启动后，使用<code>Win + R</code>键调出运行窗口<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/07.png" alt="image"><br>在里面输入<code>bash</code>后敲回车，弹出如下窗口，根据提示按`y``继续<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/08.png" alt="image"><br>因为所处的环境较差的原因，导致下载中断并报错，但是他自己又自动开始下载<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/09.png" alt="image"><br>下载成功后，根据提示输入相应内容<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/10.png" alt="image"><br>设置Linux子系统的密码<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/11.png" alt="image"><br>安装成功，Linux子系统的Shell界面如下<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/12.png" alt="image"><br>查看Linux子系统的内核版本和主机名(主机名和Win10主机名相同)<br><img src="http://ovnpik36u.bkt.clouddn.com/20170912/linuxforwin/13.png" alt="image">  </p>
<blockquote>
<p>注意：在Linux子系统中不要随便删除文件，因为Linux系统中没有回收站！  </p>
</blockquote>
<h2 id="卸载Linux子系统"><a href="#卸载Linux子系统" class="headerlink" title="卸载Linux子系统"></a>卸载Linux子系统</h2><p>如果我们安装后不想用Linux子系统了，也是可以卸载的。<br>按<code>Win + X</code>后，在弹出的窗口中选择<code>Windows PowerShell(管理员)</code>，然后输入<code>lxrun /uninstall /full</code>开始卸载Linux子系统：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Windows PowerShell</div><div class="line">版权所有 (C) <span class="number">2016</span> Microsoft Corporation。保留所有权利。</div><div class="line"></div><div class="line">PS C:\Windows\system32&gt; lxrun /uninstall /full</div><div class="line">这将在 Windows 中卸载 Ubuntu。</div><div class="line">这将删除 Ubuntu 环境以及任何修改、新应用程序和用户数据。</div><div class="line">键入“y”继续: y</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Windows </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux子系统 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7启动流程图--转载]]></title>
      <url>/2017/09/08/CentOS7%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B%E5%9B%BE-%E8%BD%AC%E8%BD%BD/</url>
      <content type="html"><![CDATA[<p>马哥教育Linux线下培训第25期的大神<a href="http://www.pojun.tech" target="_blank" rel="external">@xiaoshuaigege</a>画的<strong>CentOS 7启动流程图</strong>，整个启动过程描述的非常细致，在此分享学习~~  </p>
<a id="more"></a>
<p><img src="http://ovnpik36u.bkt.clouddn.com/201709/centosstart/centos7start.png" alt="image"></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux原理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7内核编译安装]]></title>
      <url>/2017/09/04/CentOS7%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Linux内核是操作系统的核心，也是操作系统最基本的部分。  </p>
<p>Linux内核的体积结构是单内核的、但是他充分采用了微内核的设计思想、使得虽然是单内核、但工作在模块化的方式下、并且这个模块可以动态装载或卸载；Linux负责管理系统的进程、内存、设备驱动程序、文件和网络系统，决定着系统的性能和稳定性。如是我们在了解Linux内核的基础上根据自己的需要、量身定制一个更高效，更稳定的内核，就需要我们手动去编译和配置内核里的各项相关的参数和信息了。<br><a id="more"></a></p>
<h5 id="CentOS系统中内核的组成部分"><a href="#CentOS系统中内核的组成部分" class="headerlink" title="CentOS系统中内核的组成部分"></a>CentOS系统中内核的组成部分</h5><ul>
<li>内核核心：<code>vmlinuz-VERSION-RELEASE</code>  </li>
<li>内核对象: 主要是一些硬件驱动文件，一般放置于<code>/lib/modules/VERSION-RELEASE/</code>目录下  </li>
<li><p>辅助文件：<code>ramdisk</code>  </p>
<ul>
<li><code>initrd</code>  </li>
<li><code>initramfs</code>  </li>
</ul>
</li>
</ul>
<h5 id="查看与内核相关的文件"><a href="#查看与内核相关的文件" class="headerlink" title="查看与内核相关的文件"></a>查看与内核相关的文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#rpm -ql kernel</span></div></pre></td></tr></table></figure>
<p>将近3000行的输出…..  </p>
<h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><ul>
<li><p>OS版本：CentOS Linux release 7.3.1611 (Core)  <em>虚拟机</em>  </p>
<ul>
<li>升级前的内核版本：3.10.0 </li>
<li>要升级到的内核版本：4.12.10  </li>
</ul>
</li>
<li>安装开发包组：<code>yum groupinstall -y &quot;Development Tools&quot;</code>  </li>
<li>硬件配置要求：CPU和Memory配置越高越好，根据自己电脑硬件合理分配；硬盘可用空间不低于10G；<br><em>当前实验环境，我的配置如下：</em>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#lscpu</span></div><div class="line">Architecture:          x86_64</div><div class="line">CPU op-mode(s):        32-bit, 64-bit</div><div class="line">Byte Order:            Little Endian</div><div class="line">CPU(s):                8</div><div class="line">On-line CPU(s) list:   0-7</div><div class="line">Thread(s) per core:    1</div><div class="line">Core(s) per socket:    2</div><div class="line">Socket(s):             4</div><div class="line">NUMA node(s):          1</div><div class="line">Vendor ID:             GenuineIntel</div><div class="line">CPU family:            6</div><div class="line">Model:                 94</div><div class="line">Model name:            Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz</div><div class="line">Stepping:              3</div><div class="line">CPU MHz:               2600.010</div><div class="line">BogoMIPS:              5202.00</div><div class="line">Hypervisor vendor:     VMware</div><div class="line">Virtualization <span class="built_in">type</span>:   full</div><div class="line">L1d cache:             32K</div><div class="line">L1i cache:             32K</div><div class="line">L2 cache:              256K</div><div class="line">L3 cache:              6144K</div><div class="line">NUMA node0 CPU(s):     0-7</div><div class="line">[root@CentOS7 ~]<span class="comment">#free -h</span></div><div class="line">              total        used        free      shared  buff/cache   available</div><div class="line">Mem:            11G        195M         11G        8.5M        170M         11G</div><div class="line">Swap:          2.0G          0B        2.0G</div><div class="line">[root@CentOS7 ~]<span class="comment">#df -h</span></div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">/dev/sda5        50G  2.0G   49G   4% /</div><div class="line">devtmpfs        6.0G     0  6.0G   0% /dev</div><div class="line">tmpfs           6.0G     0  6.0G   0% /dev/shm</div><div class="line">tmpfs           6.0G  8.6M  6.0G   1% /run</div><div class="line">tmpfs           6.0G     0  6.0G   0% /sys/fs/cgroup</div><div class="line">/dev/sda2        50G   64M   50G   1% /app</div><div class="line">/dev/sda1      1014M  132M  883M  13% /boot</div><div class="line">tmpfs           1.2G     0  1.2G   0% /run/user/0</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><h5 id="下载内核"><a href="#下载内核" class="headerlink" title="下载内核"></a>下载内核</h5><p>Linux内核的官方网址是<a href="https://www.kernel.org/" target="_blank" rel="external">https://www.kernel.org/</a>，界面做的还是蛮清爽的<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/01.png" alt="image"><br>在这里，我下载的是2017年8月30日刚发行的稳定版<code>4.12.10</code>的源码<br>在CentOS 7上下载并解压<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download]<span class="comment">#wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.12.10.tar.xz</span></div><div class="line">[root@CentOS7 ~/download]<span class="comment">#tar xvf linux-4.12.10.tar.xz</span></div><div class="line">[root@CentOS7 ~/download]<span class="comment">#ll -h linux-4.12.10.tar.xz </span></div><div class="line">-rw-r--r--. 1 root root 95M Aug 30 16:34 linux-4.12.10.tar.xz</div><div class="line">[root@CentOS7 ~/download]<span class="comment"># cd linux-4.12.10/</span></div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#du -sh</span></div><div class="line">837M    .</div></pre></td></tr></table></figure></p>
<p>解压前只有95M，解压后837M。837M的源码编译后会生成多大的文件呢？所以，<strong>硬盘一定要预留出10G以上的空间</strong>  </p>
<h4 id="内核模块管理"><a href="#内核模块管理" class="headerlink" title="内核模块管理"></a>内核模块管理</h4><p>CentOS已安装的内核模块的记录文件：<code>/boot/config-3.10.0-514.el7.x86_64</code>,随后我们在选择模块功能的时候，可以在这个文件的基础上进行添加或删除，不然整个工作量就太大了。    </p>
<h5 id="内核模块选项的参数说明"><a href="#内核模块选项的参数说明" class="headerlink" title="内核模块选项的参数说明"></a>内核模块选项的参数说明</h5><p>是否启用内核某功能总共有三个参数<br><code>[  ]</code>: 没有启用<br><code>[M]</code>: 将该功能安装在/lib/modules/目录下<br>ss<code>[*]</code>: 将该文件安装在内核文件中  </p>
<h5 id="内核模块管理命令"><a href="#内核模块管理命令" class="headerlink" title="内核模块管理命令"></a>内核模块管理命令</h5><ul>
<li><code>lsmod</code>:显示由核心已经装载的内核模块,显示的内容来自于:/proc/modules文件  </li>
<li><code>modinfo</code>:显示模块的详细描述信息  <ul>
<li><code>-n</code>:只显示模块文件路径  </li>
<li><code>-p</code>:显示模块参数</li>
<li><code>-a</code>:author  </li>
<li><code>-d</code>:description  </li>
<li><code>-l</code>:license  </li>
</ul>
</li>
<li>modprobe命令：装载或卸载内核模块  <ul>
<li>配置文件： /etc/modprobe.conf,/etc/modprobe.d/*.conf  </li>
<li>modprobe [ -C config-file ] [ modulename ] [ moduleparame-ters… ]  </li>
<li>modprobe [ -r ] modulename…  </li>
</ul>
</li>
<li>depmod命令：内核模块依赖关系文件及系统信息映射文件的生成工具  </li>
<li>insmod命令：指定模块文件，不自动解决依赖模块  <ul>
<li>insmod [ filename ] [ module options… ]  </li>
<li>insmod `modinfo –n exportfs`  </li>
<li>lnsmod `modinfo –n xfs`  </li>
</ul>
</li>
<li>rmmod命令：卸载模块  <ul>
<li>rmmod [ modulename ]  </li>
<li>rmmod xfs  </li>
<li>rmmod exportfs  </li>
</ul>
</li>
</ul>
<h4 id="编译安装内核"><a href="#编译安装内核" class="headerlink" title="编译安装内核"></a>编译安装内核</h4><h5 id="设置内核模块参数"><a href="#设置内核模块参数" class="headerlink" title="设置内核模块参数"></a>设置内核模块参数</h5><p>将<code>/boot/config-3.10.0-514.el7.x86_64</code>文件复制到解压后的源码目录中，并改名为<code>config</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#cd /root/download/linux-4.12.10/</span></div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#cp /boot/config-3.10.0-514.el7.x86_64 .config</span></div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#ls -a</span></div><div class="line">.             COPYING        .get_maintainer.ignore  Kconfig      net       usr</div><div class="line">..            CREDITS        .gitattributes          kernel       README    virt</div><div class="line">arch          crypto         .gitignore              lib          samples</div><div class="line">block         Documentation  include                 .mailmap     scripts</div><div class="line">certs         drivers        init                    MAINTAINERS  security</div><div class="line">.cocciconfig  firmware       ipc                     Makefile     sound</div><div class="line">.config       fs             Kbuild                  mm           tools</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#</span></div></pre></td></tr></table></figure></p>
<p>使用<code>make menuconfig</code>配置内核选项<br>第一次使用会报缺少一些软件包的错误，所以我们需要在安装完Development Tools包组的基础上，根据报错再添加相应的软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#make menuconfig</span></div><div class="line"> *** Unable to find the ncurses libraries or the</div><div class="line"> *** required header files.</div><div class="line"> *** <span class="string">'make menuconfig'</span> requires the ncurses libraries.</div><div class="line"> *** </div><div class="line"> *** Install ncurses (ncurses-devel) and try again.</div><div class="line"> *** </div><div class="line">make[1]: *** [scripts/kconfig/dochecklxdialog] Error 1</div><div class="line">make: *** [menuconfig] Error 2</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#yum install -y ncurses-devel</span></div></pre></td></tr></table></figure></p>
<p>再次执行<code>make menuconfig</code>命令后进入菜单界面，我们可以根据需求添加相应的内核模块：<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/02.png" alt="image"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">.config - Linux/x86 4.12.10 Kernel Configuration</div><div class="line">─────────────────────────────────────────────────────────────────────────────────────────</div><div class="line"> ┌────────────────────── Linux/x86 4.12.10 Kernel Configuration ──────────────────────┐</div><div class="line"> │  Arrow keys navigate the menu.  &lt;Enter&gt; selects submenus ---&gt; (or empty submenus   │  </div><div class="line"> │  ----).  Highlighted letters are hotkeys.  Pressing &lt;Y&gt; includes, &lt;N&gt; excludes,    │  </div><div class="line"> │  &lt;M&gt; modularizes features.  Press &lt;Esc&gt;&lt;Esc&gt; to <span class="built_in">exit</span>, &lt;?&gt; <span class="keyword">for</span> Help, &lt;/&gt; <span class="keyword">for</span>        │  </div><div class="line"> │  Search.  Legend: [*] built-in  [ ] excluded  &lt;M&gt; module  &lt; &gt; module capable       │  </div><div class="line"> │ ┌────────────────────────────────────────────────────────────────────────────────┐ │  </div><div class="line"> │ │     [*] 64-bit kernel                                                          │ │  </div><div class="line"> │ │         General setup  ---&gt;                                                    │ │  </div><div class="line"> │ │     [*] Enable loadable module support  ---&gt;                                   │ │  </div><div class="line"> │ │     -*- Enable the block layer  ---&gt;                                           │ │  </div><div class="line"> │ │         Processor <span class="built_in">type</span> and features  ---&gt;                                      │ │  </div><div class="line"> │ │         Power management and ACPI options  ---&gt;                                │ │  </div><div class="line"> │ │         Bus options (PCI etc.)  ---&gt;                                           │ │  </div><div class="line"> │ │         Executable file formats / Emulations  ---&gt;                             │ │  </div><div class="line"> │ │     [*] Networking support  ---&gt;                                               │ │  </div><div class="line"> │ │         Device Drivers  ---&gt;                                                   │ │  </div><div class="line"> │ │         Firmware Drivers  ---&gt;                                                 │ │  </div><div class="line"> │ │         File systems  ---&gt;                                                     │ │  </div><div class="line"> │ │         Kernel hacking  ---&gt;                                                   │ │  </div><div class="line"> │ │         Security options  ---&gt;                                                 │ │  </div><div class="line"> │ │     -*- Cryptographic API  ---&gt;                                                │ │  </div><div class="line"> │ │     [*] Virtualization  ---&gt;                                                   │ │  </div><div class="line"> │ │         Library routines  ---&gt;                                                 │ │  </div><div class="line"> │ │                                                                                │ │  </div><div class="line"> │ │                                                                                │ │  </div><div class="line"> │ │                                                                                │ │  </div><div class="line"> │ └────────────────────────────────────────────────────────────────────────────────┘ │  </div><div class="line"> ├────────────────────────────────────────────────────────────────────────────────────┤  </div><div class="line"> │              &lt;Select&gt;    &lt; Exit &gt;    &lt; Help &gt;    &lt; Save &gt;    &lt; Load &gt;              │  </div><div class="line"> └────────────────────────────────────────────────────────────────────────────────────┘</div></pre></td></tr></table></figure></p>
<p>每行后面带<code>---&gt;</code>标志的，说明里面还包含子菜单 ；<code>[*]</code>表示已选则该功能；<br>使用<code>↑</code>、<code>↓</code>、<code>Tab</code>进行选项切换，使用<code>Enter</code>和<code>Esc</code>进入或退出子菜单，使用<code>Space</code>、<code>M</code>键启用或关闭相应模块；  </p>
<h5 id="make编译"><a href="#make编译" class="headerlink" title="make编译"></a>make编译</h5><p>设置好内核模块后，我们开始使用<code>make</code>开始编译<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#make -j 8</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p><code>-j</code>为指定进行编译时使用的CPU线程数，<code>make -j 8</code>即为使用8线程进行编译。  </p>
</blockquote>
<p>这是一个漫长的等待过程，具体有多漫长需要看你的电脑硬件配置  </p>
<p>整个过程还是蛮耗系统资源的….<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/04.png" alt="image"><br>如何查看编译进度呢？根据经验，编译完成后整个文件目录大概会占用9-10G的空间，所以，我们可以通过查看编译目录的大小来判断编译进度：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#du -sh</span></div><div class="line">2.6G    .</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#watch -n 1 "du -sh"</span></div><div class="line">Every 1.0s: du -sh                                                                Mon Sep  4 15:52:45 2017</div><div class="line"></div><div class="line">3.6G    .</div></pre></td></tr></table></figure></p>
<p>因为给虚拟机的配置比较高(主要是消耗CPU，其次是占用内存)，整个过程只花了20分钟的时间就结束了，编译结束后CPU使用率立马就降下去了，但是内存依然居高不下<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/05.png" alt="image"><br>查看虚拟机内存，发现是<code>buff/cache</code>占用了内存，我们可以强制释放内存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#free -h</span></div><div class="line">              total        used        free      shared  buff/cache   available</div><div class="line">Mem:            11G        274M        703M        8.5M         10G         11G</div><div class="line">Swap:          2.0G          0B        2.0G</div></pre></td></tr></table></figure></p>
<p>查看编译后的目录大小：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#du -sh</span></div><div class="line">9.8G    .</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#ls</span></div><div class="line">arch     CREDITS        firmware  ipc      lib          modules.builtin  README    sound       virt</div><div class="line">block    crypto         fs        Kbuild   MAINTAINERS  modules.order    samples   System.map  vmlinux</div><div class="line">certs    Documentation  include   Kconfig  Makefile     Module.symvers   scripts   tools       vmlinux.o</div><div class="line">COPYING  drivers        init      kernel   mm           net              security  usr</div></pre></td></tr></table></figure></p>
<p>总共9.8G的大小，所以编译前一定要预留够10G的空间  </p>
<h5 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h5><p>使用<code>make modules_install</code>安装刚才编译好的模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#make modules_install</span></div></pre></td></tr></table></figure></p>
<p>结束后我们可以查看模块安装后新生成的一些目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#ls /lib/modules/</span></div><div class="line">3.10.0-514.el7.x86_64/ 4.12.10-2.0-wbzkernel/</div></pre></td></tr></table></figure></p>
<h5 id="安装内核相关文件"><a href="#安装内核相关文件" class="headerlink" title="安装内核相关文件"></a>安装内核相关文件</h5><p>使用<code>make install</code>命令安装内核相关的文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#make install</span></div><div class="line">Makefile:936: <span class="string">"Cannot use CONFIG_STACK_VALIDATION, please install libelf-dev, libelf-devel or elfutils-libelf-devel"</span></div><div class="line">sh ./arch/x86/boot/install.sh 4.12.10-2.0-wbzkernel arch/x86/boot/bzImage \</div><div class="line">        System.map <span class="string">"/boot"</span></div></pre></td></tr></table></figure></p>
<p>提示：启用某些功能需要安装一些软件包，但是安装过程并没有终止，我们可以再安装过程结束后再安装缺少的软件包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#yum install -y libelf-dev libelf-devel elfutils-libelf-devel</span></div></pre></td></tr></table></figure></p>
<p>查看/boot下是否已经生成对应的内核文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ls /boot/</span></div><div class="line">config-3.10.0-514.el7.x86_64                             symvers-3.10.0-514.el7.x86_64.gz</div><div class="line">grub                                                     System.map</div><div class="line">grub2                                                    System.map-3.10.0-514.el7.x86_64</div><div class="line">initramfs-0-rescue-7f89e611d6c44a58bf1f11373c0319ae.img  System.map-4.12.10-2.0-wbzkernel</div><div class="line">initramfs-3.10.0-514.el7.x86_64.img                      vmlinuz</div><div class="line">initramfs-3.10.0-514.el7.x86_64kdump.img                 vmlinuz-0-rescue-7f89e611d6c44a58bf1f11373c0319ae</div><div class="line">initramfs-4.12.10-2.0-wbzkernel.img                      vmlinuz-3.10.0-514.el7.x86_64</div><div class="line">initrd-plymouth.img                                      vmlinuz-4.12.10-2.0-wbzkernel</div></pre></td></tr></table></figure></p>
<p>可以看到已经生成了对应的新内核文件，接下来我们可以进行重启测试  </p>
<h4 id="重启系统启用新内核"><a href="#重启系统启用新内核" class="headerlink" title="重启系统启用新内核"></a>重启系统启用新内核</h4><p><em>系统启动后，我们可以在启动引导菜单里看到多了我们安装的新内核的选项</em><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/06.png" alt="image"><br>系统完美的从新内核启动<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/kernel/07.png" alt="image"><br>查看系统启动的时候是否报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#cat /var/log/boot.log </span></div><div class="line">[  OK  ] Started Show Plymouth Boot Screen.</div><div class="line">[  OK  ] Reached target Paths.</div><div class="line">[  OK  ] Reached target Basic System.</div><div class="line">GG[  OK  ] Found device VMware_Virtual_S 5.</div><div class="line">         Starting File System Check on /dev/disk/by-uuid/2b0c8599-2f1f-4f38-94e7-1a9b857a9bb7...</div><div class="line">[  OK  ] Started File System Check on /dev/disk/by-uuid/2b0c8599-2f1f-4f38-94e7-1a9b857a9bb7.</div><div class="line">[  OK  ] Started dracut initqueue hook.</div><div class="line">         Mounting /sysroot...</div><div class="line">[  OK  ] Reached target Remote File Systems (Pre).</div><div class="line">[  OK  ] Reached target Remote File Systems.</div><div class="line">[  OK  ] Mounted /sysroot.</div><div class="line">[  OK  ] Reached target Initrd Root File System.</div><div class="line">         Starting Reload Configuration from the Real Root...</div><div class="line">[  OK  ] Started Reload Configuration from the Real Root.</div><div class="line">[  OK  ] Reached target Initrd File Systems.</div><div class="line">[  OK  ] Reached target Initrd Default Target.</div><div class="line">         Starting dracut pre-pivot and cleanup hook...</div><div class="line">[  OK  ] Started dracut pre-pivot and cleanup hook.</div><div class="line">         Starting Cleaning Up and Shutting Down Daemons...</div><div class="line">         Starting Plymouth switch root service...</div><div class="line">[  OK  ] Stopped target Timers.</div><div class="line">[  OK  ] Stopped Cleaning Up and Shutting Down Daemons.</div><div class="line">[  OK  ] Stopped dracut pre-pivot and cleanup hook.</div><div class="line">         Stopping dracut pre-pivot and cleanup hook...</div><div class="line">[  OK  ] Stopped target Remote File Systems.</div><div class="line">[  OK  ] Stopped target Remote File Systems (Pre).</div><div class="line">[  OK  ] Stopped dracut initqueue hook.</div><div class="line">         Stopping dracut initqueue hook...</div><div class="line">[  OK  ] Stopped target Initrd Default Target.</div><div class="line">[  OK  ] Stopped target Basic System.</div><div class="line">[  OK  ] Stopped target Sockets.</div><div class="line">[  OK  ] Stopped target System Initialization.</div><div class="line">[  OK  ] Stopped udev Coldplug all Devices.</div><div class="line">         Stopping udev Coldplug all Devices...</div><div class="line">[  OK  ] Stopped target Swap.</div><div class="line">         Stopping udev Kernel Device Manager...</div><div class="line">[  OK  ] Stopped target Local File Systems.</div><div class="line">[  OK  ] Stopped Apply Kernel Variables.</div><div class="line">         Stopping Apply Kernel Variables...</div><div class="line">[  OK  ] Stopped target Slices.</div><div class="line">[  OK  ] Stopped target Paths.</div><div class="line">[  OK  ] Stopped udev Kernel Device Manager.</div><div class="line">[  OK  ] Stopped dracut pre-udev hook.</div><div class="line">         Stopping dracut pre-udev hook...</div><div class="line">[  OK  ] Stopped dracut cmdline hook.</div><div class="line">         Stopping dracut cmdline hook...</div><div class="line">[  OK  ] Stopped Create Static Device Nodes <span class="keyword">in</span> /dev.</div><div class="line">         Stopping Create Static Device Nodes <span class="keyword">in</span> /dev...</div><div class="line">[  OK  ] Stopped Create list of required static device nodes <span class="keyword">for</span> the current kernel.</div><div class="line">         Stopping Create list of required static device nodes <span class="keyword">for</span> the current kernel...</div><div class="line">[  OK  ] Closed udev Kernel Socket.</div><div class="line">[  OK  ] Closed udev Control Socket.</div><div class="line">         Starting Cleanup udevd DB...</div><div class="line">[  OK  ] Started Cleanup udevd DB.</div><div class="line">[  OK  ] Reached target Switch Root.</div><div class="line">[  OK  ] Started Plymouth switch root service.</div><div class="line">         Starting Switch Root...</div><div class="line"></div><div class="line">Welcome to CentOS Linux 7 (Core)!</div><div class="line"></div><div class="line">[  OK  ] Stopped Switch Root.</div><div class="line">[  OK  ] Stopped File System Check on Root Device.</div><div class="line">         Stopping File System Check on Root Device...</div><div class="line">[  OK  ] Listening on Delayed Shutdown Socket.</div><div class="line">         Mounting POSIX Message Queue File System...</div><div class="line">[  OK  ] Listening on /dev/initctl Compatibility Named Pipe.</div><div class="line">[  OK  ] Created slice User and Session Slice.</div><div class="line">[  OK  ] Reached target Encrypted Volumes.</div><div class="line">[  OK  ] Stopped Journal Service.</div><div class="line">         Starting Journal Service...</div><div class="line">         Starting Create list of required static device nodes <span class="keyword">for</span> the current kernel...</div><div class="line">         Mounting Debug File System...</div><div class="line">[  OK  ] Listening on udev Kernel Socket.</div><div class="line">[  OK  ] Stopped target Switch Root.</div><div class="line">[  OK  ] Set up automount Arbitrary Executable File Formats File System Automount Point.</div><div class="line">[  OK  ] Listening on udev Control Socket.</div><div class="line">         Starting Apply Kernel Variables...</div><div class="line">[  OK  ] Stopped target Initrd Root File System.</div><div class="line">[  OK  ] Stopped target Initrd File Systems.</div><div class="line">         Starting Remount Root and Kernel File Systems...</div><div class="line">[  OK  ] Reached target Remote File Systems.</div><div class="line">         Mounting Huge Pages File System...</div><div class="line">[  OK  ] Reached target Slices.</div><div class="line">[  OK  ] Created slice system-getty.slice.</div><div class="line">[  OK  ] Started Apply Kernel Variables.</div><div class="line">[  OK  ] Started Create list of required static device nodes <span class="keyword">for</span> the current kernel.</div><div class="line">         Starting Create Static Device Nodes <span class="keyword">in</span> /dev...</div><div class="line">[  OK  ] Mounted Debug File System.</div><div class="line">[  OK  ] Mounted POSIX Message Queue File System.</div><div class="line">[  OK  ] Mounted Huge Pages File System.</div><div class="line">[  OK  ] Started Remount Root and Kernel File Systems.</div><div class="line">         Starting udev Coldplug all Devices...</div><div class="line">         Starting Configure <span class="built_in">read</span>-only root support...</div><div class="line">         Starting Load/Save Random Seed...</div><div class="line">[  OK  ] Started Load/Save Random Seed.</div><div class="line">[  OK  ] Started Journal Service.</div><div class="line">         Starting Flush Journal to Persistent Storage...</div><div class="line">[  OK  ] Started udev Coldplug all Devices.</div><div class="line">[  OK  ] Started Flush Journal to Persistent Storage.</div><div class="line">[  OK  ] Started Configure <span class="built_in">read</span>-only root support.</div><div class="line">[  OK  ] Started Create Static Device Nodes <span class="keyword">in</span> /dev.</div><div class="line">         Starting udev Kernel Device Manager...</div><div class="line">[  OK  ] Reached target Local File Systems (Pre).</div><div class="line">[  OK  ] Started udev Kernel Device Manager.</div><div class="line">GG[  OK  ] Found device VMware_Virtual_S 3.</div><div class="line">         Activating swap /dev/disk/by-uuid/d61fe1ca-a1f2-41c6-a8be-b60ee1e96dac...</div><div class="line">[  OK  ] Activated swap /dev/disk/by-uuid/d61fe1ca-a1f2-41c6-a8be-b60ee1e96dac.</div><div class="line">[  OK  ] Reached target Swap.</div><div class="line">[  OK  ] Found device VMware_Virtual_S 1.</div><div class="line">         Mounting /boot...</div><div class="line">[  OK  ] Found device VMware_Virtual_S 2.</div><div class="line">         Mounting /app...</div><div class="line">[  OK  ] Mounted /app.</div><div class="line">[  OK  ] Mounted /boot.</div><div class="line">[  OK  ] Reached target Local File Systems.</div><div class="line">         Starting Tell Plymouth To Write Out Runtime Data...</div><div class="line">         Starting Import network configuration from initramfs...</div><div class="line">[  OK  ] Started Import network configuration from initramfs.</div><div class="line">         Starting Create Volatile Files and Directories...</div><div class="line">[  OK  ] Started Tell Plymouth To Write Out Runtime Data.</div><div class="line">[  OK  ] Started Create Volatile Files and Directories.</div><div class="line">         Starting Security Auditing Service...</div><div class="line">[  OK  ] Started Security Auditing Service.</div><div class="line">         Starting Update UTMP about System Boot/Shutdown...</div><div class="line">[  OK  ] Started Update UTMP about System Boot/Shutdown.</div><div class="line">[  OK  ] Reached target System Initialization.</div><div class="line">[  OK  ] Reached target Timers.</div><div class="line">[  OK  ] Listening on D-Bus System Message Bus Socket.</div><div class="line">[  OK  ] Reached target Sockets.</div><div class="line">[  OK  ] Reached target Paths.</div><div class="line">[  OK  ] Reached target Basic System.</div><div class="line">         Starting Permit User Sessions...</div><div class="line">[  OK  ] Started D-Bus System Message Bus.</div><div class="line">         Starting D-Bus System Message Bus...</div><div class="line">         Starting Authorization Manager...</div><div class="line">         Starting Dump dmesg to /var/<span class="built_in">log</span>/dmesg...</div><div class="line">[  OK  ] Started ABRT Automated Bug Reporting Tool.</div><div class="line">         Starting ABRT Automated Bug Reporting Tool...</div><div class="line">[  OK  ] Started ABRT kernel <span class="built_in">log</span> watcher.</div><div class="line">         Starting ABRT kernel <span class="built_in">log</span> watcher...</div><div class="line">         Starting Install ABRT coredump hook...</div><div class="line">[  OK  ] Started irqbalance daemon.</div><div class="line">         Starting irqbalance daemon...</div><div class="line">[  OK  ] Started Service <span class="keyword">for</span> virtual machines hosted on VMware.</div><div class="line">         Starting Service <span class="keyword">for</span> virtual machines hosted on VMware...</div><div class="line">         Starting Login Service...</div><div class="line">[  OK  ] Started Permit User Sessions.</div><div class="line">[  OK  ] Started Dump dmesg to /var/<span class="built_in">log</span>/dmesg.</div><div class="line">         Starting Terminate Plymouth Boot Screen...</div><div class="line">         Starting Wait <span class="keyword">for</span> Plymouth Boot Screen to Quit...</div></pre></td></tr></table></figure></p>
<h4 id="后续清理"><a href="#后续清理" class="headerlink" title="后续清理"></a>后续清理</h4><p>编译时生成了将近10G的文件，安装完成之后如果没有特殊用途可以选择清理掉编译生成的文件来释放空间  </p>
<h5 id="清理相关的命令"><a href="#清理相关的命令" class="headerlink" title="清理相关的命令"></a>清理相关的命令</h5><ul>
<li>make clean：清理大多数编译生成的文件，但会保留config文件等  </li>
<li>make mrproper: 清理所有编译生成的文件、 config及某些备份文件  </li>
<li>make distclean： mrproper、 patches以及编辑器备份文件  </li>
</ul>
<h5 id="执行清理操作"><a href="#执行清理操作" class="headerlink" title="执行清理操作"></a>执行清理操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#du -sh</span></div><div class="line">9.8G    .</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#make clean</span></div><div class="line">  CLEAN   .</div><div class="line">  CLEAN   arch/x86/entry/vdso</div><div class="line">  CLEAN   arch/x86/kernel/cpu</div><div class="line">  CLEAN   arch/x86/kernel</div><div class="line">  CLEAN   arch/x86/purgatory</div><div class="line">  CLEAN   arch/x86/realmode/rm</div><div class="line">  CLEAN   arch/x86/lib</div><div class="line">  CLEAN   certs</div><div class="line">  CLEAN   crypto/asymmetric_keys</div><div class="line">  CLEAN   crypto</div><div class="line">  CLEAN   drivers/firmware/efi/libstub</div><div class="line">  CLEAN   drivers/gpu/drm/radeon</div><div class="line">  CLEAN   drivers/scsi/aic7xxx</div><div class="line">  CLEAN   drivers/tty/vt</div><div class="line">  CLEAN   drivers/video/logo</div><div class="line">  CLEAN   firmware</div><div class="line">  CLEAN   kernel/debug/kdb</div><div class="line">  CLEAN   lib/raid6</div><div class="line">  CLEAN   lib</div><div class="line">  CLEAN   security/selinux</div><div class="line">  CLEAN   usr</div><div class="line">  CLEAN   arch/x86/boot/compressed</div><div class="line">  CLEAN   arch/x86/boot</div><div class="line">  CLEAN   arch/x86/tools</div><div class="line">  CLEAN   .tmp_versions</div><div class="line">[root@CentOS7 ~/download/linux-4.12.10]<span class="comment">#du -sh</span></div><div class="line">847M    .</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux, Linux实验 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6.9启动系列--启动相关的破坏性实验]]></title>
      <url>/2017/09/03/CentOS6-9%E5%90%AF%E5%8A%A8%E7%B3%BB%E5%88%97-%E5%90%AF%E5%8A%A8%E7%9B%B8%E5%85%B3%E7%9A%84%E7%A0%B4%E5%9D%8F%E6%80%A7%E5%AE%9E%E9%AA%8C/</url>
      <content type="html"><![CDATA[<h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><ul>
<li>OS版本：CentOS release 6.9  </li>
<li>Grub版本：grub-0.97-99.el6.x86_64  </li>
</ul>
<h4 id="实验一"><a href="#实验一" class="headerlink" title="实验一"></a>实验一</h4><p>移除/boot/grub目录下除grub.conf外的所有文件，然后重启系统  </p>
<h5 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 app]<span class="comment"># mv /boot/grub/* /app</span></div><div class="line">[root@MyCentOS6 app]<span class="comment"># ls</span></div><div class="line">device.map     grub.conf         minix_stage1_5     stage2</div><div class="line">e2fs_stage1_5  iso9660_stage1_5  reiserfs_stage1_5  ufs2_stage1_5</div><div class="line">fat_stage1_5   jfs_stage1_5      splash.xpm.gz      vstafs_stage1_5</div><div class="line">ffs_stage1_5   menu.lst          stage1             xfs_stage1_5</div><div class="line">[root@MyCentOS6 app]<span class="comment"># mv grub.conf /boot/grub/</span></div><div class="line">[root@MyCentOS6 app]<span class="comment"># ls /boot/grub/</span></div><div class="line">grub.conf</div><div class="line">[root@MyCentOS6 app]<span class="comment"># reboot</span></div></pre></td></tr></table></figure>
<p>重启后，启动界面只是报一个<code>failed to read image</code>的错误，但是依然能够正常启动；<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/16.png" alt="image">  </p>
<h5 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h5><p>一般情况下，系统启动的时候主要用到<code>/boot/grub</code>下的<code>grub.conf</code>文件，其余的都是系统系统的1阶段和1.5阶段的备份文件，只有在1阶段和1.5阶段出现故障时，才会用到这些备份文件。所以移除后并不受影响。  </p>
<h4 id="实验二-破坏MBR"><a href="#实验二-破坏MBR" class="headerlink" title="实验二 破坏MBR"></a>实验二 破坏MBR</h4><p>在实验一的技术上，破坏一阶段的MBR主引导记录，并恢复  </p>
<h5 id="相关操作-1"><a href="#相关操作-1" class="headerlink" title="相关操作"></a>相关操作</h5><p>查看/dev/sda磁盘上的MBR主引导记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># hexdump -C -n 512 /dev/sda</span></div><div class="line">00000000  eb 48 90 00 00 00 00 00  00 00 00 00 00 00 00 00  |.H..............|</div><div class="line">00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">*</div><div class="line">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 03 02  |................|</div><div class="line">00000040  ff 00 00 20 01 00 00 00  00 02 fa 90 90 f6 c2 80  |... ............|</div><div class="line">00000050  75 02 b2 80 ea 59 7c 00  00 31 c0 8e d8 8e d0 bc  |u....Y|..1......|</div><div class="line">00000060  00 20 fb a0 40 7c 3c ff  74 02 88 c2 52 f6 c2 80  |. ..@|&lt;.t...R...|</div><div class="line">00000070  74 54 b4 41 bb aa 55 <span class="built_in">cd</span>  13 5a 52 72 49 81 fb 55  |tT.A..U..ZRrI..U|</div><div class="line">00000080  aa 75 43 a0 41 7c 84 c0  75 05 83 e1 01 74 37 66  |.uC.A|..u....t7f|</div><div class="line">00000090  8b 4c 10 be 05 7c c6 44  ff 01 66 8b 1e 44 7c c7  |.L...|.D..f..D|.|</div><div class="line">000000a0  04 10 00 c7 44 02 01 00  66 89 5c 08 c7 44 06 00  |....D...f.\..D..|</div><div class="line">000000b0  70 66 31 c0 89 44 04 66  89 44 0c b4 42 <span class="built_in">cd</span> 13 72  |pf1..D.f.D..B..r|</div><div class="line">000000c0  05 bb 00 70 eb 7d b4 08  <span class="built_in">cd</span> 13 73 0a f6 c2 80 0f  |...p.&#125;....s.....|</div><div class="line">000000d0  84 f0 00 e9 8d 00 be 05  7c c6 44 ff 00 66 31 c0  |........|.D..f1.|</div><div class="line">000000e0  88 f0 40 66 89 44 04 31  d2 88 ca c1 e2 02 88 e8  |..@f.D.1........|</div><div class="line">000000f0  88 f4 40 89 44 08 31 c0  88 d0 c0 e8 02 66 89 04  |..@.D.1......f..|</div><div class="line">00000100  66 a1 44 7c 66 31 d2 66  f7 34 88 54 0a 66 31 d2  |f.D|f1.f.4.T.f1.|</div><div class="line">00000110  66 f7 74 04 88 54 0b 89  44 0c 3b 44 08 7d 3c 8a  |f.t..T..D.;D.&#125;&lt;.|</div><div class="line">00000120  54 0d c0 e2 06 8a 4c 0a  fe c1 08 d1 8a 6c 0c 5a  |T.....L......l.Z|</div><div class="line">00000130  8a 74 0b bb 00 70 8e c3  31 db b8 01 02 <span class="built_in">cd</span> 13 72  |.t...p..1......r|</div><div class="line">00000140  2a 8c c3 8e 06 48 7c 60  1e b9 00 01 8e db 31 f6  |*....H|`......1.|</div><div class="line">00000150  31 ff <span class="built_in">fc</span> f3 a5 1f 61 ff  26 42 7c be 7f 7d e8 40  |1.....a.&amp;B|..&#125;.@|</div><div class="line">00000160  00 eb 0e be 84 7d e8 38  00 eb 06 be 8e 7d e8 30  |.....&#125;.8.....&#125;.0|</div><div class="line">00000170  00 be 93 7d e8 2a 00 eb  fe 47 52 55 42 20 00 47  |...&#125;.*...GRUB .G|</div><div class="line">00000180  65 6f 6d 00 48 61 72 64  20 44 69 73 6b 00 52 65  |eom.Hard Disk.Re|</div><div class="line">00000190  61 64 00 20 45 72 72 6f  72 00 bb 01 00 b4 0e <span class="built_in">cd</span>  |ad. Error.......|</div><div class="line">000001a0  10 ac 3c 00 75 f4 c3 00  00 00 00 00 00 00 00 00  |..&lt;.u...........|</div><div class="line">000001b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 20  |............... |</div><div class="line">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|</div><div class="line">000001d0  29 82 83 fe ff ff 00 08  20 00 00 00 40 06 00 fe  |)....... ...@...|</div><div class="line">000001e0  ff ff 83 fe ff ff 00 08  60 06 00 00 40 06 00 fe  |........`...@...|</div><div class="line">000001f0  ff ff 05 fe ff ff 00 08  a0 0c 00 f8 5f 0c 55 aa  |............_.U.|</div><div class="line">00000200</div></pre></td></tr></table></figure></p>
<p>可以看到，8020前边，图片白底的446字节的内容都是MBR信息<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/17.png" alt="image"><br>破坏磁盘上的MBR内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># dd if=/dev/zero of=/dev/sda bs=1 count=446</span></div><div class="line">446+0 records <span class="keyword">in</span></div><div class="line">446+0 records out</div><div class="line">446 bytes (446 B) copied, 0.000421322 s, 1.1 MB/s</div></pre></td></tr></table></figure></p>
<p>清空后再次查看/dev/sda磁盘上的前512字节：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># hexdump -C -n 512 /dev/sda                </span></div><div class="line">00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">*   //重复的使用*省略，如果需要查看详细可以使用hexdump的-v参数</div><div class="line">000001b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 20  |............... |</div><div class="line">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|</div><div class="line">000001d0  29 82 83 fe ff ff 00 08  20 00 00 00 40 06 00 fe  |)....... ...@...|</div><div class="line">000001e0  ff ff 83 fe ff ff 00 08  60 06 00 00 40 06 00 fe  |........`...@...|</div><div class="line">000001f0  ff ff 05 fe ff ff 00 08  a0 0c 00 f8 5f 0c 55 aa  |............_.U.|</div><div class="line">00000200</div></pre></td></tr></table></figure></p>
<p>再次查看发现，/dev/sda磁盘上的前446字节已经全被情况为0了；<br>执行重启操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># reboot</span></div></pre></td></tr></table></figure></p>
<h5 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h5><p>重启后，因为挂载有光盘镜像，直接进入了光盘引导界面。<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/18.png" alt="image">  </p>
<h5 id="修复过程"><a href="#修复过程" class="headerlink" title="修复过程"></a>修复过程</h5><p>进入光盘的<code>Rescue installed system</code>救援模式<br>选择使用的语言和键盘设置<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/19.png" alt="image"><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/20.png" alt="image"><br>在救援模式下是否启用网络？我们选择不启用<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/21.png" alt="image"><br>进入救援模式后，我们看到的根是救援模式的根，我们硬盘上的操作系统的根在<code>/mnt/sysimage</code>下<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/22.png" alt="image"><br>如果需要硬盘上的操作系统为根目录，可以使用<code>chroot /mnt/sysimage</code>命令<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/23.png" alt="image"><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/24.png" alt="image"><br>选择启动shell<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/25.png" alt="image"><br>在救援模式下查看被破坏的MBR主引导记录<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/26.png" alt="image"><br>因为救援模式下没有<code>grub</code>相关的命令，所以我们需要切根<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sh-4.1<span class="comment">#chroot /mnt/sysimage/</span></div><div class="line">sh-4.1<span class="comment">#ls /boot/grub</span></div><div class="line">grub.conf</div><div class="line">sh-4.1<span class="comment">#ls /sbin/grub</span></div><div class="line">/sbin/grub</div></pre></td></tr></table></figure></p>
<p>修复被破坏的MBR主引导记录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh-4.1<span class="comment">#grub-install /dev/sda</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/27.png" alt="image"><br>重启后系统能够正常的启动，查看<code>/boot/grub/</code>目录下，发现生成的新的备份文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># ls /boot/grub/</span></div><div class="line">device.map     ffs_stage1_5      jfs_stage1_5       stage1         vstafs_stage1_5</div><div class="line">e2fs_stage1_5  grub.conf         minix_stage1_5     stage2         xfs_stage1_5</div><div class="line">fat_stage1_5   iso9660_stage1_5  reiserfs_stage1_5  ufs2_stage1_5</div></pre></td></tr></table></figure></p>
<p>查看磁盘上的MBR引导信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># hexdump -C -n 512 /dev/sda</span></div><div class="line">00000000  eb 48 90 00 00 00 00 00  00 00 00 00 00 00 00 00  |.H..............|</div><div class="line">00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">*</div><div class="line">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 03 02  |................|</div><div class="line">00000040  ff 00 00 20 01 00 00 00  00 02 fa 90 90 f6 c2 80  |... ............|</div><div class="line">00000050  75 02 b2 80 ea 59 7c 00  00 31 c0 8e d8 8e d0 bc  |u....Y|..1......|</div><div class="line">00000060  00 20 fb a0 40 7c 3c ff  74 02 88 c2 52 f6 c2 80  |. ..@|&lt;.t...R...|</div><div class="line">00000070  74 54 b4 41 bb aa 55 <span class="built_in">cd</span>  13 5a 52 72 49 81 fb 55  |tT.A..U..ZRrI..U|</div><div class="line">00000080  aa 75 43 a0 41 7c 84 c0  75 05 83 e1 01 74 37 66  |.uC.A|..u....t7f|</div><div class="line">00000090  8b 4c 10 be 05 7c c6 44  ff 01 66 8b 1e 44 7c c7  |.L...|.D..f..D|.|</div><div class="line">000000a0  04 10 00 c7 44 02 01 00  66 89 5c 08 c7 44 06 00  |....D...f.\..D..|</div><div class="line">000000b0  70 66 31 c0 89 44 04 66  89 44 0c b4 42 <span class="built_in">cd</span> 13 72  |pf1..D.f.D..B..r|</div><div class="line">000000c0  05 bb 00 70 eb 7d b4 08  <span class="built_in">cd</span> 13 73 0a f6 c2 80 0f  |...p.&#125;....s.....|</div><div class="line">000000d0  84 f0 00 e9 8d 00 be 05  7c c6 44 ff 00 66 31 c0  |........|.D..f1.|</div><div class="line">000000e0  88 f0 40 66 89 44 04 31  d2 88 ca c1 e2 02 88 e8  |..@f.D.1........|</div><div class="line">000000f0  88 f4 40 89 44 08 31 c0  88 d0 c0 e8 02 66 89 04  |..@.D.1......f..|</div><div class="line">00000100  66 a1 44 7c 66 31 d2 66  f7 34 88 54 0a 66 31 d2  |f.D|f1.f.4.T.f1.|</div><div class="line">00000110  66 f7 74 04 88 54 0b 89  44 0c 3b 44 08 7d 3c 8a  |f.t..T..D.;D.&#125;&lt;.|</div><div class="line">00000120  54 0d c0 e2 06 8a 4c 0a  fe c1 08 d1 8a 6c 0c 5a  |T.....L......l.Z|</div><div class="line">00000130  8a 74 0b bb 00 70 8e c3  31 db b8 01 02 <span class="built_in">cd</span> 13 72  |.t...p..1......r|</div><div class="line">00000140  2a 8c c3 8e 06 48 7c 60  1e b9 00 01 8e db 31 f6  |*....H|`......1.|</div><div class="line">00000150  31 ff <span class="built_in">fc</span> f3 a5 1f 61 ff  26 42 7c be 7f 7d e8 40  |1.....a.&amp;B|..&#125;.@|</div><div class="line">00000160  00 eb 0e be 84 7d e8 38  00 eb 06 be 8e 7d e8 30  |.....&#125;.8.....&#125;.0|</div><div class="line">00000170  00 be 93 7d e8 2a 00 eb  fe 47 52 55 42 20 00 47  |...&#125;.*...GRUB .G|</div><div class="line">00000180  65 6f 6d 00 48 61 72 64  20 44 69 73 6b 00 52 65  |eom.Hard Disk.Re|</div><div class="line">00000190  61 64 00 20 45 72 72 6f  72 00 bb 01 00 b4 0e <span class="built_in">cd</span>  |ad. Error.......|</div><div class="line">000001a0  10 ac 3c 00 75 f4 c3 00  00 00 00 00 00 00 00 00  |..&lt;.u...........|</div><div class="line">000001b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 20  |............... |</div><div class="line">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|</div><div class="line">000001d0  29 82 83 fe ff ff 00 08  20 00 00 00 40 06 00 fe  |)....... ...@...|</div><div class="line">000001e0  ff ff 83 fe ff ff 00 08  60 06 00 00 40 06 00 fe  |........`...@...|</div><div class="line">000001f0  ff ff 05 fe ff ff 00 08  a0 0c 00 f8 5f 0c 55 aa  |............_.U.|</div><div class="line">00000200</div></pre></td></tr></table></figure></p>
<p>可以看到，系统启动一阶段的MBR引导信息已经被恢复;  </p>
<h4 id="实验三：破坏系统启动的1-5阶段"><a href="#实验三：破坏系统启动的1-5阶段" class="headerlink" title="实验三：破坏系统启动的1.5阶段"></a>实验三：破坏系统启动的1.5阶段</h4><p>破坏磁盘上MBR之后的分区，让1阶段中的boot loader不能够识别2阶段所在的分区上的文件系统；  </p>
<h5 id="相关操作-2"><a href="#相关操作-2" class="headerlink" title="相关操作"></a>相关操作</h5><p>清除MBR后的9728字节的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># dd if=/dev/zero of=/dev/sda bs=1 count=10240 skip=512 seek=512</span></div><div class="line">10240+0 records <span class="keyword">in</span></div><div class="line">10240+0 records out</div><div class="line">10240 bytes (10 kB) copied, 0.00533366 s, 1.9 MB/s</div></pre></td></tr></table></figure></p>
<p>查看清除后的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># hexdump -C -n 10240 /dev/sda</span></div><div class="line">00000000  eb 48 90 00 00 00 00 00  00 00 00 00 00 00 00 00  |.H..............|</div><div class="line">00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">*</div><div class="line">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 03 02  |................|</div><div class="line">00000040  ff 00 00 20 01 00 00 00  00 02 fa 90 90 f6 c2 80  |... ............|</div><div class="line">00000050  75 02 b2 80 ea 59 7c 00  00 31 c0 8e d8 8e d0 bc  |u....Y|..1......|</div><div class="line">00000060  00 20 fb a0 40 7c 3c ff  74 02 88 c2 52 f6 c2 80  |. ..@|&lt;.t...R...|</div><div class="line">00000070  74 54 b4 41 bb aa 55 <span class="built_in">cd</span>  13 5a 52 72 49 81 fb 55  |tT.A..U..ZRrI..U|</div><div class="line">00000080  aa 75 43 a0 41 7c 84 c0  75 05 83 e1 01 74 37 66  |.uC.A|..u....t7f|</div><div class="line">00000090  8b 4c 10 be 05 7c c6 44  ff 01 66 8b 1e 44 7c c7  |.L...|.D..f..D|.|</div><div class="line">000000a0  04 10 00 c7 44 02 01 00  66 89 5c 08 c7 44 06 00  |....D...f.\..D..|</div><div class="line">000000b0  70 66 31 c0 89 44 04 66  89 44 0c b4 42 <span class="built_in">cd</span> 13 72  |pf1..D.f.D..B..r|</div><div class="line">000000c0  05 bb 00 70 eb 7d b4 08  <span class="built_in">cd</span> 13 73 0a f6 c2 80 0f  |...p.&#125;....s.....|</div><div class="line">000000d0  84 f0 00 e9 8d 00 be 05  7c c6 44 ff 00 66 31 c0  |........|.D..f1.|</div><div class="line">000000e0  88 f0 40 66 89 44 04 31  d2 88 ca c1 e2 02 88 e8  |..@f.D.1........|</div><div class="line">000000f0  88 f4 40 89 44 08 31 c0  88 d0 c0 e8 02 66 89 04  |..@.D.1......f..|</div><div class="line">00000100  66 a1 44 7c 66 31 d2 66  f7 34 88 54 0a 66 31 d2  |f.D|f1.f.4.T.f1.|</div><div class="line">00000110  66 f7 74 04 88 54 0b 89  44 0c 3b 44 08 7d 3c 8a  |f.t..T..D.;D.&#125;&lt;.|</div><div class="line">00000120  54 0d c0 e2 06 8a 4c 0a  fe c1 08 d1 8a 6c 0c 5a  |T.....L......l.Z|</div><div class="line">00000130  8a 74 0b bb 00 70 8e c3  31 db b8 01 02 <span class="built_in">cd</span> 13 72  |.t...p..1......r|</div><div class="line">00000140  2a 8c c3 8e 06 48 7c 60  1e b9 00 01 8e db 31 f6  |*....H|`......1.|</div><div class="line">00000150  31 ff <span class="built_in">fc</span> f3 a5 1f 61 ff  26 42 7c be 7f 7d e8 40  |1.....a.&amp;B|..&#125;.@|</div><div class="line">00000160  00 eb 0e be 84 7d e8 38  00 eb 06 be 8e 7d e8 30  |.....&#125;.8.....&#125;.0|</div><div class="line">00000170  00 be 93 7d e8 2a 00 eb  fe 47 52 55 42 20 00 47  |...&#125;.*...GRUB .G|</div><div class="line">00000180  65 6f 6d 00 48 61 72 64  20 44 69 73 6b 00 52 65  |eom.Hard Disk.Re|</div><div class="line">00000190  61 64 00 20 45 72 72 6f  72 00 bb 01 00 b4 0e <span class="built_in">cd</span>  |ad. Error.......|</div><div class="line">000001a0  10 ac 3c 00 75 f4 c3 00  00 00 00 00 00 00 00 00  |..&lt;.u...........|</div><div class="line">000001b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 20  |............... |</div><div class="line">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|</div><div class="line">000001d0  29 82 83 fe ff ff 00 08  20 00 00 00 40 06 00 fe  |)....... ...@...|</div><div class="line">000001e0  ff ff 83 fe ff ff 00 08  60 06 00 00 40 06 00 fe  |........`...@...|</div><div class="line">000001f0  ff ff 05 fe ff ff 00 08  a0 0c 00 f8 5f 0c 55 aa  |............_.U.|</div><div class="line">00000200  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">*</div><div class="line">00002800</div></pre></td></tr></table></figure></p>
<p>使用hexdump的-v参数显示详细结果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># hexdump -C -n  1024 -v /dev/sda </span></div><div class="line">00000000  eb 48 90 00 00 00 00 00  00 00 00 00 00 00 00 00  |.H..............|</div><div class="line">00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 03 02  |................|</div><div class="line">00000040  ff 00 00 20 01 00 00 00  00 02 fa 90 90 f6 c2 80  |... ............|</div><div class="line">00000050  75 02 b2 80 ea 59 7c 00  00 31 c0 8e d8 8e d0 bc  |u....Y|..1......|</div><div class="line">00000060  00 20 fb a0 40 7c 3c ff  74 02 88 c2 52 f6 c2 80  |. ..@|&lt;.t...R...|</div><div class="line">00000070  74 54 b4 41 bb aa 55 <span class="built_in">cd</span>  13 5a 52 72 49 81 fb 55  |tT.A..U..ZRrI..U|</div><div class="line">00000080  aa 75 43 a0 41 7c 84 c0  75 05 83 e1 01 74 37 66  |.uC.A|..u....t7f|</div><div class="line">00000090  8b 4c 10 be 05 7c c6 44  ff 01 66 8b 1e 44 7c c7  |.L...|.D..f..D|.|</div><div class="line">000000a0  04 10 00 c7 44 02 01 00  66 89 5c 08 c7 44 06 00  |....D...f.\..D..|</div><div class="line">000000b0  70 66 31 c0 89 44 04 66  89 44 0c b4 42 <span class="built_in">cd</span> 13 72  |pf1..D.f.D..B..r|</div><div class="line">000000c0  05 bb 00 70 eb 7d b4 08  <span class="built_in">cd</span> 13 73 0a f6 c2 80 0f  |...p.&#125;....s.....|</div><div class="line">000000d0  84 f0 00 e9 8d 00 be 05  7c c6 44 ff 00 66 31 c0  |........|.D..f1.|</div><div class="line">000000e0  88 f0 40 66 89 44 04 31  d2 88 ca c1 e2 02 88 e8  |..@f.D.1........|</div><div class="line">000000f0  88 f4 40 89 44 08 31 c0  88 d0 c0 e8 02 66 89 04  |..@.D.1......f..|</div><div class="line">00000100  66 a1 44 7c 66 31 d2 66  f7 34 88 54 0a 66 31 d2  |f.D|f1.f.4.T.f1.|</div><div class="line">00000110  66 f7 74 04 88 54 0b 89  44 0c 3b 44 08 7d 3c 8a  |f.t..T..D.;D.&#125;&lt;.|</div><div class="line">00000120  54 0d c0 e2 06 8a 4c 0a  fe c1 08 d1 8a 6c 0c 5a  |T.....L......l.Z|</div><div class="line">00000130  8a 74 0b bb 00 70 8e c3  31 db b8 01 02 <span class="built_in">cd</span> 13 72  |.t...p..1......r|</div><div class="line">00000140  2a 8c c3 8e 06 48 7c 60  1e b9 00 01 8e db 31 f6  |*....H|`......1.|</div><div class="line">00000150  31 ff <span class="built_in">fc</span> f3 a5 1f 61 ff  26 42 7c be 7f 7d e8 40  |1.....a.&amp;B|..&#125;.@|</div><div class="line">00000160  00 eb 0e be 84 7d e8 38  00 eb 06 be 8e 7d e8 30  |.....&#125;.8.....&#125;.0|</div><div class="line">00000170  00 be 93 7d e8 2a 00 eb  fe 47 52 55 42 20 00 47  |...&#125;.*...GRUB .G|</div><div class="line">00000180  65 6f 6d 00 48 61 72 64  20 44 69 73 6b 00 52 65  |eom.Hard Disk.Re|</div><div class="line">00000190  61 64 00 20 45 72 72 6f  72 00 bb 01 00 b4 0e <span class="built_in">cd</span>  |ad. Error.......|</div><div class="line">000001a0  10 ac 3c 00 75 f4 c3 00  00 00 00 00 00 00 00 00  |..&lt;.u...........|</div><div class="line">000001b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 80 20  |............... |</div><div class="line">000001c0  21 00 83 aa 28 82 00 08  00 00 00 00 20 00 00 aa  |!...(....... ...|</div><div class="line">000001d0  29 82 83 fe ff ff 00 08  20 00 00 00 40 06 00 fe  |)....... ...@...|</div><div class="line">000001e0  ff ff 83 fe ff ff 00 08  60 06 00 00 40 06 00 fe  |........`...@...|</div><div class="line">000001f0  ff ff 05 fe ff ff 00 08  a0 0c 00 f8 5f 0c 55 aa  |............_.U.|</div><div class="line">00000200  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000210  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000220  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000230  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000240  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000250  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000260  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000270  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000280  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000290  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002c0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002d0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000002f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000300  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000310  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000320  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000330  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000340  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000350  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000360  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000370  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000380  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00000390  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003c0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003d0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">000003f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div></pre></td></tr></table></figure></p>
<p>可以看到MBR后的磁盘内容都为0了；<br>重启系统看效果：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># reboot</span></div></pre></td></tr></table></figure></p>
<h5 id="现象-1"><a href="#现象-1" class="headerlink" title="现象"></a>现象</h5><p>系统启动之后直接显示黑屏<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/28.png" alt="image">  </p>
<h5 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h5><p>系统启动之后，因为1阶段的MBR主引导记录是可用的，所以能够正常从硬盘启动引导，但是磁盘中MBR后的数据都被清零了，导致卡在了1.5阶段，现象就是如图所示的黑屏；  </p>
<h5 id="修复过程-1"><a href="#修复过程-1" class="headerlink" title="修复过程"></a>修复过程</h5><p>调BIOS使用系统安装光盘进入救援模式，然后切根，使用grub命令进行修复：<br><em>注意：grub命令依赖/boot/grub/目录下的1阶段和1.5阶段备份文件，如果把他们移除后使用grub命令就会修复失败：</em><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/29.png" alt="image"><br>把从/boot/grub/内的备份文件恢复后，重新使用grub命令修复1.5阶段<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/30.png" alt="image"><br>可以看到修复成功的提示，并可以看到修复了27个扇区；<br>退出grub后，重启系统，系统成功启动进入登陆界面<br>查看前27个扇区的信息：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#hexdump -C -n 13959 /dev/sda</span></div><div class="line">.....................</div><div class="line">000034d0  00 00 00 00 01 00 00 00  65 78 74 32 66 73 00 69  |........ext2fs.i|</div><div class="line">000034e0  6e 74 65 72 6e 61 6c 20  65 72 72 6f 72 3a 20 74  |nternal error: t|</div><div class="line">000034f0  68 65 20 73 65 63 6f 6e  64 20 73 65 63 74 6f 72  |he second sector|</div><div class="line">00003500  20 6f 66 20 53 74 61 67  65 20 32 20 69 73 20 75  | of Stage 2 is u|</div><div class="line">00003510  6e 6b 6e 6f 77 6e 2e 00  14 00 00 00 00 00 00 00  |nknown..........|</div><div class="line">00003520  01 7a 52 00 01 7c 08 01  1b 0c 04 04 88 01 00 00  |.zR..|..........|</div><div class="line">00003530  28 00 00 00 1c 00 00 00  68 f9 ff ff 72 01 00 00  |(.......h...r...|</div><div class="line">00003540  00 41 0e 08 85 02 42 0d  05 4b 86 04 87 03 02 68  |.A....B..K.....h|</div><div class="line">00003550  0a c6 41 c7 41 c5 0c 04  04 48 0b 00 34 00 00 00  |..A.A....H..4...|</div><div class="line">00003560  48 00 00 00 bc fa ff ff  cc 01 00 00 00 41 0e 08  |H............A..|</div><div class="line">00003570  85 02 42 0d 05 4b 86 04  87 03 02 64 0a c6 41 c7  |..B..K.....d..A.|</div><div class="line">00003580  41 0c 04 04 c5 44 0b 61  0a c6 41 c7 41 c5 0c 04  |A....D.a..A.A...|</div><div class="line">00003590  04 45 0b 00 48 00 00 00  80 00 00 00 54 <span class="built_in">fc</span> ff ff  |.E..H.......T...|</div><div class="line">000035a0  28 01 00 00 00 41 0e 08  85 02 42 0d 05 4e 86 04  |(....A....B..N..|</div><div class="line">000035b0  87 03 76 0a c6 41 c7 41  0c 04 04 c5 47 0b 6c 0a  |..v..A.A....G.l.|</div><div class="line">000035c0  c6 41 c7 41 c5 0c 04 04  42 0b 54 0a c6 41 c7 41  |.A.A....B.T..A.A|</div><div class="line">000035d0  0c 04 04 c5 42 0b 02 8d  c6 41 c7 41 0c 04 04 c5  |....B....A.A....|</div><div class="line">000035e0  4c 00 00 00 cc 00 00 00  38 fd ff ff 3b 01 00 00  |L.......8...;...|</div><div class="line">000035f0  00 41 0e 08 85 02 42 0d  05 4e 86 04 87 03 5c 0a  |.A....B..N....\.|</div><div class="line">00003600  c6 41 c7 41 c5 0c 04 04  41 0b 6b 0a c6 41 c7 41  |.A.A....A.k..A.A|</div><div class="line">00003610  0c 04 04 c5 43 0b 68 0a  c6 41 c7 41 0c 04 04 c5  |....C.h..A.A....|</div><div class="line">00003620  46 0b 02 85 0a c6 41 c7  41 0c 04 04 c5 41 0b 00  |F.....A.A....A..|</div><div class="line">00003630  00 01 00 00 d8 52 00 00  59 48 00 00 44 49 00 00  |.....R..YH..DI..|</div><div class="line">00003640  d7 42 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |.B..............|</div><div class="line">00003650  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00003660  00 00 00 00 ff 00 00 00  01 00 00 00 ff ff ff ff  |................|</div><div class="line">00003670  ff ff ff ff 00 00 00 00  00 00 00 00 00 00 00 00  |................|</div><div class="line">00003680  00 00 00 00 00 00 00                              |.......|</div><div class="line">00003687</div><div class="line">............省略..........</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：修复后，系统启动会依赖/boot/grub/stage2，所以/boot/grub目录下至少要存在grub.conf和stage2文件。否则系统不能正常启动！  </p>
</blockquote>
<h4 id="实验四-移除grub-conf文件"><a href="#实验四-移除grub-conf文件" class="headerlink" title="实验四 移除grub.conf文件"></a>实验四 移除grub.conf文件</h4><p>移除/boot/grub/grub.conf文件，然后重启系统看效果并修复  </p>
<h4 id="相关操作-3"><a href="#相关操作-3" class="headerlink" title="相关操作"></a>相关操作</h4><p>移除/boot/grub/grub.conf文件并重启系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># mv /boot/grub/grub.conf /app/</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment"># ls /boot/grub/</span></div><div class="line">device.map     ffs_stage1_5      minix_stage1_5     stage2           xfs_stage1_5</div><div class="line">e2fs_stage1_5  iso9660_stage1_5  reiserfs_stage1_5  ufs2_stage1_5</div><div class="line">fat_stage1_5   jfs_stage1_5      stage1             vstafs_stage1_5</div><div class="line">[root@MyCentOS6 ~]<span class="comment"># reboot</span></div><div class="line"></div><div class="line">Broadcast message from root@MyCentOS6.9</div><div class="line">        (/dev/pts/1) at 8:34 ...</div><div class="line"></div><div class="line">The system is going down <span class="keyword">for</span> reboot NOW!</div></pre></td></tr></table></figure></p>
<p>系统启动之后会显示如下界面：<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/31.png" alt="image">  </p>
<h5 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h5><p>开机加电自检后，通过BIOS设置的第一启动项找到硬盘后，通过硬盘上的MBR主分区引导加载磁盘上的内容，但是没有读到grub.conf内的相应配置；  </p>
<h5 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h5><p>使用grub交互命令启动系统：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grub&gt; root (hd0,0)</div><div class="line">grub&gt; kernel /vmlinuz-2.6.32-696.e16.x86_64 root=/dev/sda2</div><div class="line">grub&gt; initrd /initramfs-2.6.32-696.e16.x86_64.img</div></pre></td></tr></table></figure></p>
<p><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/32.png" alt="image"><br>键入<code>boot</code>敲回车后，即进入后续的启动流程；  </p>
<blockquote>
<p>注意：虽然系统成功启动了，但是/boot/grub/目录下并没有grub.conf文件。需要自己去配置相关文件，不然下次启动还是会卡在grub的交互界面、手工输入才能启动；  </p>
</blockquote>
<h4 id="实验五-删除-boot-grub目录"><a href="#实验五-删除-boot-grub目录" class="headerlink" title="实验五 删除/boot/grub目录"></a>实验五 删除/boot/grub目录</h4><p>删除/boot/grub目录后，重启看效果，并修复  </p>
<h5 id="相关操作-4"><a href="#相关操作-4" class="headerlink" title="相关操作"></a>相关操作</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># rm -rf /boot/grub</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment"># reboot</span></div></pre></td></tr></table></figure>
<p>系统启动后，报错<code>Error 15</code><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/33.png" alt="image">  </p>
<h5 id="修复-1"><a href="#修复-1" class="headerlink" title="修复"></a>修复</h5><p>使用系统安装光盘，进入救援模式后，切根，使用<code>grub-install</code>命令修复：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sh-4.1<span class="comment"># grub-install /dev/sda</span></div><div class="line">sh-4.1<span class="comment"># sync    //确保写入磁盘</span></div></pre></td></tr></table></figure></p>
<p><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/34.png" alt="image"><br>这时候，查看/boot/grub/目录就可以看到又新生成了相应文件。但是并没有grub.conf文件。<br>创建grub.conf文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vim /boot/grub/grub.conf</div><div class="line">default=0</div><div class="line">timeout=3</div><div class="line">title magelinux</div><div class="line">kernel  /vmlinuz-2.6.32-696.el6.x86_64</div><div class="line">initrd  /initramfs-2.6.32-696.el6.x86_64.img</div></pre></td></tr></table></figure></p>
<p>保存后，重启系统，即可成功启动系统！  </p>
<h4 id="实验六-删除-boot目录"><a href="#实验六-删除-boot目录" class="headerlink" title="实验六 删除/boot目录"></a>实验六 删除/boot目录</h4><p>删除/boot目录后重启系统，并修复  </p>
<h4 id="相关操作-5"><a href="#相关操作-5" class="headerlink" title="相关操作"></a>相关操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># rm -rf /boot</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment"># reboot</span></div></pre></td></tr></table></figure>
<p>启动后，跟实验五的结果一样，报错“Error 15”<br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/33.png" alt="image">  </p>
<h5 id="修复-2"><a href="#修复-2" class="headerlink" title="修复"></a>修复</h5><p>使用系统安装光盘，进入救援模式后，切根,挂载光盘，从光盘里考入内核文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">chroot /mnt/sysimage/</div><div class="line">mount /dev/sr0 /mnt</div><div class="line"><span class="built_in">cd</span> /mnt/isolinux/</div><div class="line">cp vmlinuz /boot/</div><div class="line">mkinitrd /boot/initramfs.img `uname -r`</div><div class="line">grub-install /dev/sda</div><div class="line">sync</div></pre></td></tr></table></figure></p>
<p>查看/boot/下的文件发现还差/boot/grub/grub.conf文件，继续手工编写：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vim /boot/grub/grub.conf</div><div class="line">default=0</div><div class="line">timeout=3</div><div class="line">title magelinux</div><div class="line">kernel  /vmlinuz-2.6.32-696.el6.x86_64</div><div class="line">initrd  /initramfs-2.6.32-696.el6.x86_64.img</div></pre></td></tr></table></figure></p>
<p>完成之后重启系统，又能愉快的启动了~~</p>
]]></content>
      
        <categories>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS6.9启动系列--为Grub设置密码]]></title>
      <url>/2017/09/03/CentOS6-9%E5%90%AF%E5%8A%A8%E7%B3%BB%E5%88%97-%E4%B8%BAGrub%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><ul>
<li>OS版本：CentOS release 6.9  </li>
<li>Grub版本：grub-0.97-99.el6.x86_64  <h4 id="明文密码"><a href="#明文密码" class="headerlink" title="明文密码"></a>明文密码</h4>编辑<code>/boot/grub/grub.conf</code>文件：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">vim /boot/grub/grub.conf</div><div class="line"><span class="comment"># grub.conf generated by anaconda</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Note that you do not have to rerun grub after making changes to this file</span></div><div class="line"><span class="comment"># NOTICE:  You have a /boot partition.  This means that</span></div><div class="line"><span class="comment">#          all kernel and initrd paths are relative to /boot/, eg.</span></div><div class="line"><span class="comment">#          root (hd0,0)</span></div><div class="line"><span class="comment">#          kernel /vmlinuz-version ro root=/dev/sda2</span></div><div class="line"><span class="comment">#          initrd /initrd-[generic-]version.img</span></div><div class="line"><span class="comment">#boot=/dev/sda</span></div><div class="line">default=0</div><div class="line">timeout=5</div><div class="line"><span class="comment">#splashimage=(hd0,0)/grub/splash.xpm.gz     //这个是启动菜单的背景图片</span></div><div class="line">password magedu     //编辑启动引导菜单的密码</div><div class="line">hiddenmenu</div><div class="line">title CentOS 6 (2.6.32-696.el6.x86_64)</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=811f130c-f1b2-423d-9149-29703</div><div class="line">0fbfe80 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashke</div><div class="line">rnel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class="line">        initrd /initramfs-2.6.32-696.el6.x86_64.img</div><div class="line">        password hello      //第一个启动引导项的启动口令</div><div class="line">title CentOS 9 (9.6.32-696.el6.x86_64)</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=811f130c-f1b2-423d-9149-29703</div><div class="line">0fbfe80 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashke</div><div class="line">rnel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class="line">        initrd /initramfs-2.6.32-696.el6.x86_64.img</div></pre></td></tr></table></figure>
</li>
</ul>
<p>新增行<code>password magedu</code>说明：<br>这个密码锁定的是启动引导菜单，设置后系统重新启动时，如果需要选择、编辑启动引导菜单或者进入单用户模式时，就需要使用到该密码；<br><em>如图所示，默认可以在不需要密码的情况下可以上下切换启动项。如果需要编辑引导菜单，则需要按<code>p</code>进行设置：</em><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/12.png" alt="image"><br><em>按<code>p</code>后如图所示</em><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/13.png" alt="image">  </p>
<blockquote>
<p>Note: 默认启动菜单的背景图片没有被注释掉，如果在进入编辑菜单时明明密码输入正确却总是报错，可以把这个背景图片行注释掉试试；  </p>
</blockquote>
<p>新增行<code>password hello</code>说明：<br>这个密码放在第一个启动菜单后面，是对第一个启动菜单生效的。设置后，选择第一个菜单启动后会需要输入密码后才能启动。<br><em>如下图所示：</em><br><img src="http://ovnpik36u.bkt.clouddn.com/201709/grub/15.png" alt="image">  </p>
<h4 id="密文密码："><a href="#密文密码：" class="headerlink" title="密文密码："></a>密文密码：</h4><p>明文密码终究是不安全的，整个密码赤裸裸的容易被偷窥，所有我们也可以把密码设置为密文。  </p>
<h5 id="使用MD5加密："><a href="#使用MD5加密：" class="headerlink" title="使用MD5加密："></a>使用MD5加密：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># grub-md5-crypt</span></div><div class="line">Password:   //magedu</div><div class="line">Retype password: </div><div class="line"><span class="variable">$1</span><span class="variable">$ojFxT</span>/<span class="variable">$sqRFyURU7Ie0RturOYG1B1</span></div><div class="line">[root@MyCentOS6 ~]<span class="comment"># grub-md5-crypt </span></div><div class="line">Password:   //hello</div><div class="line">Retype password: </div><div class="line"><span class="variable">$1</span><span class="variable">$rwHxT</span>/<span class="variable">$Wm5QugEHbPnsd2vXLquzY</span>/</div></pre></td></tr></table></figure>
<p>把生成的密文复制粘贴到/boot/grub/grub.conf文件中：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># vim /boot/grub/grub.conf </span></div><div class="line"><span class="comment">#boot=/dev/sda</span></div><div class="line"><span class="comment"># grub.conf generated by anaconda</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Note that you do not have to rerun grub after making changes to this file</span></div><div class="line"><span class="comment"># NOTICE:  You have a /boot partition.  This means that</span></div><div class="line"><span class="comment">#          all kernel and initrd paths are relative to /boot/, eg.</span></div><div class="line"><span class="comment">#          root (hd0,0)</span></div><div class="line"><span class="comment">#          kernel /vmlinuz-version ro root=/dev/sda2</span></div><div class="line"><span class="comment">#          initrd /initrd-[generic-]version.img</span></div><div class="line"><span class="comment">#boot=/dev/sda</span></div><div class="line">default=0</div><div class="line">timeout=5</div><div class="line"><span class="comment">#splashimage=(hd0,0)/grub/splash.xpm.gz</span></div><div class="line">password --md5 <span class="variable">$1</span><span class="variable">$ojFxT</span>/<span class="variable">$sqRFyURU7Ie0RturOYG1B1</span></div><div class="line">hiddenmenu</div><div class="line">title CentOS 6 (2.6.32-696.el6.x86_64)</div><div class="line">        root (hd0,0)</div><div class="line">        kernel /vmlinuz-2.6.32-696.el6.x86_64 ro root=UUID=811f130c-f1b2-423d-9149-29703</div><div class="line">0fbfe80 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashke</div><div class="line">rnel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet</div><div class="line">        initrd /initramfs-2.6.32-696.el6.x86_64.img</div><div class="line">        password --md5 <span class="variable">$1</span><span class="variable">$rwHxT</span>/<span class="variable">$Wm5QugEHbPnsd2vXLquzY</span>/</div></pre></td></tr></table></figure></p>
<h5 id="使用更安全的SHA512加密："><a href="#使用更安全的SHA512加密：" class="headerlink" title="使用更安全的SHA512加密："></a>使用更安全的SHA512加密：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># grub-crypt </span></div><div class="line">Password: </div><div class="line">Retype password: </div><div class="line"><span class="variable">$6</span><span class="variable">$XUXQ1PbCHSVFL7Pf</span><span class="variable">$5</span>/.NTV40xqUPUdPE2MUBmepR/SZZ/5CTR9TNNhEN09zcajDPBXTHCoy8fT2Pc9QAv1jz2/wfKywDx0JkhSGl./</div></pre></td></tr></table></figure>
<p>同样，需要把密码的密文复制粘贴到<code>/boot/grub/grub.conf</code>文件中，格式如下：  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">password --encrypted <span class="variable">$6</span><span class="variable">$XUXQ1PbCHSVFL7Pf</span><span class="variable">$5</span>/.NTV40xqUPUdPE2MUBmepR/SZZ/5CTR9TNNhEN09zcajDPBXTHCoy8fT2Pc9QAv1jz2/wfKywDx0JkhSGl./</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 实验 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[牛顿第一定律--很有哲理！]]></title>
      <url>/2017/08/24/%E7%89%9B%E9%A1%BF%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B-%E5%BE%88%E6%9C%89%E5%93%B2%E7%90%86%EF%BC%81/</url>
      <content type="html"><![CDATA[<blockquote>
<p>牛顿第一定律：<br>任何一个物体在不受外力的作用下，会一直保持静止或做匀速直线运动。  </p>
</blockquote>
<p><strong>人和事，不也是这样吗？</strong><br>如果想让事态能够按照自己的预期发展，不<code>努力</code>去改变当前的<code>状态</code>怎么能行？  </p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-11、Linux计划任务]]></title>
      <url>/2017/08/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-11%E3%80%81Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>在生产环境中，我们经常需要在某个时间点执行某个操作，或者需要周期性的重复执行某个操作，这时候我们就需要用到计划任务。  </p>
<h4 id="计划任务分类"><a href="#计划任务分类" class="headerlink" title="计划任务分类"></a>计划任务分类</h4><ul>
<li><p>未来的某个时间点执行一次任务</p>
<blockquote>
<p>at: 管理员指定时间执行执行指定的任务；<br>batch: 系统自行选择空闲时间去执行此处指定的任务；  </p>
</blockquote>
</li>
<li><p>周期性运行某个任务  </p>
<blockquote>
<p>cron  </p>
</blockquote>
</li>
</ul>
<h4 id="Linux的任务计划"><a href="#Linux的任务计划" class="headerlink" title="Linux的任务计划"></a>Linux的任务计划</h4><h5 id="at任务"><a href="#at任务" class="headerlink" title="at任务"></a>at任务</h5><p>用户可以通过使用at命令在指定的某个时间点执行一次任务。  </p>
<h6 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h6><ul>
<li><code>at</code>是一个外部命令，由软件包<code>at</code>提供，所以需要提供atd服务才能实现at任务。  </li>
<li>at命令详解：<br>使用格式：  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">at [option] TIME</div></pre></td></tr></table></figure>
</li>
</ul>
<p>常用选项：<br><code>-V</code>: 显示版本信息:<br><code>-q QUEUE</code><br><code>-l</code>: 列出指定队列中等待运行的作业；相当于atq<br><code>-d</code>: 删除指定的作业；相当于atrm<br><code>-c</code>: 查看具体作业任务<br><code>-f /path/from/somefile</code>：从指定的文件中读取任务<br><code>-m</code>:当任务被完成之后，将给用户发送邮件，即使没有标准输出  </p>
<p>TIME:<br>定义执行at这项任务的时间<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">HH:MM [YYYY-mm-dd]</div><div class="line">noon:中午十二点)  </div><div class="line">midnight:半夜<span class="number">12</span>点  </div><div class="line">teatime:下午四点</div><div class="line">tomorrow:明天</div><div class="line">now+<span class="comment">#&#123;minutes,hours,days,OR weeks&#125;</span></div></pre></td></tr></table></figure></p>
<p>at时间格式：  </p>
<ul>
<li><code>HH:MM 02:00</code><br>在今日的 HH:MM 进行，若该时刻已过，则明天此时执行任务  </li>
<li><code>HH:MM YYYY-MM-DD 02:00 2016-09-20</code><br>规定在某年某月的某一天的特殊时刻进行该项任务  </li>
<li><p><code>HH:MM[am|pm] [Month] [Date]</code><br>例如：  </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">04</span>pm March <span class="number">17</span></div><div class="line"><span class="number">17</span>:<span class="number">20</span> tomorrow</div></pre></td></tr></table></figure>
</li>
<li><p><code>HH:MM[am|pm] + number [minutes|hours|days|weeks]</code><br>在某个时间点再加几个时间后才进行该项任务<br>例如：  </p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">now + <span class="number">5</span> minutes</div><div class="line"><span class="number">02</span>pm + <span class="number">3</span> days</div></pre></td></tr></table></figure>
</li>
</ul>
<h6 id="相关配置文件"><a href="#相关配置文件" class="headerlink" title="相关配置文件"></a>相关配置文件</h6><ol>
<li><code>/var/spool/at</code><br>at计划任务的队列存放在该目录中  </li>
<li><code>/etc/at.{allow,deny}</code><br><code>/etc/at.allow</code>默认不存在，只有该文件中的用户才能执行at命令<br><code>/etc/at.deny</code>默认存在，拒绝该文件中用户执行at命令， 而没有在at.deny 文件中的使用者则可执行;  <blockquote>
<p>注意：如果两个文件都不存在，只有 root 可以执行 at 命令  </p>
</blockquote>
</li>
</ol>
<h6 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h6><ul>
<li><p>交互式<br>设置在13:00在屏幕上输出“hello,world!”,并查看当前存在的计划任务  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]# at 13:00</div><div class="line">at&gt; echo hello,world!       //按Ctrl+D保存并退出at计划任务；</div><div class="line">at&gt; &lt;EOT&gt;</div><div class="line">job 3 at 2017-08-24 13:00</div><div class="line">Can't open /var/run/atd.pid to signal atd. No atd running?</div><div class="line">[root@MyCentOS6 ~]# at -l</div><div class="line">1       2017-08-24 13:00 a root</div></pre></td></tr></table></figure>
</li>
<li><p>输入重定向<br>设置14:00在屏幕上输出“wahaha”<br>使用<code>echo</code>重定向：  </p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]# echo "echo wahaha" | at 14:00</div><div class="line">job 4 at 2017-08-24 14:00</div><div class="line">Can't open /var/run/atd.pid to signal atd. No atd running?</div><div class="line">[root@MyCentOS6 ~]# at -l</div><div class="line">2       2017-08-24 14:00 a root</div><div class="line">1       2017-08-24 13:00 a root</div></pre></td></tr></table></figure>
</li>
</ul>
<p>使用<code>EOF</code>重定向:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># at 15:00 &lt;&lt;EOF</span></div><div class="line">&gt; echo wahaha</div><div class="line">&gt; EOF</div><div class="line">job <span class="number">7</span> at <span class="number">2017</span><span class="number">-08</span><span class="number">-24</span> <span class="number">15</span>:<span class="number">00</span></div><div class="line">Can<span class="string">'t open /var/run/atd.pid to signal atd. No atd running?</span></div></pre></td></tr></table></figure></p>
<ul>
<li>使用<code>at -f /path/to/somefile</code><br>设置15:00运行/root/at/at.sh脚本  <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">at -f /root/bin/at.sh <span class="number">15</span>:<span class="number">00</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>Note: 作业的执行结果以邮件通知给相关用户  </p>
</blockquote>
<h5 id="batch"><a href="#batch" class="headerlink" title="batch"></a>batch</h5><p>让系统自行选择空闲时间去执行此处指定的任务  </p>
<h4 id="周期性计划任务cron"><a href="#周期性计划任务cron" class="headerlink" title="周期性计划任务cron"></a>周期性计划任务cron</h4><h5 id="相关的程序包"><a href="#相关的程序包" class="headerlink" title="相关的程序包"></a>相关的程序包</h5><ul>
<li><code>cronie</code>：主程序包，提供了crond守护进程及相关辅助工具；  </li>
<li><code>cronie-anacron</code>: cronie的补充流程；用于监控cronie任务执行状态；如cronie中的任务在过去该运行的的时间点未能正常运行，则anacron会随后启动一次此任务；  </li>
<li><code>crontabs</code>: 包含CentOS提供系统维护任务；<br><strong>确保crond任务处于运行状态</strong>  </li>
</ul>
<p>CentOS 6:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># service crond status</span></div><div class="line">crond (pid  <span class="number">1328</span>) <span class="keyword">is</span> running...</div></pre></td></tr></table></figure></p>
<p>CentOS 7:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#systemctl status crond</span></div><div class="line">● crond.service - Command Scheduler</div><div class="line">   Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled)</div><div class="line">   Active: active (running) since Thu <span class="number">2017</span><span class="number">-08</span><span class="number">-24</span> <span class="number">14</span>:<span class="number">07</span>:<span class="number">03</span> CST; <span class="number">11</span>min ago</div><div class="line"> Main PID: <span class="number">674</span> (crond)</div><div class="line">   CGroup: /system.slice/crond.service</div><div class="line">           └─<span class="number">674</span> /usr/sbin/crond -n</div></pre></td></tr></table></figure></p>
<h5 id="周期性计划任务分类"><a href="#周期性计划任务分类" class="headerlink" title="周期性计划任务分类"></a>周期性计划任务分类</h5><p>计划要周期性执行的任务提交给crond，由其来实现到点运行。  </p>
<h6 id="系统cron任务"><a href="#系统cron任务" class="headerlink" title="系统cron任务"></a>系统cron任务</h6><p>系统维护作业。<br>相关配置文件<code>/etc/crontab</code>,详情参考<code>man 5 crontab</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 log]<span class="comment"># ll cron</span></div><div class="line">-rw-------. <span class="number">1</span> root root <span class="number">46145</span> Aug <span class="number">24</span> <span class="number">10</span>:<span class="number">10</span> cron</div><div class="line">[root@MyCentOS6 log]<span class="comment"># cat /etc/crontab </span></div><div class="line">SHELL=/bin/bash</div><div class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</div><div class="line">MAILTO=root</div><div class="line">HOME=/</div><div class="line"></div><div class="line"><span class="comment"># For details see man 4 crontabs</span></div><div class="line"></div><div class="line"><span class="comment"># Example of job definition:</span></div><div class="line"><span class="comment"># .---------------- minute (0 - 59)</span></div><div class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></div><div class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></div><div class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></div><div class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></div><div class="line"><span class="comment"># |  |  |  |  |</span></div><div class="line"><span class="comment"># *  *  *  *  * user-name command to be executed</span></div></pre></td></tr></table></figure></p>
<p><em>例如：晚上9点10分运行echo命令</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">10</span> <span class="number">21</span> * * * centos /bin/echo <span class="string">"Howdy!"</span></div></pre></td></tr></table></figure></p>
<p>系统的计划任务有：<br><code>/etc/crontab</code><br><code>/etc/cron.d/</code>: 配置文件<br><code>/etc/cron.hourly/</code>: 脚本<br><code>/etc/cron.daily/</code>: 脚本<br><code>/etc/cron.weekly/</code>: 脚本<br><code>/etc/cron.monthly/</code>:脚本</p>
<h6 id="用户cron任务"><a href="#用户cron任务" class="headerlink" title="用户cron任务"></a>用户cron任务</h6><p>使用crontab命令  </p>
<h5 id="cron任务时间表示法"><a href="#cron任务时间表示法" class="headerlink" title="cron任务时间表示法"></a>cron任务时间表示法</h5><ol>
<li>特定值：<br>给定时间点有限取值范围内的值；</li>
<li><code>*</code><br>给定时间点上有效取值范围内的所有值；表示”每…”;  </li>
<li>离散取值：<code>#，#，#</code></li>
<li>连续取值：-，例如：<code>#-#</code>  </li>
<li>在指定时间范围上，定义歩长<code>/#</code></li>
</ol>
<p><em>例如：每3小时echo命令：</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span> */<span class="number">3</span> * * * gentoo /bin/echo <span class="string">"howdy!"</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>注意：day 和 week如果都存在时，两者为或的关系，day 或 week都会执行。  </p>
</blockquote>
<p>特殊时间格式表示：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@reboot         Run once after reboot.</span></div><div class="line"><span class="meta">@yearly         0 0 1 1 *</span></div><div class="line"><span class="meta">@annually       0 0 1 1 *</span></div><div class="line"><span class="meta">@monthly        0 0 1 * *</span></div><div class="line"><span class="meta">@weekly         0 0 * * 0</span></div><div class="line"><span class="meta">@daily          0 0 * * *</span></div><div class="line"><span class="meta">@hourly         0 * * * *</span></div></pre></td></tr></table></figure></p>
<h5 id="用户cron详解："><a href="#用户cron详解：" class="headerlink" title="用户cron详解："></a>用户cron详解：</h5><p>crontab命令定义,每个用户都有专用的cron任务文件：/var/spool/cron/USERNAME  </p>
<h6 id="crontab命令："><a href="#crontab命令：" class="headerlink" title="crontab命令："></a>crontab命令：</h6><p>使用格式：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crontab [-u user] [-l | -r | -e] [-i] [-s]</div></pre></td></tr></table></figure></p>
<p>常用参数：<br><code>-l</code>: 列出所有任务；<br><code>-e</code>: 编辑任务；<br><code>-r</code>：移出所有任务；<br><code>-i</code>：同-r一同使用，以交互式模式让用户有选择地移除指定任务；<br><code>-u user</code>: 仅root可运行，代为为指定用户管理cron任务；  </p>
<h6 id="控制用户执行计划任务："><a href="#控制用户执行计划任务：" class="headerlink" title="控制用户执行计划任务："></a>控制用户执行计划任务：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/cron.&#123;allow,deny&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>Note:<br>1.运行结果以邮件通知给相关用户：如果不想收到邮件通知，可用使用重定向：<br>2.对于cron任务来讲，%有特殊用途；如果在命令中要使用%，则需要转义；不过，如果把%放置于单引号中，也可以不用转义；</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[好好敲实验吧，别再瞎折腾了！不做死就不会死！！]]></title>
      <url>/2017/08/22/%E5%A5%BD%E5%A5%BD%E6%95%B2%E5%AE%9E%E9%AA%8C%E5%90%A7%EF%BC%8C%E5%88%AB%E5%86%8D%E7%9E%8E%E6%8A%98%E8%85%BE%E4%BA%86%EF%BC%81%E4%B8%8D%E5%81%9A%E6%AD%BB%E5%B0%B1%E4%B8%8D%E4%BC%9A%E6%AD%BB%EF%BC%81%EF%BC%81/</url>
      <content type="html"><![CDATA[<p>上周刚刚系统学习了一些网络知识，教室里的网络就成了同学们的实验场，所有的电脑和虚拟机都成了靶机……什么arp地址欺骗、IP地址冲突也接踵而来。后面的大哥，前段时间还经历了被莫名<code>rm -rf /</code>的困扰……<br>为此，我在所有的虚拟机上面添加了双网卡，其中一块设置为<code>仅主机</code>模式，并把sshd服务的监听地址设置为该网卡的IP地址。然后又在<code>/etc/hosts.allow</code>里面添加了允许的网段，毕竟只能宿主机ssh连接有点不现实，慢慢想办法优化加固吧！只要不被其他用户非法登录，其他问题都好说！可能在此您问有疑问：为什么不用iptables或Firewall做限制呢？先简单介绍一下我此时所处的环境吧—<code>马哥教育郑州校区25期Linux学习班</code>。因为要经常做实验、系统防火墙也还没学，好多时候防火墙设置不好严重影响实验结果。所以，不是不想用，是水平不够。<br>设置sshd服务监听IP：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /etc/ssh/sshd_config</div><div class="line"><span class="comment">#ListenAddress 0.0.0.0</span></div><div class="line">ListenAddress <span class="number">192.168</span><span class="number">.25</span><span class="number">.7</span></div></pre></td></tr></table></figure></p>
<p>注释掉原来的行，并重新添加<code>ListenAddress 仅主机网卡IP</code><br>设置访问限制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim /etc/hosts.allow</div><div class="line">#allow sshd</div><div class="line">sshd:192.168.25.*:allow     //允许仅主机IP网段</div><div class="line">sshd:172.18.222.254:allow   //允许物理机真实网卡IP</div><div class="line">sshd:all:deny           //拒绝所有</div></pre></td></tr></table></figure></p>
<p>其实这两个策略选择一个就好了，做访问限制策略应该比设置sshd监听IP更灵活一些……  </p>
<p>虚拟机设置好，开始折腾物理机…..  </p>
<p>先把网关的IP在物理机上做MAC地址绑定，防止arp地址欺骗：<br>网关IP：172.18.0.1<br>网关MAC：84-2b-2b-43-d0-50<br>在windows使用过管理员权限打开“命令提示符”在里面执行：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function">C:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">arp</span> -<span class="title">s</span> 172.18.0.1 84-2<span class="title">b</span>-2<span class="title">b</span>-43-<span class="title">d0</span>-50</span></div><div class="line"><span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">arp</span> -<span class="title">a</span></div><div class="line"></div><div class="line">接口: 192.168.25.1 --- 0<span class="title">x6</span></div><div class="line">  <span class="title">Internet</span> 地址         物理地址              类型</div><div class="line">  172.18.0.1            84-2<span class="title">b</span>-2<span class="title">b</span>-43-<span class="title">d0</span>-50     静态</div><div class="line">  192.168.25.7          00-0<span class="title">c</span>-29-06-99-<span class="title">f1</span>     动态</div><div class="line">  192.168.25.255        <span class="title">ff</span>-<span class="title">ff</span>-<span class="title">ff</span>-<span class="title">ff</span>-<span class="title">ff</span>-<span class="title">ff</span>     静态</div><div class="line">  224.0.0.2             01-00-5<span class="title">e</span>-00-00-02     静态</div><div class="line">  224.0.0.22            01-00-5<span class="title">e</span>-00-00-16     静态</div><div class="line">  224.0.0.100           01-00-5<span class="title">e</span>-00-00-64     静态</div><div class="line">  224.0.0.252           01-00-5<span class="title">e</span>-00-00-<span class="title">fc</span>     静态</div><div class="line">  224.0.1.60            01-00-5<span class="title">e</span>-00-01-3<span class="title">c</span>     静态</div><div class="line">  234.123.12.1          01-00-5<span class="title">e</span>-7<span class="title">b</span>-0<span class="title">c</span>-01     静态</div><div class="line">  239.192.152.143       01-00-5<span class="title">e</span>-40-98-8<span class="title">f</span>     静态</div><div class="line">  239.255.255.250       01-00-5<span class="title">e</span>-7<span class="title">f</span>-<span class="title">ff</span>-<span class="title">fa</span>     静态</div><div class="line"></div><div class="line">接口: 172.18.125.254 --- 0<span class="title">x8</span></div><div class="line">  <span class="title">Internet</span> 地址         物理地址              类型</div><div class="line">  172.18.0.1            84-2<span class="title">b</span>-2<span class="title">b</span>-43-<span class="title">d0</span>-50     动态</div><div class="line">  172.18.0.104          <span class="title">b8</span>-88-<span class="title">e3</span>-79-1<span class="title">b</span>-20     动态</div><div class="line">  172.18.3.10           <span class="title">ec</span>-55-<span class="title">f9</span>-<span class="title">c2</span>-08-7<span class="title">a</span>     动态</div></pre></td></tr></table></figure></p>
<p>可以看到，因为有多个网卡，这个要绑定的arp表项被绑定到了第一个显示的网卡上。而且我在网上也并没有找到<code>arp -s</code>指定网卡的配置过程。扑街！<br>删除添加错误的arp表项：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function">C:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">arp</span> -<span class="title">d</span> 172.18.0.1</span></div></pre></td></tr></table></figure></p>
<p>在网上找的使用其他的方法完美解决：<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function">C:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">netsh</span> <span class="title">i</span> <span class="title">i</span> <span class="title">show</span> <span class="title">in</span>   //查看网卡对应的<span class="title">Idx</span>值</span></div><div class="line"></div><div class="line"><span class="title">Idx</span>     <span class="title">Met</span>         <span class="title">MTU</span>          状态                名称</div><div class="line">---  ----------  ----------  ------------  ---------------------------</div><div class="line"> 15          25        1500  <span class="title">disconnected</span>  <span class="title">WLAN</span></div><div class="line">  8          25        1500  <span class="title">connected</span>     以太网</div><div class="line"> 12          25        1500  <span class="title">disconnected</span>  本地连接* 2</div><div class="line">  1          75  4294967295  <span class="title">connected</span>     <span class="title">Loopback</span> <span class="title">Pseudo</span>-<span class="title">Interface</span> 1</div><div class="line">  9          55        1500  <span class="title">connected</span>     本地连接* 13</div><div class="line">  6          35        1500  <span class="title">connected</span>     <span class="title">VMware</span> <span class="title">Network</span> <span class="title">Adapter</span> <span class="title">VMnet1</span></div><div class="line"> 14          35        1500  <span class="title">connected</span>     <span class="title">VMware</span> <span class="title">Network</span> <span class="title">Adapter</span> <span class="title">VMnet8</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">netsh</span> -<span class="title">c</span> "<span class="title">i</span> <span class="title">i</span>" <span class="title">add</span> <span class="title">ne</span> 8 172.18.0.1 84-2<span class="title">b</span>-2<span class="title">b</span>-43-<span class="title">d0</span>-50</div></pre></td></tr></table></figure></p>
<p>参数介绍：<br><code>netsh i i show in</code>为<code>netsh interface ipv4 show interfaces</code>的缩写.<br><code>netsh -c &#39;i i&#39; add ne Idx IP 对应MAC</code><br>查看arp表项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">C:\WINDOWS\system32&gt;arp -a</div><div class="line"></div><div class="line">接口: 172.18.125.254 --- 0x8</div><div class="line">  Internet 地址         物理地址              类型</div><div class="line">  172.18.0.1            84-2b-2b-43-d0-50     静态</div><div class="line">  172.18.252.89         68-f7-28-ae-6a-ab     动态</div><div class="line">  172.18.252.115        08-d4-0c-5b-e7-da     动态</div><div class="line">  172.18.255.255        ff-ff-ff-ff-ff-ff     静态</div><div class="line">  224.0.0.2             01-00-5e-00-00-02     静态</div><div class="line">  224.0.0.18            01-00-5e-00-00-12     静态</div><div class="line">  224.0.0.22            01-00-5e-00-00-16     静态</div><div class="line">  224.0.0.100           01-00-5e-00-00-64     静态</div><div class="line">  224.0.0.252           01-00-5e-00-00-fc     静态</div><div class="line">  224.0.1.60            01-00-5e-00-01-3c     静态</div><div class="line">  234.123.12.1          01-00-5e-7b-0c-01     静态</div><div class="line">  238.238.238.238       01-00-5e-6e-ee-ee     静态</div><div class="line">  239.192.152.143       01-00-5e-40-98-8f     静态</div><div class="line">  239.255.255.250       01-00-5e-7f-ff-fa     静态</div></pre></td></tr></table></figure></p>
<p>总算，成功添加了静态arp表项！其中还遇到了点其他问题，终极解决办法就是：<code>禁用所有的网络适配器，只保留要添加arp表项的网卡！</code>如果禁用网卡的话，使用<code>arp -s</code>添加应该也没问题了。  </p>
<p>后来，我还不满足，因为教室用的是<code>172.18.0.0/16</code>的B类网段，老师要求IP地址的第三位使用自己的学号设置静态IP，以避免冲突！如此一来，岂不是每个人固定了IP，只要知道学号就可以扫描对应的网段，查看某某某开了几台虚机、运行了什么服务了？  </p>
<p>坚决不！班里总共只有70+人，B类的大网段只用了三分之一的小子网，所有我就设置了一个<code>172.18.2xx.0/16</code>的网段。这样还不够！物理机的MAC地址是不是要改一下？改成什么更隐蔽更有个性呢？于是乎，我又把物理机网卡的MAC地址改成了使用VMware Warestation随机生成的一个MAC地址。  </p>
<p>然后，问题又来了！  </p>
<p>所有的虚拟机使用ping的时候，都显示类似ICMP重定向的结果…..<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]<span class="comment"># ping 172.18.0.1</span></div><div class="line">PING <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span> (<span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</div><div class="line">From <span class="number">172.18</span><span class="number">.222</span><span class="number">.254</span>: icmp_seq=<span class="number">1</span> Redirect Network(New nexthop: <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>)</div><div class="line"><span class="number">64</span> bytes <span class="keyword">from</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">64</span> time=<span class="number">1.77</span> ms</div><div class="line">From <span class="number">172.18</span><span class="number">.222</span><span class="number">.254</span>: icmp_seq=<span class="number">2</span> Redirect Network(New nexthop: <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>)</div><div class="line"><span class="number">64</span> bytes <span class="keyword">from</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>: icmp_seq=<span class="number">2</span> ttl=<span class="number">64</span> time=<span class="number">0.550</span> ms</div><div class="line">From <span class="number">172.18</span><span class="number">.222</span><span class="number">.254</span>: icmp_seq=<span class="number">3</span> Redirect Network(New nexthop: <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>)</div><div class="line"><span class="number">64</span> bytes <span class="keyword">from</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span>: icmp_seq=<span class="number">3</span> ttl=<span class="number">64</span> time=<span class="number">0.671</span> ms</div></pre></td></tr></table></figure></p>
<p>阿西吧！看到这个问题，我内心是崩溃的，我并没有意识到是修改了物理机的MAC地址造成的。我检查了路由表、重设了IP、检查了防火墙、SELinux，最后又百度谷歌，检查了内核的ICMP转发设置…..直到最后我又打开了第三台虚拟机的时候，发现之前好好的虚拟机现在也出现了这个问题，我终于把问题定位到了物理机上，然后又各种检查…..换了网段、改了IP，又改了MAC…  </p>
<p>改了MAC之后，终于ping网关不再显示类似ICMP重定向的结果了…..  </p>
<p>也终于，结束了这次苦心的折腾！夜里11点半了，视频没看，实验没敲。虽然问题解决了，但是并没有找到具体原因，因为我检查了所有运行的虚拟机MAC,并没有MAC地址冲突。这个时间——浪费的太不值得！<br>好好敲试验吧，别再瞎折腾了！不做死就不会死！苦笑ing…</p>
]]></content>
      
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS系列使用Tab命令补全]]></title>
      <url>/2017/08/21/CentOS%E7%B3%BB%E5%88%97%E4%BD%BF%E7%94%A8Tab%E5%91%BD%E4%BB%A4%E8%A1%A5%E5%85%A8/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>使用CentOS系列的时候，有的系统能够在命令行终端使用Tab补全命令或显示命令的后续参数，有的就不可以。这是因为有的系统是最小化安装，没有安装<code>bash-completion.noarch</code>软件包。  </p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><h5 id="CenOS-7系列可以直接使用yum安装"><a href="#CenOS-7系列可以直接使用yum安装" class="headerlink" title="CenOS 7系列可以直接使用yum安装"></a>CenOS 7系列可以直接使用yum安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y bash-completion</div></pre></td></tr></table></figure>
<h5 id="CenOS-6系列解决办法"><a href="#CenOS-6系列解决办法" class="headerlink" title="CenOS 6系列解决办法"></a>CenOS 6系列解决办法</h5><p>在CentOS 6系列中，这个软件存在EPEL源里，所有我们需要先配置一个可用的EPEL源，可参考<a href="http://blog.wangbinzhou.com/2017/08/05/yum%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA%E5%92%8Cyum%E6%BA%90%E9%85%8D%E7%BD%AE/">yum源配置方法</a>然后再使用yum安装,这里就不写详细步骤了；  </p>
<blockquote>
<p>注意: 配置完成之后，需要重新登陆后才能生效。 </p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux小技巧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7网卡命名方式详解及修改为传统eth格式]]></title>
      <url>/2017/08/20/CentOS7%E7%BD%91%E5%8D%A1%E5%91%BD%E5%90%8D%E6%96%B9%E5%BC%8F%E8%AF%A6%E8%A7%A3%E5%8F%8A%E4%BF%AE%E6%94%B9%E4%B8%BA%E4%BC%A0%E7%BB%9Feth%E6%A0%BC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>CentOS系统传统的网卡命名是使用以太网<code>eth[0,1,2,...]</code>和<code>wlan[0,1,2,...]</code>来命名的。但是到了CentOS 7系列，CentOS系统抛弃了传统的命名方式、采用了新的网卡命名机制来命名。新的命名机制避免了网卡名的冲突，但是也不给我们对系统网络的统一管理带来了不便，在这里我们详细介绍一下CentOS 7系列的网卡命名机制，以及修改回传统命名方式的方法。  </p>
<h4 id="网卡命名机制"><a href="#网卡命名机制" class="headerlink" title="网卡命名机制"></a>网卡命名机制</h4><p>CentOS 7系统对网络设备的命名方式：  </p>
<ol>
<li>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测则根据此索引进行命名，例如eno1；  </li>
<li>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，例如ens1；  </li>
<li>如果硬件接口的物理位置信息可用，则根据此信息进行命名，例如enp2s0；  </li>
<li>如果用户显式启用，也可根据MAC地址进行命名，enx2387a2387a1dc56；  </li>
<li>上述均可不用时，则使用传统的<code>eth</code>命名机制；  </li>
</ol>
<p>上述命名机制中，有的需要biosdevname程序的参与；  </p>
<h4 id="网卡名称组成格式："><a href="#网卡名称组成格式：" class="headerlink" title="网卡名称组成格式："></a>网卡名称组成格式：</h4><h5 id="网卡名称的前两个字符"><a href="#网卡名称的前两个字符" class="headerlink" title="网卡名称的前两个字符"></a>网卡名称的前两个字符</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">en：ethernet    以太网</div><div class="line">wl: wlan        无线局域网</div><div class="line">ww: wwan        无线广域网</div></pre></td></tr></table></figure>
<h5 id="网卡名称的第三个字符根据设备类型选择："><a href="#网卡名称的第三个字符根据设备类型选择：" class="headerlink" title="网卡名称的第三个字符根据设备类型选择："></a>网卡名称的第三个字符根据设备类型选择：</h5><p><code>o&lt;index&gt;</code>: 集成设备的设备索引号；<br><code>s&lt;slot&gt;</code>: 扩展插槽的索引号；<br><code>x&lt;MAC&gt;</code>: 基于MAC地址的命名；<br><code>p&lt;bus&gt;s&lt;slot&gt;</code>: enp2s1  </p>
<h4 id="网卡设备的命名过程："><a href="#网卡设备的命名过程：" class="headerlink" title="网卡设备的命名过程："></a>网卡设备的命名过程：</h4><h5 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h5><p><code>udev</code>，辅助工具程序<code>/lib/udev/rename_device</code>,<code>/usr/lib/udev/rules.d/60-net.rules</code>  </p>
<h5 id="第二歩："><a href="#第二歩：" class="headerlink" title="第二歩："></a>第二歩：</h5><p><code>biosdevname</code> 会根据<code>/usr/lib/udev/rules.d/71-biosdevname.rules</code>  </p>
<h5 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h5><p>通过检测网络接口设备，根据<code>/usr/lib/udev/rules.d/75-net-description</code><br>ID_NET_NAME_ONBOARD, ID_NET_NAME_SLOT, ID_NET_NAME_PATH  </p>
<h4 id="修改回传统的命名方式："><a href="#修改回传统的命名方式：" class="headerlink" title="修改回传统的命名方式："></a>修改回传统的命名方式：</h4><p>配置前查看网卡命名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ifconfig</span></div><div class="line">ens32: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class="line">        inet 172.18.234.200  netmask 255.255.0.0  broadcast 172.18.255.255</div><div class="line">        inet6 fe80::20c:29ff:fe06:99e7  prefixlen 64  scopeid 0x20&lt;link&gt;</div><div class="line">        ether 00:0c:29:06:99:e7  txqueuelen 1000  (Ethernet)</div><div class="line">        RX packets 2875  bytes 237906 (232.3 KiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 12  bytes 888 (888.0 B)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class="line">        inet 127.0.0.1  netmask 255.0.0.0</div><div class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</div><div class="line">        loop  txqueuelen 1  (Local Loopback)</div><div class="line">        RX packets 0  bytes 0 (0.0 B)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 0  bytes 0 (0.0 B)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div></pre></td></tr></table></figure></p>
<h5 id="1-编辑-etc-default-grub配置文件"><a href="#1-编辑-etc-default-grub配置文件" class="headerlink" title="(1) 编辑/etc/default/grub配置文件"></a>(1) 编辑/etc/default/grub配置文件</h5><p>找到<code>GRUB_CMDLINE_LINUX</code>修改如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vim /etc/default/grub</div><div class="line">GRUB_TIMEOUT=5</div><div class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></div><div class="line">GRUB_DEFAULT=saved</div><div class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></div><div class="line">GRUB_TERMINAL_OUTPUT=<span class="string">"console"</span></div><div class="line">GRUB_COMLINE_LINUX=<span class="string">"net.ifnames=0 rhgb quiet"</span></div><div class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></div></pre></td></tr></table></figure></p>
<h5 id="2-为grub2生成其配置文件"><a href="#2-为grub2生成其配置文件" class="headerlink" title="(2) 为grub2生成其配置文件"></a>(2) 为grub2生成其配置文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub2-mkconfig -o /etc/grub2.cfg</div></pre></td></tr></table></figure>
<h5 id="3-重启系统"><a href="#3-重启系统" class="headerlink" title="(3) 重启系统"></a>(3) 重启系统</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reboot</div></pre></td></tr></table></figure>
<p>检查是否网卡名称修改为eth的传统命名：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#ifconfig</span></div><div class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</div><div class="line">        inet 172.18.251.228  netmask 255.255.0.0  broadcast 172.18.255.255</div><div class="line">        inet6 fe80::4463:d483:3b87:1c36  prefixlen 64  scopeid 0x20&lt;link&gt;</div><div class="line">        ether 00:0c:29:06:99:e7  txqueuelen 1000  (Ethernet)</div><div class="line">        RX packets 42  bytes 3400 (3.3 KiB)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 13  bytes 1490 (1.4 KiB)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div><div class="line"></div><div class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</div><div class="line">        inet 127.0.0.1  netmask 255.0.0.0</div><div class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</div><div class="line">        loop  txqueuelen 1  (Local Loopback)</div><div class="line">        RX packets 0  bytes 0 (0.0 B)</div><div class="line">        RX errors 0  dropped 0  overruns 0  frame 0</div><div class="line">        TX packets 0  bytes 0 (0.0 B)</div><div class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</div></pre></td></tr></table></figure></p>
<h5 id="4-删除原来的网络配置文件ens32后创建新配置文件eth0，完成后重启网络服务即可"><a href="#4-删除原来的网络配置文件ens32后创建新配置文件eth0，完成后重启网络服务即可" class="headerlink" title="(4) 删除原来的网络配置文件ens32后创建新配置文件eth0，完成后重启网络服务即可"></a>(4) 删除原来的网络配置文件ens32后创建新配置文件eth0，完成后重启网络服务即可</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@CentOS7 ~]<span class="comment">#cd /etc/sysconfig/network-scripts/</span></div><div class="line">[root@CentOS7 /etc/sysconfig/network-scripts]<span class="comment">#mv ifcfg-ens32 /tmp/</span></div><div class="line">[root@CentOS7 /etc/sysconfig/network-scripts]<span class="comment">#vim ifcfg-eth0</span></div><div class="line">TYPE=<span class="string">"Ethernet"</span></div><div class="line">BOOTPROTO=<span class="string">"static"</span></div><div class="line">IPADDR=<span class="string">"172.18.1.200"</span></div><div class="line">PREFIX=16</div><div class="line">GATEWAY=172.18.0.1</div><div class="line">DNS1=172.18.0.1</div><div class="line">DNS2=114.114.114.114</div><div class="line">DEFROUTE=<span class="string">"yes"</span></div><div class="line">PEERDNS=<span class="string">"yes"</span></div><div class="line">PEERROUTES=<span class="string">"yes"</span></div><div class="line">IPV4_FAILURE_FATAL=<span class="string">"no"</span></div><div class="line">NAME=<span class="string">"eth0"</span></div><div class="line">UUID=<span class="string">"4c86fd71-0281-4d10-a331-6ff63b387ec9"</span></div><div class="line">DEVICE=<span class="string">"eth0"</span></div><div class="line">ONBOOT=<span class="string">"yes"</span></div><div class="line">[root@CentOS7 ~]<span class="comment">#systemctl restart network</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Note: ifcfg-ens32 文件最好删除掉，否则重启 network 服务时会报错。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[内网ssh连接速度很慢的解决方案]]></title>
      <url>/2017/08/10/%E5%86%85%E7%BD%91ssh%E8%BF%9E%E6%8E%A5%E9%80%9F%E5%BA%A6%E5%BE%88%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>我在自己电脑上使用VMware Warkstation装了几台CentOS虚拟机做实验，CentOS虚拟机装了两块网卡分别作为内网卡和外网卡。内网卡使用<code>仅主机模式</code>作为管理口让宿主机来连接。在保证能够正常ping通、而且延时都小于1ms的情况下，宿主机使用SecureCRT通过ssh连接虚拟机的时候，个别主机出现连接时间过长的问题，有一个虚拟机竟然需要等待10-30S！  </p>
<p>人生苦短，时间宝贵，解决这个问题刻不容缓！  </p>
<h4 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h4><p>通过其他主机通过ssh连接问题主机：<br>使用<code>ssh</code>命令，通过<code>-v</code>参数来显示连接的详细过程：<br><code>v</code>最多能能加三个，加的越多，显示的越详细；<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">[root@MyCentOS6 ~]# ssh -v 192.168.25.7</div><div class="line">OpenSSH_5.3p1, OpenSSL 1.0.1e-fips 11 Feb 2013</div><div class="line">debug1: Reading configuration data /etc/ssh/ssh_config</div><div class="line">debug1: Applying options for *</div><div class="line">debug1: Connecting to 192.168.25.7 [192.168.25.7] port 22.</div><div class="line">debug1: Connection established.</div><div class="line">debug1: permanently_set_uid: 0/0</div><div class="line">debug1: identity file /root/.ssh/identity type -1</div><div class="line">debug1: identity file /root/.ssh/identity-cert type -1</div><div class="line">debug1: identity file /root/.ssh/id_rsa type -1</div><div class="line">debug1: identity file /root/.ssh/id_rsa-cert type -1</div><div class="line">debug1: identity file /root/.ssh/id_dsa type -1</div><div class="line">debug1: identity file /root/.ssh/id_dsa-cert type -1</div><div class="line">debug1: identity file /root/.ssh/id_ecdsa type -1</div><div class="line">debug1: identity file /root/.ssh/id_ecdsa-cert type -1</div><div class="line">debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1</div><div class="line">debug1: match: OpenSSH_6.6.1 pat OpenSSH*</div><div class="line">debug1: Enabling compatibility mode for protocol 2.0</div><div class="line">debug1: Local version string SSH-2.0-OpenSSH_5.3</div><div class="line">debug1: SSH2_MSG_KEXINIT sent</div><div class="line">debug1: SSH2_MSG_KEXINIT received</div><div class="line">debug1: kex: server-&gt;client aes128-ctr hmac-sha1 none</div><div class="line">debug1: kex: client-&gt;server aes128-ctr hmac-sha1 none</div><div class="line">debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;2048&lt;8192) sent</div><div class="line">debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP</div><div class="line">debug1: SSH2_MSG_KEX_DH_GEX_INIT sent</div><div class="line">debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY</div><div class="line">debug1: Host '192.168.25.7' is known and matches the RSA host key.</div><div class="line">debug1: Found key in /root/.ssh/known_hosts:1</div><div class="line">debug1: ssh_rsa_verify: signature correct</div><div class="line">debug1: SSH2_MSG_NEWKEYS sent</div><div class="line">debug1: expecting SSH2_MSG_NEWKEYS</div><div class="line">debug1: SSH2_MSG_NEWKEYS received</div><div class="line">debug1: SSH2_MSG_SERVICE_REQUEST sent</div><div class="line">debug1: SSH2_MSG_SERVICE_ACCEPT received</div><div class="line">debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password</div><div class="line">debug1: Next authentication method: gssapi-keyex</div><div class="line">debug1: No valid Key exchange context</div><div class="line">debug1: Next authentication method: gssapi-with-mic</div><div class="line">debug1: Unspecified GSS failure.  Minor code may provide more information</div><div class="line">Cannot determine realm for numeric host address</div><div class="line"></div><div class="line">debug1: Unspecified GSS failure.  Minor code may provide more information</div><div class="line">Cannot determine realm for numeric host address</div><div class="line"></div><div class="line">debug1: Next authentication method: publickey</div><div class="line">debug1: Trying private key: /root/.ssh/identity</div><div class="line">debug1: Trying private key: /root/.ssh/id_rsa</div><div class="line">debug1: Trying private key: /root/.ssh/id_dsa</div><div class="line">debug1: Trying private key: /root/.ssh/id_ecdsa</div><div class="line">debug1: Next authentication method: password</div><div class="line">root@192.168.25.7's password: </div><div class="line">debug1: Authentication succeeded (password).</div><div class="line">debug1: channel 0: new [client-session]</div><div class="line">debug1: Requesting no-more-sessions@openssh.com</div><div class="line">debug1: Entering interactive session.</div><div class="line">debug1: Sending environment.</div><div class="line">debug1: Sending env LANG = en_US.UTF-8</div><div class="line">Last login: Thu Aug 10 15:53:06 2017 from gateway</div><div class="line">[root@CentOS7 ~]#</div></pre></td></tr></table></figure></p>
<p>可以看到如下的错误信息：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">debug1: Next authentication method: gssapi-<span class="keyword">with</span>-mic</div><div class="line">debug1: An invalid name was supplied</div><div class="line">Cannot determine realm <span class="keyword">for</span> numeric host address</div></pre></td></tr></table></figure></p>
<p>从<code>gssapi-with-mic</code>这一行开始，就开始耗费时间了。  </p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>修改<code>/etc/ssh/sshd_config</code>文件如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vim /etc/ssh/sshd_config</div><div class="line">UseDNS no</div><div class="line">GSSAPIAuthentication no</div></pre></td></tr></table></figure></p>
<p>找到上面的两个字段并修改，然后重启sshd服务：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart sshd</div></pre></td></tr></table></figure></p>
<p>参数说明：<br><code>UseDNS</code>:指定 是否应该对远程主机名进行反向解析，以检查此主机名是否与其IP地址真实对应。默认值为<code>yes</code>,改为<code>no</code>。<br><code>GSSAPIAuthentication</code>:是否允许使用基于 GSSAPI 的用户认证。默认值为<code>yes</code>,改为<code>no</code>。  </p>
<p>重启sshd服务后，再连接，应该就很快了！</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sshd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yum仓库搭建和yum源配置]]></title>
      <url>/2017/08/05/yum%E4%BB%93%E5%BA%93%E6%90%AD%E5%BB%BA%E5%92%8Cyum%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>yum(Yellowdog Update Modifier)是rpm的前端程序，能够很好的解决软件包的相关依赖性。在日常工作中，我们可以使用安装光盘作为yum源，也可以使用阿里、网易或者搜狐提供的公共yum源。<br>在公司的网络环境中如果有很多台Centos服务器，我们就很有必要自己搭建一个yum仓库来统一管理和安装软件。这样既保证了软件包的来源合法性，又能够节省出口带宽、提高效率。  </p>
<h4 id="搭建yum仓库"><a href="#搭建yum仓库" class="headerlink" title="搭建yum仓库"></a>搭建yum仓库</h4><p>yum仓库有四种搭建方式，分别是：<code>http://</code>、<code>https://</code>、<code>ftp://</code>和<code>file://</code>；<br>在这里，我们分别使用<code>ftp://</code>和<code>http://</code>这两种方式进行仓库的搭建；  </p>
<h5 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h5><ul>
<li>yum仓库系统环境：CentOS 7.3  </li>
<li>http服务软件：httpd-2.4.6-45.el7.centos.4.x86_64  </li>
<li>ftp服务软件：vsftpd-3.0.2-21.el7.x86_64  </li>
<li>为避免干扰，临时关闭了SElinux和Firewalld；<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#setenforce 0       //临时关闭SElinux</span></div><div class="line"><span class="comment">#getenforce         //检查SElinux状态</span></div><div class="line"> Permissive			//打印警告而不是强制执行。</div><div class="line"><span class="comment">#systemctl stop firewalld   //关闭Firewalld防火墙；</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="使用ftp方式搭建yum仓库"><a href="#使用ftp方式搭建yum仓库" class="headerlink" title="使用ftp方式搭建yum仓库"></a>使用ftp方式搭建yum仓库</h5><p>yum安装vsftpd软件：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum install -y vsftpd</span></div><div class="line"><span class="comment">#systemctl start vsftpd     //启动vsftpd服务；</span></div><div class="line"><span class="comment">#systemctl enable vsftpd    //设置vsftpd开机自启；</span></div></pre></td></tr></table></figure></p>
<p>查看vsftpd安装后的相关目录：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ql vsftpd</span></div><div class="line">/etc/logrotate.d/vsftpd</div><div class="line">/etc/pam.d/vsftpd</div><div class="line">/etc/vsftpd/ftpusers</div><div class="line">/etc/vsftpd/user_list</div><div class="line">/etc/vsftpd/vsftpd.conf     //主配置文件</div><div class="line">    ...省略若干...</div><div class="line">/etc/vsftpd/vsftpd_conf_migrate.sh</div><div class="line">/usr/sbin/vsftpd</div><div class="line">/var/ftp/pub    //ftp文件共享目录；</div></pre></td></tr></table></figure></p>
<p>在这里，我们将CentOS安装光盘里面的软件包拷贝到yum仓库目录下，如有条件，也可以从公共的镜像站点下载相关软件包；<br><strong>yum仓库主要文件：</strong>  </p>
<ul>
<li>Packages&emsp;&emsp;//软件包目录</li>
<li>repodata&emsp;&emsp;//存储众多rpm包和包相关元数据文件，yum客户端通过查找该文件来判断yum仓库内是否有自己需要的rpm包；  </li>
<li>RPM-GPG-KEY-CentOS-7&emsp;&emsp;//软件包来源合法性校验KEY</li>
</ul>
<blockquote>
<p>Note: 这三个文件是yum仓库的必备文件，安装光盘里面的其他文件可拷可不拷；  </p>
</blockquote>
<p>在FTP目录下创建相关版本的目录：<br>创建一个系统主目录“centos”，并在目录下创建版本目录“6”和“7”：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mkdir -pv /var/ftp/put/centos/&#123;6,7&#125;</span></div></pre></td></tr></table></figure></p>
<p>分别挂载CentOS6、7系列的光盘，并将光盘里的内容拷贝到FTP对应的目录下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#mount /dev/sr0 /media/cdrom</span></div><div class="line"><span class="comment">#cp -r /media/cdrom/* /var/ftp/pub/centos/6</span></div></pre></td></tr></table></figure></p>
<p>测试：在浏览器里面输入ftp://yum仓库IP；<br>如果能够正常访问并看到我们从光盘里面拷贝的软件包，就说明yum仓库搭建成功；  </p>
<h5 id="使用http方式搭建yum仓库"><a href="#使用http方式搭建yum仓库" class="headerlink" title="使用http方式搭建yum仓库"></a>使用http方式搭建yum仓库</h5><p>安装httpd软件：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum install -y httpd</span></div><div class="line"><span class="comment">#systemctl start httpd      //启动httpd软件；</span></div><div class="line"><span class="comment">#systemctl enable httpd     //设置httpd开机自启；</span></div></pre></td></tr></table></figure></p>
<p>查看httpd软件安装生成的相关配置目录：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#rpm -ql httpd</span></div><div class="line">/etc/httpd</div><div class="line">/etc/httpd/conf</div><div class="line">...省略若干...</div><div class="line">/usr/sbin/apachectl</div><div class="line">/usr/sbin/fcgistarter</div><div class="line">/usr/sbin/htcacheclean</div><div class="line">/usr/sbin/httpd</div><div class="line">/usr/sbin/rotatelogs</div><div class="line">/usr/sbin/suexec</div><div class="line">/var/cache/httpd</div><div class="line">/var/cache/httpd/proxy</div><div class="line">/var/lib/dav</div><div class="line">/var/log/httpd</div><div class="line">/var/www/cgi-bin</div><div class="line">/var/www/html       //项目存放目录</div></pre></td></tr></table></figure></p>
<p>在/var/www/html下创建项目目录并将系统安装盘内容拷贝到相应目录下；（因为与FTP操作相同，在此省略相应操作）<br>下载<code>createrepo</code>，用来生成<code>repodata</code>文件。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">createrepo /var/www/html/centos/</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Note:如果使用系统安装光盘里面的软件包，并且不再往里面添加其他rpm包的话，可以直接使用系统盘自带的<code>repodata</code>文件；如果需要往里面添加新的rpm包组，或者自己搭建第三方yum仓库的话，就需要用<code>createrepo</code>软件生成<code>repodata</code>文件，否则yum客户端就找不到新添加的rpm包；<br>至此，我们的yum仓库已经搭建好了。接下来我们配置客户端的yum源。  </p>
</blockquote>
<h4 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>yum客户端配置文件有两个：<br>1、为所有仓库提供公共配置：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/yum.conf</div></pre></td></tr></table></figure></p>
<p>2、为仓库的指向提供配置：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/yum.repos.d/*.repo</div></pre></td></tr></table></figure></p>
<p>yum仓库指向的主要项有：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[repoID]</div><div class="line">name=<span class="string">"yum仓库名字"</span></div><div class="line">baseurl=<span class="string">"url指向yum仓库的系统相同版本目录下的repodata父目录即可"</span></div><div class="line">gpgcheck=&#123;<span class="number">1</span>|<span class="number">0</span>&#125;  //是否启用软件包来源合法性校验；</div><div class="line">gpgkey=<span class="string">"URL"</span>    //若启用校验，此处填写yum仓库的GPGKEY的url；</div><div class="line">enabled=&#123;<span class="number">0</span>|<span class="number">1</span>&#125;   //是否启用该yum源；<span class="number">0</span>为禁用，<span class="number">1</span>是启用；</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Note：使用yum的时候会到<code>/etc/yum.repos.d/</code>目录下查找<code>*.repo</code>文件，所有我们把系统的默认文件删除或移动到其他目录下，自己新建一个<code>*.repo</code>文件。  </p>
</blockquote>
<h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><p>将yum源修改为阿里云的yum源：<br>先把系统默认的yum源修改为.bak后缀作为备份：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#find /etc/yum.repos.d/ -name "*.repo" -exec mv &#123;&#125; &#123;&#125;.bak \;</span></div></pre></td></tr></table></figure></p>
<p>配置阿里云的yum源：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#vim /etc/yum.repos.d/centos.repo</span></div><div class="line">[aliyun]</div><div class="line">name=aliyun_yum</div><div class="line">baseurl=https://mirrors.aliyun.com/centos/$releasever/os/$basearch/</div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">gpgkey=https://mirrors.aliyun.com/centos/$releasever/os/$basearch/RPM-GPG-KEY-CentOS<span class="number">-7</span></div><div class="line">enabled=<span class="number">1</span></div></pre></td></tr></table></figure></p>
<p>验证修改是否已切换为阿里云的yum源：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum repolist all</span></div><div class="line">Loaded plugins: fastestmirror</div><div class="line">aliyun                                                          					| <span class="number">3.6</span> kB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>     </div><div class="line">(<span class="number">1</span>/<span class="number">2</span>): aliyun/primary_db                                        					| <span class="number">5.6</span> MB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">06</span>     </div><div class="line">(<span class="number">2</span>/<span class="number">2</span>): aliyun/group_gz                                         						| <span class="number">155</span> kB  <span class="number">00</span>:<span class="number">00</span>:<span class="number">15</span>     </div><div class="line">Loading mirror speeds <span class="keyword">from</span> cached hostfile</div><div class="line">repo id                                 	repo name                                   status</div><div class="line">aliyun                                  	aliyun_yum                                  <span class="number">9</span>,<span class="number">363</span></div><div class="line">repolist: <span class="number">9</span>,<span class="number">363</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> yum源和yum仓库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结：10、文件查找之locate和find]]></title>
      <url>/2017/08/01/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%EF%BC%9A10%E3%80%81%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B9%8Blocate%E5%92%8Cfind/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;&emsp;在日常生活中，有时候我们需要在Linux系统上查找符合特定条件的文件，可以通过命令<code>locate</code>和<code>find</code>来查找。<br><strong>区别：</strong><br><code>locate</code>: 非实时查找，每天会定时更新生成一个数据库，通过数据库查找；<br><code>find</code>: 实时查找；  </p>
<h4 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h4><p>&emsp;&emsp;<code>locate</code>命令依赖于系统系统在较为空闲时自动构建（周期性任务）的一个文件索引数据库<code>/var/lib/mlocate/mlocate.db</code>进行查找文件。索引构建过程需要遍历整个根文件系统，极消耗资源。管理员可以通过命令<code>updatedb</code>手动更新数据库。<br><strong>工作特点：</strong>  </p>
<ul>
<li>查找速度快；  </li>
<li>模糊查找；</li>
<li>非实时查找；</li>
<li>搜索的是文件的全路径，不仅仅是文件名；</li>
<li>可能只搜索用户具备读取和执行权限的目录；<br><strong>用法：</strong>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">locate [OPTION]... PATTERN...</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>常用参数：</strong><br><code>-i</code>: 不区分大小写的搜索；<br><code>-n N</code>: 只列举前N个匹配项目；<br><code>-r</code>: 使用正则表达式搜索；<br><strong>示例：</strong><br><code>locate conf</code>: 搜索名称或路径中带有“conf”的文件；<br><code>locate -r &#39;\.conf$&#39;</code>: 使用正则表达式来搜索以“.conf”结尾的文件；  </p>
<h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><p>&emsp;&emsp;实时查找工具，通过遍历指定路径完成文件查找；  </p>
<h5 id="工作特点"><a href="#工作特点" class="headerlink" title="工作特点"></a>工作特点</h5><ul>
<li>查找速度略慢；  </li>
<li>精确查找；  </li>
<li>实时查找；  </li>
<li>可能只搜素用户具备读取和执行权限的目录；  </li>
</ul>
<h5 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find [OPTIOON]...[查找路径] [查找条件] [处理动作]</div></pre></td></tr></table></figure>
<p>查找路径：指定具体目标路径；默认为当前目录；<br>查找条件：指定的查找标准，可以是文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所有文件；<br>处理动作：对符合条件的文件做操作，默认输出至屏幕；  </p>
<h6 id="查找条件："><a href="#查找条件：" class="headerlink" title="查找条件："></a>查找条件：</h6><p>指定搜索层级：<br><code>-maxdepth level</code>：最大搜索目录深度，指定目录为1级；<br><code>-mindepth level</code>：最小搜索目录深度；<br>根据文件名和inode查找：<br><code>-name &quot;文件名称&quot;</code>: 支持使用glob:<code>*,?,[],[^]</code>;<br><code>-iname &quot;文件名称&quot;</code>：不区分字母大小写；<br><code>inum n</code>: 按inode好查找；<br><code>-samefile name</code>: 相同inode号的文件；<br><code>-links n</code>: 链接数为n的文件；<br><code>-regex &quot;PATTERN&quot;</code>: 以PATTERN匹配整个文件路径字符串，而不仅仅是文件名称；<br>根据属主、属组查找：<br><code>-user USERNAME</code>:查找属主为指定用户（UID）的文件；<br><code>-group GRPNAME</code>:查找属组为指定组（GID）的文件；<br><code>uid UserID</code>:查找属主为指定的UID号的文件；<br><code>gid GroupID</code>:查找属组为指定的GID号的文件；<br><code>-nouser</code>:查找没有属主的文件；<br><code>-nogroup</code>:  查找没有属组的文件；<br>根据文件类型查找：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-<span class="built_in">type</span> TYPE:  </div><div class="line">            f: 普通文件</div><div class="line">            d: 目录文件</div><div class="line">            l: 符号链接文件</div><div class="line">            s: 套接字文件</div><div class="line">            b：块设备文件</div><div class="line">            c: 字符设备文件</div><div class="line">            p: 管道文件</div></pre></td></tr></table></figure></p>
<p>组合条件：<br>&emsp;&emsp;&emsp;&emsp;与：<code>-a</code><br>&emsp;&emsp;&emsp;&emsp;或：<code>-o</code><br>&emsp;&emsp;&emsp;&emsp;非：<code>-not,!</code><br>德·摩根定律：<br>&emsp;&emsp;&emsp;&emsp;&emsp;<code>(非 A) 或 (非 B) = 非(A 且 B)</code><br>&emsp;&emsp;&emsp;&emsp;&emsp;<code>(非 A) 且 (非 B) = 非(A 或 B)</code><br>&emsp;&emsp;示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">!A -a !B = !(A - oB)</div><div class="line">!A -O !B = !(A -a B)</div></pre></td></tr></table></figure></p>
<p>find示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">find -name snow.png     //搜索名为snow.png的文件</div><div class="line">find -iname snow.png    //不区分大小写地搜索名为snow.png、Snow.png、SNOW.PNG等等的文件</div><div class="line">find / -name <span class="string">"*.txt"</span>    //搜索/目录下.txt后缀的文件</div><div class="line">find /var -name <span class="string">"*log*"</span>     //搜索名称包含<span class="built_in">log</span>字符的文件</div><div class="line">find -user joe -group joe   //搜索被用户joe以及群组joe所拥有的文件</div><div class="line">find -user joe -not -group joe</div><div class="line">find -user joe -o -user jane</div><div class="line">find -not \( -user joe -o -user jane \)</div><div class="line">find / -user joe -o -uid 500</div></pre></td></tr></table></figure></p>
<p>&emsp;找出/tmp目录下，属主不是root，且文件名不以f开头的文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">find /tmp \( -not -user root -a -not -name <span class="string">'f*'</span> \) -ls</div><div class="line">find /tmp -not \( -user root -o -name <span class="string">'f*'</span> \) -ls</div></pre></td></tr></table></figure></p>
<p>&emsp;排除目录：<br>&emsp;&emsp;<em>示例：查找/etc/下，除/etc/sane.d目录的其他所有.conf后缀的文件</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">find /etc -path <span class="string">'/etc/sane.d'</span> -a -prune -o -name <span class="string">"*.conf"</span></div><div class="line">find /etc \(-path <span class="string">'/etc/sane.d'</span> -o -path <span class="string">'/etc/fonts'</span> \) -a prune -o name <span class="string">"*.conf"</span></div></pre></td></tr></table></figure></p>
<p>根据文件大小来查找：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-size [+|-]<span class="comment">#UNIT    常用单位:k,M,G,c(byte)</span></div><div class="line"><span class="comment">#UNIT: (#-1,#]</span></div><div class="line">    如： 6k 表示（5k,6k]</div><div class="line">-<span class="comment">#UNIT: [0,#-1]</span></div><div class="line">    如： -6k 表示[0,5k]</div><div class="line">+<span class="comment">#UNIT： (#,∞)</span></div><div class="line">    如： +6k 表示(6k,∞)</div></pre></td></tr></table></figure></p>
<p>根据时间戳：<br>&emsp;<em>以“天”为单位：</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-atime [+|-]<span class="comment">#,</span></div><div class="line">	<span class="comment">#: [#,#+1)</span></div><div class="line">	+<span class="comment">#: [#+1,∞]</span></div><div class="line">    -<span class="comment">#: [0,#)</span></div><div class="line">    -mtime</div><div class="line">    -ctime</div></pre></td></tr></table></figure></p>
<p>&emsp;<em>以“分钟”为单位:</em><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-amin</div><div class="line">-mmin</div><div class="line">-cmin</div></pre></td></tr></table></figure></p>
<p>根据权限查找：<br><code>-perm [/|-]MODE</code><br>&emsp;<code>MODE</code>: 精确权限匹配<br>&emsp;<code>/MODE</code>：任何一类(u,g,o)对象的权限中只要能一位匹配即可，或关系， + 从centos7开始淘汰<br>&emsp;<code>-MODE</code>：每一类对象都必须同时拥有指定权限，与关系0 表示不关注  </p>
<blockquote>
<p>Note:<br>&emsp;&emsp;&emsp;find -perm 755 会匹配权限模式恰好是755的文件<br>&emsp;&emsp;&emsp;只要当任意人有写权限时， find -perm +222就会匹配<br>&emsp;&emsp;&emsp;只有当每个人都有写权限时， find -perm -222才会匹配<br>&emsp;&emsp;&emsp;只有当其它人（other）有写权限时， find -perm -002才会匹配</p>
</blockquote>
<h6 id="处理动作："><a href="#处理动作：" class="headerlink" title="处理动作："></a>处理动作：</h6><p><code>-print</code>：默认的处理动作，显示至屏幕<br><code>-ls</code>：类似于对查找到的文件执行“ls -l”命令<br><code>-delete</code>：删除查找到的文件<br><code>-fls file</code>：查找到的所有文件的长格式信息保存至指定文件中<br><code>-ok COMMAND {} \;</code>: 对查找到的每个文件执行由COMMAND指定的命令，对于每个文件执行命令之前，都会交互式要求用户确认<br><code>-exec COMMAND {} \;</code> 对查找到的每个文件执行由COMMAND指定的命令<br><code>{}</code>: 用于引用查找到的文件名称自身find传递查找到的文件至后面指定的命令时，查找到所有符合条件的文件一次性传递给后面的命令  </p>
<h6 id="参数替换xargs："><a href="#参数替换xargs：" class="headerlink" title="参数替换xargs："></a>参数替换xargs：</h6><p>由于很多命令不支持管道|来传递参数，而日常工作中有这个必要，所以就有了xargs命令。xargs用于产生某个命令的参数， xargs 可以读入 stdin的数据，并且以空格符或回车符将 stdin 的数据分隔成为arguments。  </p>
<blockquote>
<p>注意：文件名或者是其他意义的名词内含有空格符的情况有些命令不能接受过多参数，命令执行可能会失败， xargs可以解决.  </p>
</blockquote>
<p>&emsp;示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ls f* |xargs rm</div><div class="line">find /sbin -perm +700 |ls -l 这个命令是错误的</div><div class="line">find /sbin -perm +7000 | xargs ls –l</div><div class="line">find和xargs格式： find | xargs COMMAND</div></pre></td></tr></table></figure></p>
<h5 id="find示例："><a href="#find示例：" class="headerlink" title="find示例："></a>find示例：</h5><p>备份配置文件，添加.orig这个扩展名:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name “*.conf” -<span class="keyword">exec</span> cp &#123;&#125; &#123;&#125;.orig \;</div></pre></td></tr></table></figure></p>
<p>提示删除存在时间超过３天以上的joe的临时文件:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /tmp -ctime +<span class="number">3</span> -user joe -ok rm &#123;&#125; \;</div></pre></td></tr></table></figure></p>
<p>提示删除存在时间超过３天以上的joe的临时文件:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find ~ -perm <span class="number">-002</span> -<span class="keyword">exec</span> chmod o-w &#123;&#125; \;</div></pre></td></tr></table></figure></p>
<p>搜索/data目录下权限为644、后缀为“.sh”的普通文件后，把权限修改为755；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /data –type f -perm <span class="number">644</span> -name “*.sh” –<span class="keyword">exec</span> chmod <span class="number">755</span> &#123;&#125; \;</div></pre></td></tr></table></figure></p>
<p>搜索/home下的目录文件，并列表查看：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /home –type d -ls</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Squid+Stunnel代理上网]]></title>
      <url>/2017/07/27/%E4%BD%BF%E7%94%A8Squid-Stunnel%E4%BB%A3%E7%90%86%E4%B8%8A%E7%BD%91/</url>
      <content type="html"><![CDATA[<h5 id="一、简介："><a href="#一、简介：" class="headerlink" title="一、简介："></a><strong>一、简介：</strong></h5><p>&emsp;&emsp;作为一个IT从业者，经常需要到Google上面去查找一些技术相关的资料。但是由于……(此处省略若干字)，我们无法访问谷歌。因为上家单位属于互联网公司的缘故，我接触到了使用Squid + Stunnel科学上网的方式。<br>&emsp;&emsp;关于下面的配置步骤，各位看官如果发现有错误或需要优化的地方，欢迎指正和发表建议！新手上路，请多多关照！</p>
<h5 id="二、安装环境及原理："><a href="#二、安装环境及原理：" class="headerlink" title="二、安装环境及原理："></a><strong>二、安装环境及原理：</strong></h5><p>&emsp;&emsp;<strong>服务端：</strong>阿里云香港区ECS主机（CentOS 7.3.1611）一台；<br>&emsp;&emsp;<strong>软件：</strong>squid-3.5.20-2.el7_3.3.x86_64&emsp;stunnel-4.56-6.el7.x86_64<br>&emsp;&emsp;<strong>客户端：</strong>stunnel-5.39-win32-installer.exe&emsp;&amp;&emsp;Proxy SwitchyOmega（Chrome扩展程序）<br>&emsp;&emsp;<strong>原理：</strong>当客户端访问谷歌时,Stunnel的客户端通过和服务端建立起加密连接，由Squid代理用户去请求谷歌网站并把请求结果通过Stunnel的加密隧道返回给客户端；</p>
<h5 id="三、服务端配置："><a href="#三、服务端配置：" class="headerlink" title="三、服务端配置："></a><strong>三、服务端配置：</strong></h5><h6 id="emsp-1、服务端安装配置Squid："><a href="#emsp-1、服务端安装配置Squid：" class="headerlink" title="&emsp;1、服务端安装配置Squid："></a>&emsp;1、服务端安装配置Squid：</h6> <figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum install -y squid                   //yum安装Squid</span></div><div class="line"><span class="comment">#vim /etc/squid/squid.conf              //修改配置文件</span></div><div class="line">    <span class="comment"># And finally deny all other access to this proxy</span></div><div class="line">    <span class="comment">#http_access deny all               //注释掉该行</span></div><div class="line">    http_access allow all               //复制上一行，将“deny”改为“allow”</div><div class="line">    <span class="comment"># Squid normally listens to port 3128</span></div><div class="line">    http_port <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3128</span>            //在端口前加入本地回环地址，只允许本地访问；</div></pre></td></tr></table></figure>
<h6 id="emsp-2、服务端安装Stunnel："><a href="#emsp-2、服务端安装Stunnel：" class="headerlink" title="&emsp;2、服务端安装Stunnel："></a>&emsp;2、服务端安装Stunnel：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#yum install -y stunnel     //yum安装Stunnel</span></div></pre></td></tr></table></figure>
<h6 id="emsp-3、生成加密代理证书："><a href="#emsp-3、生成加密代理证书：" class="headerlink" title="&emsp;3、生成加密代理证书："></a>&emsp;3、生成加密代理证书：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#cd /etc/stunnel</span></div><div class="line"><span class="comment">#openssl req -new -x509 -days 3650 -nodes -out stunnel.pem -keyout stunnel.pem     //生成证书</span></div><div class="line">Generating a <span class="number">2048</span> bit RSA private key</div><div class="line">.....+++</div><div class="line">....+++</div><div class="line">writing new private key to <span class="string">'stunnel.pem'</span></div><div class="line">-----</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter <span class="keyword">is</span> what <span class="keyword">is</span> called a Distinguished Name <span class="keyword">or</span> a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (<span class="number">2</span> letter code) [XX]:CN                            //国家字母代码</div><div class="line">State <span class="keyword">or</span> Province Name (full name) []:BeiJing                   //省份</div><div class="line">Locality Name (eg, city) [Default City]:BeiJing                 //城市</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:          //组织名称</div><div class="line">Organizational Unit Name (eg, section) []:                      //组织单位名称</div><div class="line">Common Name (eg, your name <span class="keyword">or</span> your serve<span class="string">r's hostname) []:       //当前系统的主机名</span></div><div class="line">Email Address []:                                               //邮件地址</div></pre></td></tr></table></figure>
<p>&emsp;结束后会在/etc/stunnel/目录下生成一个stunnel.pem的文件；</p>
<h6 id="emsp-4、配置Stunnel："><a href="#emsp-4、配置Stunnel：" class="headerlink" title="&emsp;4、配置Stunnel："></a>&emsp;4、配置Stunnel：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#vim /etc/stunnel/stunnel.conf      //stunnel.conf如果没有可以自行创建；</span></div><div class="line">client = no</div><div class="line">cert = /etc/stunnel/stunnel.pem     //配置加密代理证书</div><div class="line">CAfile = /etc/stunnel/stunnel.pem</div><div class="line">[https]</div><div class="line">accept = <span class="number">34567</span>                      //服务端口</div><div class="line">connect = <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3128</span>            //指向本地的Squid服务端口</div></pre></td></tr></table></figure>
<h6 id="emsp-5、启动服务并检查："><a href="#emsp-5、启动服务并检查：" class="headerlink" title="&emsp;5、启动服务并检查："></a>&emsp;5、启动服务并检查：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#systemctl start squid.service      //启动Squid；</span></div><div class="line"><span class="comment">#stunnel        //启动Stunnel；</span></div><div class="line"><span class="comment">#ss -tunlp      //检测端口判断服务是否启动；</span></div><div class="line">Netid State      Recv-Q Send-Q       Local Address:Port        Peer Address:Port</div><div class="line">tcp   LISTEN     <span class="number">0</span>      <span class="number">128</span>              <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3128</span>                   *:*           //squid服务            </div><div class="line">tcp   LISTEN     <span class="number">0</span>      <span class="number">128</span>                      *:<span class="number">34567</span>                  *:*           //Stunnel服务</div></pre></td></tr></table></figure>
<h6 id="emsp-6、对公网开放34567端口；"><a href="#emsp-6、对公网开放34567端口；" class="headerlink" title="&emsp;6、对公网开放34567端口；"></a>&emsp;6、对公网开放34567端口；</h6><p>&emsp;在Centos 7的默认防火墙Firewall上放行TCP:34567端口:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#firewall-cmd --zone=public --add-port=34567/tcp --permanent</span></div></pre></td></tr></table></figure></p>
<p>&emsp;在阿里云控制台里面添加端口映射后，在客户端上面测试是否能够正常访问Stunnel端口：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\wang&gt;telnet Service_IP <span class="number">34567</span></div></pre></td></tr></table></figure></p>
<p>&emsp;如果命令执行后没有报错，cmd.exe窗口显示的是一个黑屏，说明服务能够正常使用；</p>
<h5 id="四、客户端配置："><a href="#四、客户端配置：" class="headerlink" title="四、客户端配置："></a><strong>四、客户端配置：</strong></h5><h6 id="emsp-1、安装stunnel-exe客户端后直接运行；"><a href="#emsp-1、安装stunnel-exe客户端后直接运行；" class="headerlink" title="&emsp;1、安装stunnel.exe客户端后直接运行；"></a>&emsp;1、安装stunnel.exe客户端后直接运行；</h6><h6 id="emsp-2、配置Stunnel客户端："><a href="#emsp-2、配置Stunnel客户端：" class="headerlink" title="&emsp;2、配置Stunnel客户端："></a>&emsp;2、配置Stunnel客户端：</h6><p>&emsp;&emsp;在电脑托盘里右键单击Stunnel图标，选择“Edit Configure”后清空预配添加如下配置:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">client=yes</div><div class="line">[https]</div><div class="line">accept=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8088</span>       //在浏览器里面添加的代理地址和端口号；</div><div class="line">connect=Service_IP:<span class="number">34567</span>      //对应服务器的IP和端口；</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;我使用的是Chrome浏览器，在里面添加了Proxy SwitchyOmega扩展程序，能够灵活的设置代理上网，也可以添加相应的匹配规则，让需要代理网址的走Stunnel访问，国内的网站正常（不走Stunnel）的访问；</p>
]]></content>
      
        
        <tags>
            
            <tag> Squid/Stunnel/代理上网 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-9、正则表达式]]></title>
      <url>/2017/07/27/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-9%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;&emsp;<strong>正则表达式（REGEXP）</strong>是一类字符所书写的模式，其中很多字符不表示其字面意义，而是表达控制或通配等功能。通常被用来检索、替换那些符合某个规则的文本。  </p>
<h4 id="程序支持"><a href="#程序支持" class="headerlink" title="程序支持"></a>程序支持</h4><p>&emsp;&emsp;<em>Grep,Sed,Awk,Vim, Less,Nginx,Varnish等;</em>  </p>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>&emsp;&emsp;基本正则表达式：BRE<br>&emsp;&emsp;扩展正则表达式：ERE  </p>
<h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h4><p>&emsp;&emsp;不表示其字面意义，而用于额外功能性描述；<br>&emsp;&emsp;<strong>元字符分类:</strong>字符匹配、匹配次数、位置锚定，分组；  </p>
<h5 id="基本正则表达式的元字符："><a href="#基本正则表达式的元字符：" class="headerlink" title="基本正则表达式的元字符："></a>基本正则表达式的元字符：</h5><h6 id="字符匹配："><a href="#字符匹配：" class="headerlink" title="字符匹配："></a>字符匹配：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">. 匹配任意单个字符</div><div class="line">[] 匹配指定范围内的任意单个字符</div><div class="line">[^] 匹配指定范围外的任意单个字符</div><div class="line">[0-9],[:digit:] 十进制数字 </div><div class="line">[a-z],[:lower:] 小写字母</div><div class="line">[A-Z],[:upper:] 大写字母</div><div class="line">[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z</div><div class="line">[:alnum:] 字母和数字</div><div class="line">[:space:] 水平和垂直的空白字符（比[:blank:]包含的范围广）</div><div class="line">[:blank:] 空白字符（空格和制表符）</div><div class="line">[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）</div><div class="line">[:xdigit:]十六进制数字</div><div class="line">[:graph:] 可打印的非空白字符</div><div class="line">[:<span class="built_in">print</span>:] 可打印字符</div><div class="line">[:punct:] 标点符号</div></pre></td></tr></table></figure>
<h6 id="匹配次数："><a href="#匹配次数：" class="headerlink" title="匹配次数："></a>匹配次数：</h6><p>&emsp;&emsp;<strong>作用:</strong> 用于实现指定其前面的字符所能够出现的次数.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">* 匹配前面的字符任意次，包括0次(贪婪模式：尽可能长的匹配)</div><div class="line">.* 任意长度的任意字符</div><div class="line">\? 匹配其前面的字符0或1次</div><div class="line">\+ 匹配其前面的字符至少1次</div><div class="line">\&#123;n\&#125; 匹配前面的字符n次</div><div class="line">\&#123;m,n\&#125; 匹配前面的字符至少m次，至多n次</div><div class="line">\&#123;,n\&#125; 匹配前面的字符至多n次</div><div class="line">\&#123;n,\&#125; 匹配前面的字符至少n次</div></pre></td></tr></table></figure></p>
<h6 id="位置锚定："><a href="#位置锚定：" class="headerlink" title="位置锚定："></a>位置锚定：</h6><p>&emsp;&emsp;<strong>作用:</strong> 定位出现的位置；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">^ 行首锚定，写在模式的最左侧</div><div class="line">$ 行尾锚定，写在模式的最右侧</div><div class="line">^PATTERN$ 用于模式匹配整行</div><div class="line">^$ 空行</div><div class="line">^[[:space:]]*$ 空白行</div><div class="line">\&lt; 或 \b 词首锚定，用于单词模式的左侧   </div><div class="line">\&gt; 或 \b 词尾锚定；用于单词模式的右侧</div><div class="line">\&lt;PATTERN\&gt; 匹配整个单词</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Note:不包含特殊字符的连续字符组成的串叫单词：</p>
</blockquote>
<h6 id="分组："><a href="#分组：" class="headerlink" title="分组："></a>分组：</h6><p>&emsp;&emsp;<code>\(\)</code>将一个或多个字符捆绑在一起，当作一个整体进行处理.<br>&emsp;&emsp;<strong>如：</strong> <code>\(root\)\+</code></p>
<p>&emsp;&emsp;分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中,这些变量的命名方式为:<code>\1, \2, \3, ...</code><br>&emsp;&emsp;<code>\1</code> 表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符<br><strong>示例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\(string1\+\(string2\)*\)</div><div class="line">\1 ： string1\+\(string2\)*</div><div class="line">\2 ： string2</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;<strong>后向引用：</strong>引用前面的分组括号中的模式所匹配字符，而非模式本身.  </p>
<h6 id="或者："><a href="#或者：" class="headerlink" title="或者：\|"></a>或者：<code>\|</code></h6><p>&emsp;&emsp;示例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a\|b: a或b C\|cat: C或cat \(C\|c\)at:Cat或cat</div></pre></td></tr></table></figure></p>
<h5 id="扩展正则表达式的元字符："><a href="#扩展正则表达式的元字符：" class="headerlink" title="扩展正则表达式的元字符："></a>扩展正则表达式的元字符：</h5><h6 id="字符匹配：-1"><a href="#字符匹配：-1" class="headerlink" title="字符匹配："></a>字符匹配：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">. 任意单个字符</div><div class="line">[] 指定范围的字符</div><div class="line">[^] 不在指定范围的字符</div></pre></td></tr></table></figure>
<h6 id="次数匹配："><a href="#次数匹配：" class="headerlink" title="次数匹配："></a>次数匹配：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">*：匹配前面字符任意次</div><div class="line">?: 0或1次</div><div class="line">+： 1次或多次</div><div class="line">&#123;m&#125;：匹配m次</div><div class="line">&#123;m,n&#125;：至少m，至多n次</div></pre></td></tr></table></figure>
<h6 id="位置锚定：-1"><a href="#位置锚定：-1" class="headerlink" title="位置锚定："></a>位置锚定：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">^ :行首</div><div class="line">$ :行尾</div><div class="line">\&lt;, \b :语首</div><div class="line">\&gt;, \b :语尾</div></pre></td></tr></table></figure>
<h6 id="分组：-1"><a href="#分组：-1" class="headerlink" title="分组："></a>分组：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">()</div><div class="line">后向引用： \1, \2, ...</div></pre></td></tr></table></figure>
<h6 id="或者：-1"><a href="#或者：-1" class="headerlink" title="或者："></a>或者：</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">a|b: a或b</div><div class="line">C|cat: C或cat</div><div class="line">(C|c)at:Cat或cat</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-8、vim文本编辑器]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-8%E3%80%81vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-7、文本处理工具]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-7%E3%80%81%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;&emsp;作为运维人员，我们经常需要查看、分析和统计日志等信息，在这里，我对初级的文本处理工具的学习做一个小总结。<br><strong>本文提到的命令：</strong><br>&emsp;&emsp;<em>查看文件内容：</em> <code>cat</code>、<code>more</code>、<code>less</code><br>&emsp;&emsp;<em>文件截取：</em> <code>head</code> 和 <code>tail</code><br>&emsp;&emsp;<em>按列抽取:</em>  <code>cut</code><br>&emsp;&emsp;<em>文本数据统计：</em> <code>wc</code><br>&emsp;&emsp;<em>文本排序：</em> <code>sort</code><br>&emsp;&emsp;<em>去重复的行：</em> <code>uniq</code><br>&emsp;&emsp;<em>按关键字抽取：</em><code>grep</code>  </p>
<h4 id="文件查看命令"><a href="#文件查看命令" class="headerlink" title="文件查看命令"></a>文件查看命令</h4><h5 id="标准输入文件：cat"><a href="#标准输入文件：cat" class="headerlink" title="标准输入文件：cat"></a>标准输入文件：cat</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数:</strong><br><code>-E</code>: 显示行结束符&amp;；<br><code>-n</code>: 对显示出的每一行进行编号；<br><code>-A</code>: 显示所有控制符；<br><code>-b</code>: 非空行编号；<br><code>-s</code>: 压缩连续的空行成一行；  </p>
<h5 id="分页查看文件：more"><a href="#分页查看文件：more" class="headerlink" title="分页查看文件：more"></a>分页查看文件：more</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">more [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-d</code>: 显示翻页及退出提示；</p>
<h5 id="按页查看文件：less"><a href="#按页查看文件：less" class="headerlink" title="按页查看文件：less"></a>按页查看文件：less</h5><p><strong>用法:</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">less [FILE]...</div></pre></td></tr></table></figure></p>
<p><em>查看时常用的命令：</em><br><code>/文本</code>: 搜索“文本”；<br><code>n/N</code>: 跳到<code>下一个</code>或<code>上一个</code>匹配；</p>
<blockquote>
<p>Note: man命令使用的就是less分页器；</p>
</blockquote>
<h5 id="显示文本前-行的内容：head"><a href="#显示文本前-行的内容：head" class="headerlink" title="显示文本前#行的内容：head"></a>显示文本前#行的内容：head</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-c #</code>: 指定获取前#字节；<br><code>-n #</code>: 指定获取前#字节；<br><code>-#</code>: 指定行数；  </p>
<h5 id="显示文本后-行的内容：tail"><a href="#显示文本后-行的内容：tail" class="headerlink" title="显示文本后#行的内容：tail"></a>显示文本后#行的内容：tail</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tail [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-c #</code>: 指定获取后#字节；<br><code>-n #</code>: 指定获取后#字节；<br><code>- #</code>: 指定行数；<br><code>-f</code>: 跟踪显示文件新追加的内容，常用日志监控；  </p>
<h4 id="文本处理类命令："><a href="#文本处理类命令：" class="headerlink" title="文本处理类命令："></a>文本处理类命令：</h4><h5 id="按列抽取文本：cut"><a href="#按列抽取文本：cut" class="headerlink" title="按列抽取文本：cut"></a>按列抽取文本：cut</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cut [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-d DELIMITER</code>: 指明分隔符，默认tab；<br><code>-f FILEDS</code>:<br>&emsp;&emsp;<code>#</code>: 第#字段；<br>&emsp;&emsp;<code>#,#[,#]</code>: 离散的多个字段，例如1,3,6；<br>&emsp;&emsp;<code>#-#</code>: 1-3,7;<br>&emsp;&emsp;<code>-c</code>: 按字符切割；<br>&emsp;&emsp;<code>--output-delimiter=STRING</code>指明输出分隔符；<br><strong>示例：</strong><br>显示文件或STDIN数据的指定列：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$cut</span> -d: -f1 /etc/passwd</div><div class="line"><span class="variable">$cat</span> /etc/passwd | cut -d: -f7</div><div class="line"><span class="variable">$cut</span> -c2-5 /usr/share/dict/words</div></pre></td></tr></table></figure></p>
<h5 id="合并两个文件同行号的列到一行：paste"><a href="#合并两个文件同行号的列到一行：paste" class="headerlink" title="合并两个文件同行号的列到一行：paste"></a>合并两个文件同行号的列到一行：paste</h5><p><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paste [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-d 分隔符</code>: 指定分隔符，默认用TAB;<br><code>-s</code>: 所有行合成一行显示；<br><strong>示例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$paste</span> f1 f2</div><div class="line"><span class="variable">$paste</span> -s f1 f2</div></pre></td></tr></table></figure></p>
<h5 id="文本数据统计：wc"><a href="#文本数据统计：wc" class="headerlink" title="文本数据统计：wc"></a>文本数据统计：wc</h5><p>&emsp;&emsp;对文件或STDIN（标准输出）的数据，做单词总数、行总数、字节总数字符总数的统计。<br><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wc [OPTION]...[FILE]...</div><div class="line"></div><div class="line"><span class="variable">$wc</span> story.txt</div><div class="line">39      237     1901        story.txt</div><div class="line">行数    字数    字符数</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-l</code>: 只统计行数；<br><code>-w</code>: 只统计单词总数；<br><code>-c</code>: 只统计字节总数；<br><code>-m</code>: 只统计字符总数；  </p>
<h5 id="文本排序：-sort"><a href="#文本排序：-sort" class="headerlink" title="文本排序： sort"></a>文本排序： sort</h5><p>&emsp;&emsp;把整理过的文本显示在标准输出，不会改变原始文件。<br><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sort [OPTIONS]...[FILES]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-r</code>: 执行反方向（由上至下）整理；<br><code>-n</code>: 执行按数字大小整理；<br><code>-f</code>: 选项忽略（fold）字符串中的字符大小写；<br><code>-u</code>: 选项（独特，unique）删除输出中的重复行；<br><code>-t c</code>: 选项使用<code>c</code>作为字符界定符；<br><code>-k X</code>: 选项安装使用<code>c</code>字符分隔的<code>X</code>列来整理能够使用多次；  </p>
<h5 id="去除重复的行：uniq"><a href="#去除重复的行：uniq" class="headerlink" title="去除重复的行：uniq"></a>去除重复的行：uniq</h5><p>&emsp;&emsp;从输入中删除前后相接的重复的行；<br><strong>用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uniq [OPTION]...[FILE]...</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>-c</code>: 显示每行重复出现的次数；<br><code>-d</code>: 仅显示重复出现的行；<br><code>-u</code>: 仅显示不曾重复的行；</p>
<blockquote>
<p>Note: 连续且完全想用方为重复；<br>常和sort命令一起配合使用：<code>sort userlist.txt | uniq -c</code></p>
</blockquote>
<h5 id="文件对比：diff-和-patch"><a href="#文件对比：diff-和-patch" class="headerlink" title="文件对比：diff 和 patch"></a>文件对比：diff 和 patch</h5><h6 id="比较文件：diff"><a href="#比较文件：diff" class="headerlink" title="比较文件：diff"></a>比较文件：diff</h6><p>&emsp;&emsp;比较两个文件之间的区别；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$diff foo.conf-broken foo.conf-works5c5</div><div class="line">&lt;   use_widgets = no</div><div class="line">---</div><div class="line">&gt;   use_widgets = yes</div></pre></td></tr></table></figure></p>
<blockquote>
<p>注明第5行有区别（改变）。  </p>
</blockquote>
<h6 id="复制对文件改变：patch"><a href="#复制对文件改变：patch" class="headerlink" title="复制对文件改变：patch"></a>复制对文件改变：patch</h6><p><code>diff</code>: 命令的输入被保存在一种叫做“补丁”的文件中。 </p>
<blockquote>
<p>使用<code>-u</code>选项来输出“统一的（unified）”diff格式文件，最适用于补丁文件。<br><code>patch</code>: 复制在其它文件中进行的改变（要谨慎使用）<br>使用<code>-b</code>选项来自动备份改变了的文件；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$diff -u foo.conf-broken foo.conf-works &gt; foo.patch</div><div class="line">$patch -b foo.conf-broken foo.patch</div></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="文本过滤：grep"><a href="#文本过滤：grep" class="headerlink" title="文本过滤：grep"></a>文本过滤：grep</h4><p>&emsp;&emsp;文本搜索工具，根据用户指定的正则表达式字符及文本字符所编写的过滤条件，对目标文本逐行进行匹配检查，打印匹配到的行。<br><strong>用法：</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">grep [OPTIONS] PATTERN [FILE...]</div><div class="line">    grep root /etc/passwd</div><div class="line">    grep <span class="string">"$USER"</span> /etc/passwd</div><div class="line">    grep <span class="string">'$USER'</span> /etc/passwd</div><div class="line">    grep `whoami` /etc/passwd</div></pre></td></tr></table></figure></p>
<p><strong>参数：</strong><br><code>--color=auto</code>: 对匹配到的文本着色显示；（Centos 7默认已使用alias设置此参数）<br><code>-v</code>: 显示不被pattern匹配到的行；<br><code>-i</code>: 忽略字符大小写；<br><code>-n</code>: 显示匹配的行号；<br><code>-c</code>: 统计匹配的行数；<br><code>-o</code>: 仅显示匹配到的字符串；<br><code>-q</code>: 静默模式，不输出任何信息;<br><code>-A #</code> : after,同时显示匹配行的后#行;<br><code>-B #</code>: before,同时显示匹配行的前#行；<br><code>-c #</code>: context,同时显示匹配行的前后各#行；<br><code>-e</code>: 实现多个选项间的逻辑or关系；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep -e <span class="string">'cat'</span> -e <span class="string">'dog'</span> file</div></pre></td></tr></table></figure></p>
<p><code>-w</code>: 匹配整个单词；<br><code>-E</code>: 使用ERE;<br><code>-F</code>: 相当于fgrep，不支持正则表达式；</p>
]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-6、用户组和权限管理]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-6%E3%80%81%E7%94%A8%E6%88%B7%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-5、重定向和管道]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-5%E3%80%81%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E7%AE%A1%E9%81%93/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-4、文件管理类命令]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-4%E3%80%81%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B1%BB%E5%91%BD%E4%BB%A4/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-2、文件管理类命令]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-2%E3%80%81%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B1%BB%E5%91%BD%E4%BB%A4/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-1、线上查询及帮助命令]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-1%E3%80%81%E7%BA%BF%E4%B8%8A%E6%9F%A5%E8%AF%A2%E5%8F%8A%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>&emsp;&emsp;Linux命令分为<strong>内部命令</strong>和<strong>外部命令</strong>；<br>&emsp;&emsp;<strong>内部命令：</strong> 由shell自带的命令。在系统启动时就调入内存，是常驻内存的，所以执行效率高。<br>&emsp;&emsp;<strong>外部命令：</strong> 由系统的软件提供的命令；，用户需要时才从硬盘中读入内存；  </p>
<h4 id="判断一个命令是否为内部命令：type"><a href="#判断一个命令是否为内部命令：type" class="headerlink" title="判断一个命令是否为内部命令：type"></a>判断一个命令是否为内部命令：type</h4><p>&emsp;&emsp;<strong>常见用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">type</span> COMMAND</div></pre></td></tr></table></figure></p>
<h4 id="显示内部命令列表：help"><a href="#显示内部命令列表：help" class="headerlink" title="显示内部命令列表：help"></a>显示内部命令列表：help</h4><p>&emsp;&emsp;<strong>常见用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#help</span></div></pre></td></tr></table></figure></p>
<h4 id="列出内部命令列表：enable"><a href="#列出内部命令列表：enable" class="headerlink" title="列出内部命令列表：enable"></a>列出内部命令列表：enable</h4><p>&emsp;&emsp;<strong>常见用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">enable</span> COMMAND: 启用内部命令；</div><div class="line">        -n COMMAND: 禁用某个命令；</div><div class="line">        -n：查看被禁用的所有内部命令；</div></pre></td></tr></table></figure></p>
<h4 id="hash缓存表："><a href="#hash缓存表：" class="headerlink" title="hash缓存表："></a>hash缓存表：</h4><p>&emsp;&emsp;系统初始hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当再次使用该命令时， shell解释器首先会查看hash表，存在将执行之，如果不存在，将会去PATH路径下寻找。利用hash缓存表可大大提高命令的调用速率。<br>&emsp;&emsp;<strong>常见用法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">hash</span>: 显示<span class="built_in">hash</span>缓存</div><div class="line"><span class="built_in">hash</span> –l: 显示<span class="built_in">hash</span>缓存，可作为输入使用</div><div class="line"><span class="built_in">hash</span> –p path name: 将命令全路径path起别名为name</div><div class="line"><span class="built_in">hash</span> –t name: 打印缓存中name的路径</div><div class="line"><span class="built_in">hash</span> –d name: 清除name缓存</div><div class="line"><span class="built_in">hash</span> –r: 清除缓存</div></pre></td></tr></table></figure></p>
<h4 id="使用命令帮助：man"><a href="#使用命令帮助：man" class="headerlink" title="使用命令帮助：man"></a>使用命令帮助：man</h4><p>&emsp;&emsp;手册存放在<code>/usr/share/man</code>里，几乎每个命令都有man的“页面”;<br>&emsp;&emsp;<strong>配置文件：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/man.config | man_db.conf</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;<strong>常用选项：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">man [OPTION] COMMAND</div><div class="line">    -M：到指定位置下搜索COMMAND命令的手册页并显示；</div><div class="line">    -a：列出所有帮助；</div><div class="line">    -k：列出所有匹配的页面，使用whatis数据库；</div><div class="line">    -f：相当于whatis；</div><div class="line">    -w：打印man帮助的文件路径；</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;<strong>man命令的操作方法：使用less命令实现</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">space,^v,^f，^F: 向文件尾部翻屏；</div><div class="line">b,^b: 向文首部翻屏；</div><div class="line">d,^d: 向文件尾部翻半屏；</div><div class="line">u，^u: 向文件首部翻半屏；</div><div class="line">RETURN,^N,e,^E or ^J: 向文件尾部翻一行；</div><div class="line">y or ^Y or ^P or k or ^K：向文件首部翻一行</div><div class="line">q: 退出</div><div class="line"><span class="comment">#：跳转至第#行</span></div><div class="line">1G: 回到文件首部</div><div class="line">G：翻至文件尾部</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;<strong>使用man搜索：</strong><br>&emsp;&emsp;&emsp;<strong>/KEYWORD:</strong><br>&emsp;&emsp;&emsp;&emsp; &emsp;以KEYWORD指定的字符串为关键字，从当前位置向文件尾部搜索；不区分字符大小写；<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<strong>n: 下一个<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;N：上一个</strong><br>&emsp;&emsp;&emsp;<strong>?KEYWORD:</strong><br>&emsp;&emsp;&emsp;&emsp;&emsp;以KEYWORD指定的字符串为关键字，从当前位置向文件首部搜索；不区分字符大小写；<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<strong>n: 跟搜索命令同方向，下一个<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;N：跟搜索命令反方向，上一个</strong>  </p>
<h4 id="info-适合通用文档参考"><a href="#info-适合通用文档参考" class="headerlink" title="info: 适合通用文档参考:"></a>info: 适合通用文档参考:</h4><p>&emsp;&emsp;<strong>使用方法：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#info COMMAND</span></div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;没有参数，列出所有的页面；页面结构就想一个网站，每一页分为“节点”，链接节点之前*<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">方向键: PgUp， PgDn 导航  </div><div class="line">Tab键: 移动到下一个链接  </div><div class="line">d: 显示主题目录  </div><div class="line">Home: 显示主题首部  </div><div class="line">Enter: 进入选定链接  </div><div class="line">n/p/u/l: 进入下/前/上一层/最后一个链接  </div><div class="line">s: 文字 文本搜索  </div><div class="line">q: 退出 info</div></pre></td></tr></table></figure></p>
<h4 id="查看命令或文件的的路径-whereis"><a href="#查看命令或文件的的路径-whereis" class="headerlink" title="查看命令或文件的的路径: whereis"></a>查看命令或文件的的路径: whereis</h4><p>&emsp;&emsp;显示命令的简短描述；(需要使用数据库，刚安装后不可立即使用)<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;makewhatis | mandb 制作数据库<br>&emsp;&emsp;&emsp;&emsp;<strong>使用示例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">whatis cal </div><div class="line">    或 </div><div class="line">man -f cal</div></pre></td></tr></table></figure></p>
<h4 id="查看外部命令的路径which："><a href="#查看外部命令的路径which：" class="headerlink" title="查看外部命令的路径which："></a>查看外部命令的路径which：</h4><p>&emsp;&emsp;查看可执行程序文件的路径<br>&emsp;&emsp;<strong>常用选项：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">which</span> [OPTION]...COMMAND</div><div class="line">        -a: 查看全部</div><div class="line">        --skip-alias：忽略别名</div></pre></td></tr></table></figure></p>
<h4 id="命令别名：alias"><a href="#命令别名：alias" class="headerlink" title="命令别名：alias"></a>命令别名：alias</h4><p>&emsp;&emsp;<strong>使用示例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> NAME=<span class="string">'VALUE'</span>   //定义别名NAME,其相当于执行命令VALUE:  </div><div class="line"><span class="built_in">alias</span>：显示当前shell进程所有可用的命令别名；</div></pre></td></tr></table></figure></p>
<blockquote>
<p><strong>Note:</strong> 在命令行中定义的别名，仅对当前shell进程有效，如果想永久有效，要定义在配置文件中：<br>&emsp;&emsp;&emsp;&emsp;<strong>仅对当前用户：</strong>~/.bashrc<br>&emsp;&emsp;&emsp;&emsp;<strong>对所有用户有效：</strong>/etc/bashrc<br>&emsp;&emsp;&emsp;编辑配置给出的新配置不会立即生效，需要使用source重新读取配置文件；</p>
</blockquote>
<h4 id="撤销命令别名：-unalias"><a href="#撤销命令别名：-unalias" class="headerlink" title="撤销命令别名：    unalias"></a>撤销命令别名：    unalias</h4><p>&emsp;&emsp;<strong>使用示例：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">unalias</span> [OPTION] NAME</div><div class="line">        -a：取消所有别名；</div></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;<strong>如果别名同原命令同名，如果要执行原命令，可以使用：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">\COMMAND</div><div class="line"><span class="string">'COMMAND'</span></div><div class="line">/PATH/COMMAND:外部命令</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux常用命令 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-目录]]></title>
      <url>/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<h4 id="Linux常用命令总结"><a href="#Linux常用命令总结" class="headerlink" title="Linux常用命令总结"></a>Linux常用命令总结</h4><h6 id="1、线上查询及帮助命令"><a href="#1、线上查询及帮助命令" class="headerlink" title="1、线上查询及帮助命令"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-1%E3%80%81%E7%BA%BF%E4%B8%8A%E6%9F%A5%E8%AF%A2%E5%8F%8A%E5%B8%AE%E5%8A%A9%E5%91%BD%E4%BB%A4/">1、线上查询及帮助命令</a></h6><h6 id="2、文件管理类命令"><a href="#2、文件管理类命令" class="headerlink" title="2、文件管理类命令"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-2%E3%80%81%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B1%BB%E5%91%BD%E4%BB%A4/">2、文件管理类命令</a></h6><h6 id="3、查看命令历史"><a href="#3、查看命令历史" class="headerlink" title="3、查看命令历史"></a><a href="http://blog.wangbinzhou.com/2017/07/22/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-3%E3%80%81%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4%E5%8E%86%E5%8F%B2/">3、查看命令历史</a></h6><h6 id="4、文件管理类命令"><a href="#4、文件管理类命令" class="headerlink" title="4、文件管理类命令"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-4%E3%80%81%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B1%BB%E5%91%BD%E4%BB%A4/">4、文件管理类命令</a></h6><h6 id="5、重定向和管道"><a href="#5、重定向和管道" class="headerlink" title="5、重定向和管道"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-5%E3%80%81%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E7%AE%A1%E9%81%93/">5、重定向和管道</a></h6><h6 id="6、用户组和权限管理"><a href="#6、用户组和权限管理" class="headerlink" title="6、用户组和权限管理"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-6%E3%80%81%E7%94%A8%E6%88%B7%E7%BB%84%E5%92%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/">6、用户组和权限管理</a></h6><h6 id="7、文本处理工具"><a href="#7、文本处理工具" class="headerlink" title="7、文本处理工具"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-7%E3%80%81%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/">7、文本处理工具</a></h6><h6 id="8、vim文本编辑器"><a href="#8、vim文本编辑器" class="headerlink" title="8、vim文本编辑器"></a><a href="http://blog.wangbinzhou.com/2017/07/25/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-8%E3%80%81vim%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8/">8、vim文本编辑器</a></h6><h6 id="9、正则表达式"><a href="#9、正则表达式" class="headerlink" title="9、正则表达式"></a><a href="http://blog.wangbinzhou.com/2017/07/27/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-9%E3%80%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/">9、正则表达式</a></h6><h6 id="10、文件查找之locate和find"><a href="#10、文件查找之locate和find" class="headerlink" title="10、文件查找之locate和find"></a><a href="http://blog.wangbinzhou.com/2017/08/01/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%EF%BC%9A10%E3%80%81%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E4%B9%8Blocate%E5%92%8Cfind/">10、文件查找之locate和find</a></h6><h6 id="11、Linux计划任务"><a href="#11、Linux计划任务" class="headerlink" title="11、Linux计划任务"></a><a href="http://blog.wangbinzhou.com/2017/08/24/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-11%E3%80%81Linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/">11、Linux计划任务</a></h6>]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用命令总结-3、查看命令历史]]></title>
      <url>/2017/07/22/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-3%E3%80%81%E6%9F%A5%E7%9C%8B%E5%91%BD%E4%BB%A4%E5%8E%86%E5%8F%B2/</url>
      <content type="html"><![CDATA[<h4 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h4><h5 id="emsp-1、说明："><a href="#emsp-1、说明：" class="headerlink" title="&emsp;1、说明："></a>&emsp;1、说明：</h5><p>&emsp;&emsp;&emsp;<strong>history是Shell的内置命令，用来查看以前执行过的命令。</strong>  </p>
<h5 id="emsp-2、配置文件"><a href="#emsp-2、配置文件" class="headerlink" title="&emsp;2、配置文件"></a>&emsp;2、配置文件</h5><p>&emsp;&emsp;&emsp;<strong>当登陆Shell时，会读取命令历史文件~/.bash_history中记录下的命令。登录进shell后新执行的命令只会记录在缓存中，这些命令在用户退出时会“追加”至命令历史文件~/.bash_history中。</strong></p>
<h4 id="二、相关参数"><a href="#二、相关参数" class="headerlink" title="二、相关参数"></a>二、相关参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">history</span>:</div><div class="line">		-c: 清空历史命令；  </div><div class="line">		-d: 删除历史中的第N个命令；  </div><div class="line">		 N: 显示最近的N条历史；  </div><div class="line">		-a: 追加本次会话新执行的命令至命令历史文件中;  </div><div class="line">		-n: 读命令历史文件中未读过的行到历史列表；  </div><div class="line">		-r: 读命令历史文件附加到历史列表；  </div><div class="line">		-w: 保存历史列表到指定的命令历史文件中；  </div><div class="line">		-p: 展开历史参数成多行，但不存在历史列表中；  </div><div class="line">		-s: 展开历史参数成一行，附加在历史列表后；</div></pre></td></tr></table></figure>
<h4 id="三、history的常用快捷方式"><a href="#三、history的常用快捷方式" class="headerlink" title="三、history的常用快捷方式"></a>三、history的常用快捷方式</h4><h5 id="emsp-1-重复前一个命令的4个方法："><a href="#emsp-1-重复前一个命令的4个方法：" class="headerlink" title="&emsp;1. 重复前一个命令的4个方法："></a>&emsp;1. 重复前一个命令的4个方法：</h5><h6 id="emsp-emsp-emsp-按↑键并回车执行"><a href="#emsp-emsp-emsp-按↑键并回车执行" class="headerlink" title="&emsp;&emsp;&emsp;按↑键并回车执行;"></a>&emsp;&emsp;&emsp;按<strong>↑</strong>键并回车执行;</h6><h6 id="emsp-emsp-emsp-按-并执行回车；"><a href="#emsp-emsp-emsp-按-并执行回车；" class="headerlink" title="&emsp;&emsp;&emsp;按 !!并执行回车；"></a>&emsp;&emsp;&emsp;按 <strong>!!</strong>并执行回车；</h6><h6 id="emsp-emsp-emsp-输入-1并执行回车"><a href="#emsp-emsp-emsp-输入-1并执行回车" class="headerlink" title="&emsp;&emsp;&emsp;输入!-1并执行回车;"></a>&emsp;&emsp;&emsp;输入<strong>!-1</strong>并执行回车;</h6><h6 id="emsp-emsp-emsp-按Ctrl-P并执行回车；"><a href="#emsp-emsp-emsp-按Ctrl-P并执行回车；" class="headerlink" title="&emsp;&emsp;&emsp;按Ctrl+P并执行回车；"></a>&emsp;&emsp;&emsp;按<strong>Ctrl+P</strong>并执行回车；</h6><h5 id="emsp-2-在命令历史中搜索命令："><a href="#emsp-2-在命令历史中搜索命令：" class="headerlink" title="&emsp;2. 在命令历史中搜索命令："></a>&emsp;2. 在命令历史中搜索命令：</h5><h6 id="emsp-emsp-emsp-Ctrl-r-在命令历史中搜索命令；"><a href="#emsp-emsp-emsp-Ctrl-r-在命令历史中搜索命令；" class="headerlink" title="&emsp;&emsp;&emsp;Ctrl + r : 在命令历史中搜索命令；"></a>&emsp;&emsp;&emsp;<strong>Ctrl + r</strong> : 在命令历史中搜索命令；</h6><h6 id="emsp-emsp-emsp-Ctrl-g-从命令历史搜索模式中退出；"><a href="#emsp-emsp-emsp-Ctrl-g-从命令历史搜索模式中退出；" class="headerlink" title="&emsp;&emsp;&emsp;Ctrl + g : 从命令历史搜索模式中退出；"></a>&emsp;&emsp;&emsp;<strong>Ctrl + g</strong> : 从命令历史搜索模式中退出；</h6><h5 id="emsp-3-要重新调用前一个命令中最后一个参数："><a href="#emsp-3-要重新调用前一个命令中最后一个参数：" class="headerlink" title="&emsp;3. 要重新调用前一个命令中最后一个参数："></a>&emsp;3. 要重新调用前一个命令中最后一个参数：</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Alt + .:	按住Alt键的同时点击 . 键</div><div class="line">Esc, . :	点击Esc键后松开，然后点击 . 键</div><div class="line">	 !$:	表示</div></pre></td></tr></table></figure>
<h5 id="emsp-4-其他命令历史快捷方式"><a href="#emsp-4-其他命令历史快捷方式" class="headerlink" title="&emsp;4. 其他命令历史快捷方式"></a>&emsp;4. 其他命令历史快捷方式</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">				  !n:	执行history命令输出对应序列号n的命令；  </div><div class="line">				 !-n:	执行history历史中倒数第n个命令；  </div><div class="line">				 !:<span class="number">0</span>:	执行前一条命令(去除参数);  </div><div class="line">			Ctrl + n:	显示当前历史中的下一条命令，但不执行；  </div><div class="line">			Ctrl + j:	执行当前命令；  </div><div class="line">			 !string:	重复前一个以“string”开头的命令；  </div><div class="line">			!?string:	重复前一个包含string的命令；  </div><div class="line">		   !string:p:	仅打印历史命令而不执行；  </div><div class="line">			 ^string:	删除上一条命令中第一个string；  </div><div class="line">	^string1^string2:	将上一条命令中的第一个string1替换为string2；  </div><div class="line">!:gs/string1/string2:	将上一条命令中所有的string1都替换为string2;</div></pre></td></tr></table></figure>
<h5 id="emsp-5-调用历史参数："><a href="#emsp-5-调用历史参数：" class="headerlink" title="&emsp;5. 调用历史参数："></a>&emsp;5. 调用历史参数：</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">command !^: 利用上一个命令的第一个参数做<span class="built_in">cmd</span>的参数;  </div><div class="line">command !$: 利用上一个命令的最后一个参数做<span class="built_in">cmd</span>的参数;  </div><div class="line">command !*: 利用上一个命令的全部参数做<span class="built_in">cmd</span>的参数;  </div><div class="line">command !:n: 利用上一个命令的第n个参数做<span class="built_in">cmd</span>的参数;  </div><div class="line">command !n:^: 调用第n条命令的第一个参数;  </div><div class="line">command !n:$: 调用第n条命令的最后一个参数;  </div><div class="line">command !n:m: 调用第n条命令的第m个参数;  </div><div class="line">command !n:*: 调用第n条命令的所有参数;  </div><div class="line">command !string:^: 从命令历史中搜索以 string 开头的命令，并获取它的第一个参数;  </div><div class="line">command !string:$: 从命令历史中搜索以 string 开头的命令,并获取它的最后一个参数;  </div><div class="line">command !string:n: 从命令历史中搜索以 string 开头的命令，并获取它的第n个参数;  </div><div class="line">command !string:*: 从命令历史中搜索以 string 开头的命令，并获取它的所有参数;  </div><div class="line">```  </div><div class="line">##### 四、命令历史相关环节变量：</div><div class="line">```dos</div><div class="line">HISTSIZE：命令历史记录的条数;  </div><div class="line">HISTFILE：指定历史文件，默认为~/.bash_history;  </div><div class="line">HISTFILESIZE：命令历史文件记录历史的条数;  </div><div class="line">HISTTIMEFORMAT="%F %T"：显示时间;  </div><div class="line">HISTIGNORE="str1:str2*:…"：忽略str1命令， str2开头的历史;</div></pre></td></tr></table></figure>
<h5 id="五、控制命令历史的记录方式："><a href="#五、控制命令历史的记录方式：" class="headerlink" title="五、控制命令历史的记录方式："></a>五、控制命令历史的记录方式：</h5><p>&emsp;<strong>通过修改环境变量：HISTCONTROL的相关参数来控制历史命令的记录方式：</strong></p>
<p>&emsp;&emsp;&emsp;<strong>HISTCONTROL相关参数：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ignoredups:默认，忽略重复的命令，连续且相同为“重复”  </div><div class="line">ignorespace:忽略所有以空白开头的命令  </div><div class="line">ignoreboth:相当于ignoredups, ignorespace的组合  </div><div class="line">erasedups:删除重复命令 </div><div class="line">``` </div><div class="line">&amp;emsp;&amp;emsp;&amp;emsp;**修改方式：**</div><div class="line">```bash</div><div class="line"><span class="comment">#export HISCONTROL="参数"  </span></div><div class="line">文件存放在 /etc/profile 或 ~/.bash_profile</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Linux常用命令总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
